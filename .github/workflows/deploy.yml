name: Deploy React App to AWS

on:
  push:
    branches:
      - test # Change to your production branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17.9.0 # Use your project's Node.js version

      # Step 3: Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Check Node & NPM version
      - name: Check node & npm version
        run: |
          node -v
          npm -v

      # Step 5: Install dependencies and build
      - name: Install dependencies and build
        run: |
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm config set timeout 120000
          npm install
          export NODE_OPTIONS=--openssl-legacy-provider
          export DANGEROUSLY_DISABLE_HOST_CHECK=true
          export REACT_APP_API_URL=https://startpos-api-test.startuptech.uk
          npm run build

      # Step 6: Deploy to AWS
      - name: Deploy to AWS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          AWS_HOST: ${{ secrets.AWS_HOST }}
          AWS_USER: ${{ secrets.AWS_USER }}
          AWS_PORT: ${{ secrets.AWS_PORT }}
          AWS_DEST_PATH: ${{ secrets.AWS_DEST_PATH }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem -P $AWS_PORT -r build/* $AWS_USER@$AWS_HOST:$AWS_DEST_PATH
          rm private_key.pem
