{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/order/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport OrderPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport OrderView from \"./view.js\";\nimport \"./style.css\";\nimport { DebounceInput } from 'react-debounce-input'; //import BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n//import Quagga from 'quagga';\n\nimport ProductView from \"./../product/view.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderCreate = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      selectedProducts = [];\n      setSelectedProducts([]);\n      selectedStores = [];\n      setSelectedStores([]);\n      selectedCustomers = [];\n      setSelectedCustomers([]);\n\n      if (cookies.get(\"user_id\")) {\n        selectedDeliveredByUsers = [{\n          id: cookies.get(\"user_id\"),\n          name: cookies.get(\"user_name\")\n        }];\n        formData.delivered_by = cookies.get(\"user_id\");\n        setFormData({ ...formData\n        });\n        setSelectedDeliveredByUsers([...selectedDeliveredByUsers]);\n      }\n\n      if (cookies.get('store_id')) {\n        formData.store_id = cookies.get('store_id');\n        formData.store_name = cookies.get('store_name');\n        formData.vat_percent = parseFloat(cookies.get('vat_percent'));\n        console.log(\"formData.store_id:\", formData.store_id);\n      }\n\n      formData.id = undefined;\n      formData.discount = 0.00;\n      formData.discount_percent = 0.00;\n      formData.shipping_handling_fees = 0.00;\n      formData.partial_payment_amount = 0.00;\n      formData.cash_discount = 0.00;\n      formData.payment_method = \"\";\n      formData.payment_status = \"\";\n      formData.code = \"\";\n      formData.net_total = 0.00;\n      formData.date_str = new Date();\n      formData.payments = [{\n        \"date_str\": new Date(),\n        \"amount\": \"\",\n        \"method\": \"\",\n        \"deleted\": false\n      }];\n      formData.cash_discount = 0.00;\n\n      if (id) {\n        getOrder(id);\n      }\n\n      setFormData({ ...formData\n      });\n      reCalculate();\n      setShow(true);\n    }\n\n  }));\n\n  function getOrder(id) {\n    console.log(\"inside get Order\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/order/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      formData = data.result;\n      formData.date_str = data.result.date;\n      /*\n      let order = data.result;\n      formData = {\n          id: order.id,\n          code: order.code,\n          store_id: purchase.store_id,\n          vendor_id: purchase.vendor_id,\n          date_str: purchase.date,\n          // date: purchase.date,\n          vat_percent: purchase.vat_percent,\n          discount: purchase.discount,\n          discount_percent: purchase.discount_percent,\n          status: purchase.status,\n          order_placed_by: purchase.order_placed_by,\n          order_placed_by_signature_id: purchase.order_placed_by_signature_id,\n          is_discount_percent: purchase.is_discount_percent,\n          partial_payment_amount: purchase.partial_payment_amount,\n          payment_method: purchase.payment_method,\n          payment_status: purchase.payment_status,\n          shipping_handling_fees: purchase.shipping_handling_fees,\n      };\n      */\n\n      if (formData.is_discount_percent) {\n        formData.discountValue = formData.discount_percent;\n      } else {\n        formData.discountValue = formData.discount;\n      }\n\n      selectedProducts = formData.products;\n      setSelectedProducts([...selectedProducts]);\n      let selectedStores = [{\n        id: formData.store_id,\n        name: formData.store_name\n      }];\n      let searchLabel = formData.customer_name;\n      let selectedCustomers = [{\n        id: formData.customer_id,\n        name: formData.customer_name,\n        search_label: searchLabel\n      }];\n      /*\n      let selectedOrderPlacedByUsers = [\n          {\n              id: formData.created_by,\n              name: formData.created_by_name\n          }\n      ];\n        setSelectedOrderPlacedByUsers([...selectedOrderPlacedByUsers]);\n      */\n\n      setSelectedStores([...selectedStores]);\n      setSelectedCustomers([...selectedCustomers]);\n      reCalculate();\n      setFormData({ ...formData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function-order.123\"); // event.preventDefault();\n\n        var form = event.target.form;\n\n        if (form && event.target) {\n          var index = Array.prototype.indexOf.call(form, event.target);\n\n          if (form && form.elements[index + 1]) {\n            if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n              form.elements[index].focus();\n            } else {\n              form.elements[index + 1].focus();\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  const selectedDate = new Date(); //const history = useHistory();\n\n  let [errors, setErrors] = useState({\n    \"payment_amount\": []\n  });\n  const [isProcessing, setProcessing] = useState(false);\n  const cookies = new Cookies(); //fields\n\n  let [formData, setFormData] = useState({\n    vat_percent: 15.0,\n    discountValue: 0.00,\n    discount: 0.00,\n    discount_percent: 0.0,\n    cash_discount: 0.00,\n    is_discount_percent: false,\n    date_str: new Date(),\n    signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n    status: \"delivered\",\n    payment_status: \"\",\n    payment_method: \"\",\n    price_type: \"retail\",\n    useLaserScanner: false,\n    store_id: \"\"\n  }); //Store Auto Suggestion\n\n  const [storeOptions, setStoreOptions] = useState([]);\n  let [selectedStores, setSelectedStores] = useState([]);\n  const [isStoresLoading, setIsStoresLoading] = useState(false); //Customer Auto Suggestion\n\n  const [customerOptions, setCustomerOptions] = useState([]);\n  let [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [isCustomersLoading, setIsCustomersLoading] = useState(false); //Product Auto Suggestion\n\n  const [productOptions, setProductOptions] = useState([]);\n  let [selectedProduct, setSelectedProduct] = useState([]);\n  let [selectedProducts, setSelectedProducts] = useState([]);\n  const [isProductsLoading, setIsProductsLoading] = useState(false); //Delivered By Auto Suggestion\n\n  let [deliveredByUserOptions, setDeliveredByUserOptions] = useState([]);\n  let [selectedDeliveredByUsers, setSelectedDeliveredByUsers] = useState([]);\n  const [isDeliveredByUsersLoading, setIsDeliveredByUsersLoading] = useState(false); //Delivered By Signature Auto Suggestion\n\n  const [deliveredBySignatureOptions, setDeliveredBySignatureOptions] = useState([]);\n  const [selectedDeliveredBySignatures, setSelectedDeliveredBySignatures] = useState([]);\n  const [isDeliveredBySignaturesLoading, setIsDeliveredBySignaturesLoading] = useState(false);\n  const [show, setShow] = useState(false);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  useEffect(() => {\n    let at = cookies.get(\"access_token\");\n\n    if (!at) {\n      // history.push(\"/dashboard/orders\");\n      window.location = \"/\";\n    }\n  });\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + encodeURIComponent(object[key]);\n    }).join(\"&\");\n  }\n\n  async function suggestStores(searchTerm) {\n    console.log(\"Inside handle suggestStores\");\n    setStoreOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsStoresLoading(true);\n    let result = await fetch(\"/v1/store?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setStoreOptions(data.result);\n    setIsStoresLoading(false);\n  }\n\n  async function suggestCustomers(searchTerm) {\n    console.log(\"Inside handle suggestCustomers\");\n    setCustomerOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n    setIsCustomersLoading(true);\n    let result = await fetch(\"/v1/customer?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setCustomerOptions(data.result);\n    setIsCustomersLoading(false);\n  }\n\n  function GetProductUnitPriceInStore(storeId, productStores) {\n    if (!productStores) {\n      return \"\";\n    }\n\n    for (var i = 0; i < productStores.length; i++) {\n      console.log(\"productStores[i]:\", productStores[i]);\n      console.log(\"store_id:\", storeId);\n\n      if (productStores[i].store_id === storeId) {\n        console.log(\"macthed\");\n        console.log(\"productStores[i].retail_unit_price:\", productStores[i].retail_unit_price);\n        return productStores[i];\n        /*\n        if (formData.price_type === \"retail\") {\n            return unitPriceListArray[i].retail_unit_price;\n        } else if (formData.price_type === \"wholesale\") {\n            return unitPriceListArray[i].wholesale_unit_price;\n        } else if (formData.price_type === \"purchase\") {\n            return unitPriceListArray[i].purchase_unit_price;\n        }\n        */\n      } else {\n        console.log(\"not matched\");\n      }\n    }\n\n    return \"\";\n  }\n\n  let [openProductSearchResult, setOpenProductSearchResult] = useState(false);\n\n  async function suggestProducts(searchTerm) {\n    console.log(\"Inside handle suggestProducts\");\n    setProductOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      openProductSearchResult = false;\n      setOpenProductSearchResult(false);\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n\n    if (cookies.get(\"store_id\")) {\n      params.store_id = cookies.get(\"store_id\");\n    }\n\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,item_code,bar_code,part_number,name,unit,part_number,name_in_arabic,product_stores\";\n    setIsProductsLoading(true);\n    let result = await fetch(\"/v1/product?\" + Select + queryString + \"&limit=200\", requestOptions);\n    let data = await result.json();\n    let products = data.result;\n\n    if (!products || products.length === 0) {\n      openProductSearchResult = false;\n      setOpenProductSearchResult(false);\n      setIsProductsLoading(false);\n      return;\n    }\n\n    openProductSearchResult = true;\n    setOpenProductSearchResult(true);\n    setProductOptions(products);\n    setIsProductsLoading(false);\n  }\n\n  async function getProductByBarCode(barcode) {\n    formData.barcode = barcode;\n    setFormData({ ...formData\n    });\n    console.log(\"Inside getProductByBarCode\");\n    errors[\"bar_code\"] = \"\";\n    setErrors({ ...errors\n    });\n    console.log(\"barcode:\" + formData.barcode);\n\n    if (!formData.barcode) {\n      return;\n    }\n\n    if (formData.barcode.length === 13) {\n      formData.barcode = formData.barcode.slice(0, -1);\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,item_code,bar_code,ean_12,part_number,name,product_stores,unit,part_number,name_in_arabic\";\n    let result = await fetch(\"/v1/product/barcode/\" + formData.barcode + \"?\" + Select, requestOptions);\n    let data = await result.json();\n    let product = data.result;\n\n    if (product) {\n      addProduct(product);\n    } else {\n      errors[\"bar_code\"] = \"Invalid Barcode:\" + formData.barcode;\n      setErrors({ ...errors\n      });\n    }\n\n    formData.barcode = \"\";\n    setFormData({ ...formData\n    });\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setDeliveredByUserOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsDeliveredByUsersLoading(true);\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setDeliveredByUserOptions(data.result);\n    setIsDeliveredByUsersLoading(false);\n  }\n\n  async function suggestSignatures(searchTerm) {\n    console.log(\"Inside handle suggestSignatures\");\n    setDeliveredBySignatureOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsDeliveredBySignaturesLoading(true);\n    let result = await fetch(\"/v1/signature?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setDeliveredBySignatureOptions(data.result);\n    setIsDeliveredBySignaturesLoading(false);\n  }\n\n  function handleCreate(event) {\n    event.preventDefault();\n    formData.products = [];\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      formData.products.push({\n        product_id: selectedProducts[i].product_id,\n        quantity: parseFloat(selectedProducts[i].quantity),\n        unit_price: parseFloat(selectedProducts[i].unit_price),\n        unit: selectedProducts[i].unit\n      });\n    }\n\n    if (!formData.shipping_handling_fees && formData.shipping_handling_fees !== 0) {\n      errors[\"shipping_handling_fees\"] = \"Invalid shipping / handling fees\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (formData.payment_status === \"paid_partially\" && !formData.partial_payment_amount && formData.partial_payment_amount !== 0) {\n      errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount <= 0) {\n      errors[\"partial_payment_amount\"] = \"Partial payment should be > 0 \";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (!formData.id && formData.payment_status === \"paid_partially\" && formData.partial_payment_amount >= netTotal) {\n      errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    errors[\"payment_method\"] = \"\";\n    setErrors({ ...errors\n    });\n\n    if (!formData.id && formData.payment_status != \"not_paid\" && !formData.payment_method) {\n      errors[\"payment_method\"] = \"Payment method is required\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (!formData.discount && formData.discount !== 0) {\n      errors[\"discount\"] = \"Invalid discount\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (!formData.discount_percent && formData.discount_percent !== 0) {\n      errors[\"discount_percent\"] = \"Invalid discount percent\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (parseFloat(formData.discount_percent) > 100) {\n      errors[\"discount_percent\"] = \"Discount percent cannot be > 100\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (!formData.vat_percent && formData.vat_percent !== 0) {\n      errors[\"vat_percent\"] = \"Invalid vat percent\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    formData.discount = parseFloat(formData.discount);\n    formData.discount_percent = parseFloat(formData.discount_percent);\n    formData.vat_percent = parseFloat(formData.vat_percent);\n    formData.partial_payment_amount = parseFloat(formData.partial_payment_amount);\n    formData.net_total = parseFloat(netTotal);\n\n    if (cookies.get('store_id')) {\n      formData.store_id = cookies.get('store_id');\n    }\n\n    let endPoint = \"/v1/order\";\n    let method = \"POST\";\n\n    if (formData.id) {\n      endPoint = \"/v1/order/\" + formData.id;\n      method = \"PUT\";\n    }\n\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(\"formData:\", formData);\n    setProcessing(true);\n    fetch(endPoint, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.errors; //const error = data.errors\n\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      setProcessing(false);\n      console.log(\"Response:\");\n      console.log(data);\n      props.showToastMessage(\"Order Created Successfully!\", \"success\");\n\n      if (props.refreshList) {\n        props.refreshList();\n      }\n\n      handleClose();\n      formData.products = [];\n      selectedProducts = [];\n      setSelectedProducts([]);\n      formData.customer_id = \"\";\n      setSelectedCustomers([]);\n      setFormData({ ...formData\n      });\n      reCalculate();\n      openDetailsView(data.result.id);\n    }).catch(error => {\n      setProcessing(false);\n      console.log(\"Inside catch\");\n      console.log(error);\n      setErrors({ ...error\n      });\n      console.error(\"There was an error!\", error);\n      props.showToastMessage(\"Error Creating Order!\", \"danger\");\n    });\n  }\n\n  function getProductIndex(productID) {\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (selectedProducts[i].product_id === productID) {\n        return i;\n      }\n    }\n\n    return false;\n  }\n\n  function isProductAdded(productID) {\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (selectedProducts[i].product_id === productID) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function GetProductStockInStore(storeId, productStores) {\n    if (!productStores) {\n      return 0.0;\n    }\n\n    for (var i = 0; i < productStores.length; i++) {\n      if (productStores[i].store_id === storeId) {\n        return productStores[i].stock;\n      }\n    }\n\n    return 0.0;\n  }\n\n  function addProduct(product) {\n    console.log(\"Inside Add product\");\n\n    if (!formData.store_id) {\n      errors.product_id = \"Please Select a Store and try again\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    errors.product_id = \"\";\n\n    if (!product) {\n      errors.product_id = \"Invalid Product\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n    /*\n    let productStore = GetProductUnitPriceInStore(\n        formData.store_id,\n        product.stores\n    );\n    */\n    // product.unit_price = productStore.retail_unit_price;\n\n\n    if (product.product_stores[formData.store_id]) {\n      product.unit_price = product.product_stores[formData.store_id].retail_unit_price;\n    }\n\n    errors.unit_price = \"\";\n\n    if (!product.unit_price) {\n      errors.unit_price = \"Invalid Unit Price\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    let alreadyAdded = false;\n    let index = false;\n    let quantity = 0.00;\n    product.quantity = 1.00;\n\n    if (isProductAdded(product.id)) {\n      alreadyAdded = true;\n      index = getProductIndex(product.id);\n      quantity = parseFloat(selectedProducts[index].quantity + product.quantity);\n    } else {\n      quantity = parseFloat(product.quantity);\n    }\n\n    console.log(\"quantity:\", quantity);\n    errors.quantity = \"\"; //let stock = GetProductStockInStore(formData.store_id, product.stores);\n\n    let stock = 0;\n\n    if (product.product_stores[formData.store_id]) {\n      stock = product.product_stores[formData.store_id].stock;\n    }\n\n    if (stock < quantity) {\n      if (index === false) {\n        index = selectedProducts.length;\n      } // errors[\"quantity_\" + index] = \"Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for product: \" + product.name;\n\n\n      errors[\"quantity_\" + index] = \"Warning: Available stock is \" + stock;\n      console.log(\"errors:\", errors);\n      setErrors({ ...errors\n      });\n    }\n\n    if (alreadyAdded) {\n      selectedProducts[index].quantity = parseFloat(quantity);\n    }\n\n    if (!alreadyAdded) {\n      selectedProducts.push({\n        product_id: product.id,\n        code: product.item_code,\n        part_number: product.part_number,\n        name: product.name,\n        quantity: product.quantity,\n        product_stores: product.product_stores,\n        unit_price: parseFloat(product.unit_price).toFixed(2),\n        unit: product.unit\n      });\n    }\n\n    setSelectedProducts([...selectedProducts]);\n    reCalculate();\n  }\n\n  function removeProduct(product) {\n    const index = selectedProducts.indexOf(product);\n\n    if (index > -1) {\n      selectedProducts.splice(index, 1);\n    }\n\n    setSelectedProducts([...selectedProducts]);\n    reCalculate();\n  }\n\n  let [totalPrice, setTotalPrice] = useState(0.0);\n\n  function findTotalPrice() {\n    totalPrice = 0.00;\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      totalPrice += parseFloat(selectedProducts[i].unit_price) * parseFloat(selectedProducts[i].quantity);\n    }\n\n    totalPrice = totalPrice.toFixed(2);\n    setTotalPrice(totalPrice);\n  }\n\n  let [vatPrice, setVatPrice] = useState(0.00);\n\n  function findVatPrice() {\n    vatPrice = 0.00;\n\n    if (totalPrice > 0) {\n      vatPrice = (parseFloat(parseFloat(formData.vat_percent) / 100) * (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount))).toFixed(2);\n      ;\n      console.log(\"vatPrice:\", vatPrice);\n    }\n\n    setVatPrice(vatPrice);\n  }\n\n  let [netTotal, setNetTotal] = useState(0.00);\n\n  function findNetTotal() {\n    netTotal = 0.00;\n\n    if (totalPrice > 0) {\n      netTotal = (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount) + parseFloat(vatPrice)).toFixed(2);\n    }\n\n    setNetTotal(netTotal);\n    formData.payments = [{\n      \"date_str\": formData.date_str,\n      \"amount\": \"\",\n      \"method\": \"\",\n      \"deleted\": false\n    }];\n    formData.payments[0].amount = parseFloat(netTotal);\n    setFormData({ ...formData\n    });\n  }\n\n  let [discountPercent, setDiscountPercent] = useState(0.00);\n\n  function findDiscountPercent() {\n    if (formData.discount >= 0 && totalPrice > 0) {\n      discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100).toFixed(2);\n      setDiscountPercent(discountPercent);\n      formData.discount_percent = discountPercent;\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function findDiscount() {\n    if (formData.discount_percent >= 0 && totalPrice > 0) {\n      formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)).toFixed(2);\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function reCalculate() {\n    findTotalPrice();\n\n    if (formData.is_discount_percent) {\n      findDiscount();\n    } else {\n      findDiscountPercent();\n    }\n\n    findVatPrice();\n    findNetTotal();\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  }\n\n  const StoreCreateFormRef = useRef();\n\n  function openStoreCreateForm() {\n    StoreCreateFormRef.current.open();\n  }\n\n  const CustomerCreateFormRef = useRef();\n\n  function openCustomerCreateForm() {\n    CustomerCreateFormRef.current.open();\n  }\n\n  const ProductCreateFormRef = useRef();\n\n  function openProductCreateForm() {\n    ProductCreateFormRef.current.open();\n  }\n\n  const UserCreateFormRef = useRef();\n\n  function openUserCreateForm() {\n    UserCreateFormRef.current.open();\n  }\n\n  const SignatureCreateFormRef = useRef();\n\n  function openSignatureCreateForm() {\n    SignatureCreateFormRef.current.open();\n  }\n\n  const ProductDetailsViewRef = useRef();\n\n  function openProductDetailsView(id) {\n    ProductDetailsViewRef.current.open(id);\n  }\n\n  function addNewPayment() {\n    formData.payments.push({\n      \"date_str\": new Date(),\n      \"amount\": \"\",\n      \"method\": \"\",\n      \"deleted\": false\n    });\n    setFormData({ ...formData\n    });\n  }\n\n  function getTotalPayments() {\n    let totalPayment = 0.00;\n\n    for (var i = 0; i < formData.payments.length; i++) {\n      if (formData.payments[i].amount && !formData.payments[i].deleted) {\n        totalPayment += formData.payments[i].amount;\n      }\n    }\n\n    return totalPayment;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrderView, {\n      ref: DetailsViewRef,\n      openCreateForm: props.openCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductView, {\n      ref: ProductDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StoreCreate, {\n      ref: StoreCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerCreate, {\n      ref: CustomerCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductCreate, {\n      ref: ProductCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserCreate, {\n      ref: UserCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignatureCreate, {\n      ref: SignatureCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      fullscreen: true,\n      onHide: handleClose,\n      animation: false,\n      backdrop: \"static\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: formData.id ? \"Update Sales Order #\" + formData.code : \"Create New Sales Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [/*#__PURE__*/_jsxDEV(OrderPreview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreate,\n            children: isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [Object.keys(errors).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors && Object.keys(errors).map((key, index) => {\n              return errors[key] ? /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 59\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 needs-validation\",\n          onSubmit: e => {\n            e.preventDefault();\n            handleCreate(e);\n          },\n          children: [!cookies.get('store_name') ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Store*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"store_id\",\n                labelKey: \"name\",\n                isLoading: isStoresLoading,\n                isInvalid: errors.store_id ? true : false,\n                onChange: selectedItems => {\n                  errors.store_id = \"\";\n                  errors[\"product_id\"] = \"\";\n                  setErrors(errors);\n\n                  if (selectedItems.length === 0) {\n                    errors.store_id = \"Invalid Store selected\";\n                    setErrors(errors);\n                    setFormData({ ...formData\n                    });\n                    setSelectedStores([]);\n                    return;\n                  }\n\n                  formData.store_id = selectedItems[0].id;\n                  setFormData({ ...formData\n                  });\n                  console.log(\"formData.store_id:\", formData.store_id);\n                  selectedStores = selectedItems;\n                  setSelectedStores([...selectedItems]);\n\n                  if (formData.store_id) {\n                    if (selectedProduct[0] && selectedProduct[0].product_stores && selectedProduct[0].quantity) {\n                      let stock = 0;\n\n                      if (selectedProduct[0].product_stores) {\n                        //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n                        if (selectedProduct[0].product_stores[formData.store_id]) {\n                          stock = selectedProduct[0].product_stores[formData.store_id].stock;\n                        }\n                      }\n\n                      if (stock < parseFloat(selectedProduct[0].quantity)) {\n                        if (selectedStores[0]) {\n                          errors.product_id = \"Stock is only \" + stock + \" in Store: \" + selectedStores[0].name + \" for this product\";\n                        } else {\n                          errors.product_id = \"Stock is only \" + stock + \" in Selected Store for this product\";\n                        }\n\n                        setErrors({ ...errors\n                        });\n                      }\n                    } else if (selectedProduct[0] && selectedProduct[0].product_stores) {\n                      let stock = 0; //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n\n                      if (selectedProduct[0].product_stores[formData.store_id]) {\n                        stock = selectedProduct[0].product_stores[formData.store_id].stock;\n                      }\n\n                      if (stock === 0) {\n                        if (selectedStores[0]) {\n                          errors[\"product_id\"] = \"This product is not available in store: \" + selectedStores[0].name;\n                        } else {\n                          errors[\"product_id\"] = \"This product is not available in selected store.\";\n                        }\n\n                        setErrors({ ...errors\n                        });\n                      }\n                    }\n\n                    if (selectedProduct[0]) {\n                      /*\n                      selectedProduct[0].unit_price = GetProductUnitPriceInStore(\n                          formData.store_id,\n                          selectedProduct[0].stores\n                      );\n                      */\n                      if (selectedProduct[0].product_stores[formData.store_id]) {\n                        selectedProduct[0].unit_price = selectedProduct[0].product_stores[formData.store_id].retail_unit_price;\n                      }\n\n                      if (!selectedProduct[0].quantity) {\n                        selectedProduct[0].quantity = 1;\n                      }\n\n                      setSelectedProduct([...selectedProduct]);\n                    }\n                  }\n                },\n                options: storeOptions,\n                placeholder: \"Select Store\",\n                selected: selectedStores,\n                highlightOnlyResult: true,\n                onInputChange: (searchTerm, e) => {\n                  suggestStores(searchTerm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                hide: true.toString(),\n                onClick: openStoreCreateForm,\n                className: \"btn btn-outline-secondary btn-primary btn-sm\",\n                type: \"button\",\n                id: \"button-addon1\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 185\n                }, this), \" New\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1156,\n                  columnNumber: 37\n                }, this), errors.store_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1064,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 55\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            style: {\n              border: \"solid 0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Customer*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n              id: \"customer_id\",\n              labelKey: \"search_label\",\n              isLoading: isCustomersLoading,\n              isInvalid: errors.customer_id ? true : false,\n              onChange: selectedItems => {\n                errors.customer_id = \"\";\n                setErrors(errors);\n\n                if (selectedItems.length === 0) {\n                  errors.customer_id = \"Invalid Customer selected\";\n                  setErrors(errors);\n                  formData.customer_id = \"\";\n                  setFormData({ ...formData\n                  });\n                  setSelectedCustomers([]);\n                  return;\n                }\n\n                formData.customer_id = selectedItems[0].id;\n                setFormData({ ...formData\n                });\n                setSelectedCustomers(selectedItems);\n              },\n              options: customerOptions,\n              placeholder: \"Type name or mob\",\n              selected: selectedCustomers,\n              highlightOnlyResult: true,\n              onInputChange: (searchTerm, e) => {\n                suggestCustomers(searchTerm);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              hide: true.toString(),\n              onClick: openCustomerCreateForm,\n              className: \"btn btn-outline-secondary btn-primary btn-sm\",\n              type: \"button\",\n              id: \"button-addon1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-plus-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 184\n              }, this), \" New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 29\n            }, this), errors.customer_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 37\n              }, this), errors.customer_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Product Barcode Scan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(DebounceInput, {\n                minLength: 3,\n                debounceTimeout: 100,\n                placeholder: \"Scan Barcode\",\n                className: \"form-control barcode\",\n                value: formData.barcode,\n                onChange: event => getProductByBarCode(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 33\n              }, this), errors.bar_code && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1215,\n                  columnNumber: 41\n                }, this), errors.bar_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                id: \"date_str\",\n                selected: formData.date_str ? new Date(formData.date_str) : null,\n                value: formData.date_str ? format(new Date(formData.date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                className: \"form-control\",\n                dateFormat: \"MMMM d, yyyy h:mm aa\",\n                showTimeSelect: true,\n                timeIntervals: \"1\",\n                onChange: value => {\n                  console.log(\"Value\", value);\n                  formData.date_str = value; // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n\n                  setFormData({ ...formData\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 33\n              }, this), errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1247,\n                  columnNumber: 41\n                }, this), errors.date_str]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1246,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Product Search*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n              id: \"product_id\",\n              size: \"lg\",\n              labelKey: \"search_label\",\n              emptyLabel: \"\",\n              clearButton: true,\n              open: openProductSearchResult,\n              isLoading: isProductsLoading,\n              isInvalid: errors.product_id ? true : false,\n              onChange: selectedItems => {\n                if (selectedItems.length === 0) {\n                  errors[\"product_id\"] = \"Invalid Product selected\";\n                  setErrors(errors);\n                  return;\n                }\n\n                errors[\"product_id\"] = \"\";\n                setErrors({ ...errors\n                });\n\n                if (formData.store_id) {\n                  addProduct(selectedItems[0]);\n                }\n\n                setOpenProductSearchResult(false);\n              },\n              options: productOptions,\n              selected: selectedProduct,\n              placeholder: \"Search By Part No. / Name / Name in Arabic\",\n              highlightOnlyResult: true,\n              onInputChange: (searchTerm, e) => {\n                suggestProducts(searchTerm);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              hide: true.toString(),\n              onClick: openProductCreateForm,\n              className: \"btn btn-outline-secondary btn-primary btn-sm\",\n              type: \"button\",\n              id: \"button-addon1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-plus-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1315,\n                columnNumber: 183\n              }, this), \" New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 29\n            }, this), errors.product_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 37\n              }, this), errors.product_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1317,\n              columnNumber: 33\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            style: {\n              overflowX: \"auto\",\n              maxHeight: \"400px\",\n              overflowY: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"3%\"\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1330,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"5%\"\n                    },\n                    children: \"SI No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1331,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"10%\"\n                    },\n                    children: \"Part No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1332,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"30%\"\n                    },\n                    className: \"text-start\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1333,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"15%\"\n                    },\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1334,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"18%\"\n                    },\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1335,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"32%\"\n                    },\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1336,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1329,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\",\n                        cursor: \"pointer\"\n                      },\n                      onClick: () => {\n                        removeProduct(product);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1350,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1344,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1343,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1353,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: product.part_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1354,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textDecoration: \"underline\",\n                      color: \"blue\",\n                      cursor: \"pointer\"\n                    },\n                    className: \"text-start\",\n                    onClick: () => {\n                      openProductDetailsView(product.product_id);\n                    },\n                    children: product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1355,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.quantity,\n                        className: \"form-control text-end\",\n                        placeholder: \"Quantity\",\n                        onChange: e => {\n                          errors[\"quantity_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                            selectedProducts[index].quantity = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            errors[\"quantity_\" + index] = \"Quantity should be > 0\";\n                            selectedProducts[index].quantity = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          product.quantity = parseFloat(e.target.value);\n                          selectedProducts[index].quantity = parseFloat(e.target.value);\n                          reCalculate();\n                          let stock = 0;\n\n                          if (selectedProducts[index].product_stores) {\n                            var _selectedProducts$ind;\n\n                            stock = (_selectedProducts$ind = selectedProducts[index].product_stores[formData.store_id]) === null || _selectedProducts$ind === void 0 ? void 0 : _selectedProducts$ind.stock; // stock = GetProductStockInStore(formData.store_id, selectedProducts[index].stores);\n                          }\n\n                          if (stock < parseFloat(e.target.value) && selectedProducts[index].product_stores) {\n                            // errors[\"quantity_\" + index] = \" Warning: Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for this product\";\n                            errors[\"quantity_\" + index] = \" Warning: Available stock is \" + stock;\n                            setErrors({ ...errors\n                            });\n                            return;\n                          }\n\n                          selectedProducts[index].quantity = parseFloat(e.target.value);\n                          console.log(\"selectedProducts[index].quantity:\", selectedProducts[index].quantity);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1369,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1415,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1368,\n                      columnNumber: 49\n                    }, this), errors[\"quantity_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors[\"quantity_\" + index]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1418,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1366,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.unit_price,\n                        className: \"form-control text-end\",\n                        placeholder: \"Unit Price\",\n                        onChange: e => {\n                          errors[\"unit_price_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            errors[\"unit_price_\" + index] = \"Unit Price should be > 0\";\n                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          selectedProducts[index].unit_price = parseFloat(e.target.value);\n                          console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1427,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: \"SAR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1457,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1426,\n                      columnNumber: 49\n                    }, this), errors[\"unit_price_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1461,\n                        columnNumber: 57\n                      }, this), errors[\"unit_price_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1460,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1424,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (product.unit_price * product.quantity).toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1468,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1467,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1342,\n                  columnNumber: 41\n                }, this)).reverse()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1340,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1487,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    style: {\n                      width: \"200px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: totalPrice,\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1489,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1488,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1484,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: \"Shipping & Handling Fees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1499,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"150px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.shipping_handling_fees,\n                      onChange: e => {\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.shipping_handling_fees = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"shipping_handling_fees\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.shipping_handling_fees = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"shipping_handling_fees\"] = \"Shipping / Handling Fees should be > 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.shipping_handling_fees = \"\";\n                          errors[\"shipping_handling_fees\"] = \"Invalid Shipping / Handling Fees\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"shipping_handling_fees\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.shipping_handling_fees = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1503,\n                      columnNumber: 45\n                    }, this), \" SAR\", errors.shipping_handling_fees && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.shipping_handling_fees\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1540,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1502,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1498,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: [\"Discount  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"50px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount_percent,\n                      onChange: e => {\n                        formData.is_discount_percent = true;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          formData.discount = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount_percent = \"\";\n                          formData.discount = 0.00;\n                          errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount_percent\"] = \"\";\n                        errors[\"discount\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount_percent = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1548,\n                      columnNumber: 55\n                    }, this), \"%\", errors.discount_percent && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount_percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1587,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1547,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"150px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount,\n                      onChange: e => {\n                        formData.is_discount_percent = false;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          formData.discount_percent = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"Discount should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount = \"\";\n                          formData.discount_percent = 0.00;\n                          errors[\"discount\"] = \"Invalid Discount\";\n                          setFormData({ ...formData\n                          });\n                          reCalculate();\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount\"] = \"\";\n                        errors[\"discount_percent\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1593,\n                      columnNumber: 45\n                    }, this), \" SAR\", errors.discount && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1634,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1592,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1546,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: [\" VAT  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"text-center\",\n                      style: {\n                        width: \"50px\"\n                      },\n                      value: formData.vat_percent,\n                      onChange: e => {\n                        console.log(\"Inside onchange vat percent\");\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.vat_percent = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"vat_percent\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.vat_percent = parseFloat(e.target.value);\n                          vatPrice = 0.00;\n                          setVatPrice(vatPrice);\n                          setFormData({ ...formData\n                          });\n                          errors[\"vat_percent\"] = \"Vat percent should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.vat_percent = \"\";\n                          vatPrice = 0.00;\n                          setVatPrice(vatPrice); //formData.discount_percent = 0.00;\n\n                          errors[\"vat_percent\"] = \"Invalid vat percent\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"vat_percent\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.vat_percent = e.target.value;\n                        reCalculate();\n                        setFormData({ ...formData\n                        });\n                        console.log(formData);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1642,\n                      columnNumber: 84\n                    }, this), \"%\", errors.vat_percent && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.vat_percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1683,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1642,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: vatPrice,\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1689,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1688,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1640,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: \"Net Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1700,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: netTotal,\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1702,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1701,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1698,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1483,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1482,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Cash discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1958,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: formData.cash_discount,\n              className: \"form-control \",\n              onChange: e => {\n                if (!e.target.value) {\n                  formData.cash_discount = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  return;\n                }\n\n                formData.cash_discount = parseFloat(e.target.value);\n                setFormData({ ...formData\n                });\n                console.log(formData);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1959,\n              columnNumber: 29\n            }, this), errors.cash_discount && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1976,\n                columnNumber: 37\n              }, this), errors.cash_discount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1975,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1957,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Payments Received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1982,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"table-responsive\",\n              style: {\n                maxWidth: \"800px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                class: \"table table-striped table-sm table-bordered\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1986,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1989,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Payment method\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1992,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1995,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1985,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: formData.payments && formData.payments.map((payment, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        minWidth: \"220px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        id: \"date_str\",\n                        selected: formData.payments[key].date_str ? new Date(formData.payments[key].date_str) : null,\n                        value: formData.payments[key].date_str ? format(new Date(formData.payments[key].date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                        className: \"form-control\",\n                        dateFormat: \"MMMM d, yyyy h:mm aa\",\n                        showTimeSelect: true,\n                        timeIntervals: \"1\",\n                        onChange: value => {\n                          console.log(\"Value\", value);\n                          formData.payments[key].date_str = value; // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n\n                          setFormData({ ...formData\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2006,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2004,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: formData.payments[key].amount,\n                        className: \"form-control \",\n                        onChange: e => {\n                          errors[\"payment_amount\"][key] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            formData.payments[key].amount = e.target.value;\n                            setFormData({ ...formData\n                            });\n                            return;\n                          }\n\n                          formData.payments[key].amount = parseFloat(e.target.value);\n                          let totalPayment = getTotalPayments();\n                          let maxAllowedAmount = netTotal - formData.cash_discount - (totalPayment - formData.payments[key].amount);\n\n                          if (formData.payments[key].amount > maxAllowedAmount) {\n                            errors[\"payment_amount\"][key] = \"Amount should not be greater than \" + maxAllowedAmount.toString();\n                            setErrors({ ...errors\n                            });\n                          }\n\n                          setFormData({ ...formData\n                          });\n                          console.log(formData);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2026,\n                        columnNumber: 57\n                      }, this), errors[\"payment_amount\"] && errors[\"payment_amount\"][key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2053,\n                          columnNumber: 65\n                        }, this), errors[\"payment_amount\"][key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2052,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2025,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"select\", {\n                        value: formData.payments[key].method,\n                        className: \"form-control \",\n                        onChange: e => {\n                          if (!e.target.value) {\n                            /* errors[\"payment_method\"] = \"Payment method is required\";\n                             setErrors({ ...errors });\n                             */\n                            formData.payments[key].method = \"\";\n                            setFormData({ ...formData\n                            });\n                            return;\n                          } // errors[\"payment_method\"] = \"\";\n                          //setErrors({ ...errors });\n\n\n                          formData.payments[key].method = e.target.value;\n                          setFormData({ ...formData\n                          });\n                          console.log(formData);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2078,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"cash\",\n                          children: \"Cash\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2079,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"bank_account\",\n                          children: \"Bank Account / Debit / Credit Card\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2080,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"customer_account\",\n                          children: \"Customer Account\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2081,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2059,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2058,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: formData.payments.length == key + 1 ? /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"secondary\",\n                        onClick: addNewPayment,\n                        children: \"New payment\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2085,\n                        columnNumber: 98\n                      }, this) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2084,\n                      columnNumber: 53\n                    }, this)]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2003,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2000,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1984,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1983,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1981,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleCreate,\n              children: isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2266,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"b983B97m9HnYK0WPlvALzaMGDpM=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = OrderCreate;\nexport default OrderCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderCreate$forwardRef\");\n$RefreshReg$(_c2, \"OrderCreate\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/order/create.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","OrderPreview","Modal","Button","Form","StoreCreate","CustomerCreate","ProductCreate","UserCreate","SignatureCreate","Cookies","Typeahead","NumberFormat","DatePicker","format","Spinner","OrderView","DebounceInput","ProductView","OrderCreate","props","ref","open","id","selectedProducts","setSelectedProducts","selectedStores","setSelectedStores","selectedCustomers","setSelectedCustomers","cookies","get","selectedDeliveredByUsers","name","formData","delivered_by","setFormData","setSelectedDeliveredByUsers","store_id","store_name","vat_percent","parseFloat","console","log","undefined","discount","discount_percent","shipping_handling_fees","partial_payment_amount","cash_discount","payment_method","payment_status","code","net_total","date_str","Date","payments","getOrder","reCalculate","setShow","requestOptions","method","headers","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","setErrors","result","date","is_discount_percent","discountValue","products","searchLabel","customer_name","customer_id","search_label","catch","setProcessing","listener","event","form","target","index","Array","prototype","indexOf","call","elements","getAttribute","focus","preventDefault","document","addEventListener","removeEventListener","selectedDate","isProcessing","signature_date_str","status","price_type","useLaserScanner","storeOptions","setStoreOptions","isStoresLoading","setIsStoresLoading","customerOptions","setCustomerOptions","isCustomersLoading","setIsCustomersLoading","productOptions","setProductOptions","selectedProduct","setSelectedProduct","isProductsLoading","setIsProductsLoading","deliveredByUserOptions","setDeliveredByUserOptions","isDeliveredByUsersLoading","setIsDeliveredByUsersLoading","deliveredBySignatureOptions","setDeliveredBySignatureOptions","selectedDeliveredBySignatures","setSelectedDeliveredBySignatures","isDeliveredBySignaturesLoading","setIsDeliveredBySignaturesLoading","show","handleClose","at","window","location","ObjectToSearchQueryParams","object","Object","keys","map","key","encodeURIComponent","join","suggestStores","searchTerm","params","queryString","Authorization","Select","suggestCustomers","GetProductUnitPriceInStore","storeId","productStores","i","length","retail_unit_price","openProductSearchResult","setOpenProductSearchResult","suggestProducts","getProductByBarCode","barcode","slice","product","addProduct","suggestUsers","suggestSignatures","handleCreate","push","product_id","quantity","unit_price","unit","netTotal","endPoint","body","JSON","stringify","showToastMessage","refreshList","openDetailsView","getProductIndex","productID","isProductAdded","GetProductStockInStore","stock","product_stores","alreadyAdded","item_code","part_number","toFixed","removeProduct","splice","totalPrice","setTotalPrice","findTotalPrice","vatPrice","setVatPrice","findVatPrice","setNetTotal","findNetTotal","amount","discountPercent","setDiscountPercent","findDiscountPercent","findDiscount","DetailsViewRef","current","StoreCreateFormRef","openStoreCreateForm","CustomerCreateFormRef","openCustomerCreateForm","ProductCreateFormRef","openProductCreateForm","UserCreateFormRef","openUserCreateForm","SignatureCreateFormRef","openSignatureCreateForm","ProductDetailsViewRef","openProductDetailsView","addNewPayment","getTotalPayments","totalPayment","deleted","openCreateForm","color","e","selectedItems","toString","border","value","bar_code","overflowX","maxHeight","overflowY","width","cursor","textDecoration","reverse","maxWidth","payment","minWidth","maxAllowedAmount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport OrderPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport OrderView from \"./view.js\";\nimport \"./style.css\";\nimport { DebounceInput } from 'react-debounce-input';\n//import BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n//import Quagga from 'quagga';\nimport ProductView from \"./../product/view.js\";\n\nconst OrderCreate = forwardRef((props, ref) => {\n\n\n    useImperativeHandle(ref, () => ({\n        open(id) {\n            selectedProducts = [];\n            setSelectedProducts([]);\n\n            selectedStores = [];\n            setSelectedStores([]);\n\n            selectedCustomers = [];\n            setSelectedCustomers([]);\n\n\n\n            if (cookies.get(\"user_id\")) {\n                selectedDeliveredByUsers = [{\n                    id: cookies.get(\"user_id\"),\n                    name: cookies.get(\"user_name\"),\n                }];\n                formData.delivered_by = cookies.get(\"user_id\");\n                setFormData({ ...formData });\n                setSelectedDeliveredByUsers([...selectedDeliveredByUsers]);\n            }\n\n            if (cookies.get('store_id')) {\n                formData.store_id = cookies.get('store_id');\n                formData.store_name = cookies.get('store_name');\n                formData.vat_percent = parseFloat(cookies.get('vat_percent'));\n                console.log(\"formData.store_id:\", formData.store_id);\n            }\n\n            formData.id = undefined;\n            formData.discount = 0.00;\n            formData.discount_percent = 0.00;\n            formData.shipping_handling_fees = 0.00;\n            formData.partial_payment_amount = 0.00;\n            formData.cash_discount = 0.00;\n            formData.payment_method = \"\";\n            formData.payment_status = \"\";\n            formData.code = \"\";\n            formData.net_total = 0.00;\n            formData.date_str = new Date();\n            formData.payments = [\n                {\n                    \"date_str\": new Date(),\n                    \"amount\": \"\",\n                    \"method\": \"\",\n                    \"deleted\": false,\n                }\n            ];\n            formData.cash_discount = 0.00;\n\n            if (id) {\n                getOrder(id);\n            }\n            setFormData({ ...formData });\n            reCalculate();\n            setShow(true);\n\n        },\n    }));\n\n\n    function getOrder(id) {\n        console.log(\"inside get Order\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/order/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                formData = data.result;\n                formData.date_str = data.result.date;\n                /*\n                let order = data.result;\n                formData = {\n                    id: order.id,\n                    code: order.code,\n                    store_id: purchase.store_id,\n                    vendor_id: purchase.vendor_id,\n                    date_str: purchase.date,\n                    // date: purchase.date,\n                    vat_percent: purchase.vat_percent,\n                    discount: purchase.discount,\n                    discount_percent: purchase.discount_percent,\n                    status: purchase.status,\n                    order_placed_by: purchase.order_placed_by,\n                    order_placed_by_signature_id: purchase.order_placed_by_signature_id,\n                    is_discount_percent: purchase.is_discount_percent,\n                    partial_payment_amount: purchase.partial_payment_amount,\n                    payment_method: purchase.payment_method,\n                    payment_status: purchase.payment_status,\n                    shipping_handling_fees: purchase.shipping_handling_fees,\n                };\n                */\n\n                if (formData.is_discount_percent) {\n                    formData.discountValue = formData.discount_percent;\n                } else {\n                    formData.discountValue = formData.discount;\n                }\n\n                selectedProducts = formData.products;\n                setSelectedProducts([...selectedProducts]);\n\n\n                let selectedStores = [\n                    {\n                        id: formData.store_id,\n                        name: formData.store_name,\n                    }\n                ];\n\n\n                let searchLabel = formData.customer_name;\n\n                let selectedCustomers = [\n                    {\n                        id: formData.customer_id,\n                        name: formData.customer_name,\n                        search_label: searchLabel,\n                    }\n                ];\n\n                /*\n                let selectedOrderPlacedByUsers = [\n                    {\n                        id: formData.created_by,\n                        name: formData.created_by_name\n                    }\n                ];\n\n\n                setSelectedOrderPlacedByUsers([...selectedOrderPlacedByUsers]);\n                */\n\n                setSelectedStores([...selectedStores]);\n                setSelectedCustomers([...selectedCustomers]);\n\n                reCalculate();\n                setFormData({ ...formData });\n\n\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                console.log(\"Enter key was pressed. Run your function-order.123\");\n                // event.preventDefault();\n\n\n\n                var form = event.target.form;\n                if (form && event.target) {\n                    var index = Array.prototype.indexOf.call(form, event.target);\n                    if (form && form.elements[index + 1]) {\n                        if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n                            form.elements[index].focus();\n                        } else {\n                            form.elements[index + 1].focus();\n                        }\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n\n    const selectedDate = new Date();\n\n    //const history = useHistory();\n    let [errors, setErrors] = useState({\n        \"payment_amount\": [],\n    });\n    const [isProcessing, setProcessing] = useState(false);\n    const cookies = new Cookies();\n\n    //fields\n    let [formData, setFormData] = useState({\n        vat_percent: 15.0,\n        discountValue: 0.00,\n        discount: 0.00,\n        discount_percent: 0.0,\n        cash_discount: 0.00,\n        is_discount_percent: false,\n        date_str: new Date(),\n        signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n        status: \"delivered\",\n        payment_status: \"\",\n        payment_method: \"\",\n        price_type: \"retail\",\n        useLaserScanner: false,\n        store_id: \"\",\n    });\n\n    //Store Auto Suggestion\n    const [storeOptions, setStoreOptions] = useState([]);\n    let [selectedStores, setSelectedStores] = useState([]);\n    const [isStoresLoading, setIsStoresLoading] = useState(false);\n\n    //Customer Auto Suggestion\n    const [customerOptions, setCustomerOptions] = useState([]);\n    let [selectedCustomers, setSelectedCustomers] = useState([]);\n    const [isCustomersLoading, setIsCustomersLoading] = useState(false);\n\n    //Product Auto Suggestion\n    const [productOptions, setProductOptions] = useState([]);\n    let [selectedProduct, setSelectedProduct] = useState([]);\n    let [selectedProducts, setSelectedProducts] = useState([]);\n    const [isProductsLoading, setIsProductsLoading] = useState(false);\n\n    //Delivered By Auto Suggestion\n    let [deliveredByUserOptions, setDeliveredByUserOptions] = useState([]);\n    let [selectedDeliveredByUsers, setSelectedDeliveredByUsers] = useState([]);\n    const [isDeliveredByUsersLoading, setIsDeliveredByUsersLoading] =\n        useState(false);\n\n    //Delivered By Signature Auto Suggestion\n    const [deliveredBySignatureOptions, setDeliveredBySignatureOptions] =\n        useState([]);\n    const [selectedDeliveredBySignatures, setSelectedDeliveredBySignatures] =\n        useState([]);\n    const [isDeliveredBySignaturesLoading, setIsDeliveredBySignaturesLoading] =\n        useState(false);\n\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    useEffect(() => {\n        let at = cookies.get(\"access_token\");\n        if (!at) {\n            // history.push(\"/dashboard/orders\");\n            window.location = \"/\";\n        }\n    });\n\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + encodeURIComponent(object[key]);\n            })\n            .join(\"&\");\n    }\n\n    async function suggestStores(searchTerm) {\n        console.log(\"Inside handle suggestStores\");\n        setStoreOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsStoresLoading(true);\n        let result = await fetch(\n            \"/v1/store?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setStoreOptions(data.result);\n        setIsStoresLoading(false);\n    }\n\n    async function suggestCustomers(searchTerm) {\n        console.log(\"Inside handle suggestCustomers\");\n        setCustomerOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n        setIsCustomersLoading(true);\n        let result = await fetch(\n            \"/v1/customer?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setCustomerOptions(data.result);\n        setIsCustomersLoading(false);\n    }\n\n    function GetProductUnitPriceInStore(storeId, productStores) {\n        if (!productStores) {\n            return \"\";\n        }\n\n        for (var i = 0; i < productStores.length; i++) {\n            console.log(\"productStores[i]:\", productStores[i]);\n            console.log(\"store_id:\", storeId);\n\n            if (productStores[i].store_id === storeId) {\n                console.log(\"macthed\");\n                console.log(\n                    \"productStores[i].retail_unit_price:\",\n                    productStores[i].retail_unit_price\n                );\n                return productStores[i];\n                /*\n                if (formData.price_type === \"retail\") {\n                    return unitPriceListArray[i].retail_unit_price;\n                } else if (formData.price_type === \"wholesale\") {\n                    return unitPriceListArray[i].wholesale_unit_price;\n                } else if (formData.price_type === \"purchase\") {\n                    return unitPriceListArray[i].purchase_unit_price;\n                }\n                */\n\n            } else {\n                console.log(\"not matched\");\n            }\n        }\n        return \"\";\n    }\n\n\n\n    let [openProductSearchResult, setOpenProductSearchResult] = useState(false);\n\n    async function suggestProducts(searchTerm) {\n        console.log(\"Inside handle suggestProducts\");\n        setProductOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            openProductSearchResult = false;\n            setOpenProductSearchResult(false);\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n\n        if (cookies.get(\"store_id\")) {\n            params.store_id = cookies.get(\"store_id\");\n        }\n\n\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,item_code,bar_code,part_number,name,unit,part_number,name_in_arabic,product_stores\";\n        setIsProductsLoading(true);\n        let result = await fetch(\n            \"/v1/product?\" + Select + queryString + \"&limit=200\",\n            requestOptions\n        );\n        let data = await result.json();\n\n        let products = data.result;\n        if (!products || products.length === 0) {\n            openProductSearchResult = false;\n            setOpenProductSearchResult(false);\n            setIsProductsLoading(false);\n            return;\n        }\n\n        openProductSearchResult = true;\n        setOpenProductSearchResult(true);\n        setProductOptions(products);\n        setIsProductsLoading(false);\n\n    }\n\n    async function getProductByBarCode(barcode) {\n        formData.barcode = barcode;\n        setFormData({ ...formData });\n        console.log(\"Inside getProductByBarCode\");\n        errors[\"bar_code\"] = \"\";\n        setErrors({ ...errors });\n\n        console.log(\"barcode:\" + formData.barcode);\n        if (!formData.barcode) {\n            return;\n        }\n\n        if (formData.barcode.length === 13) {\n            formData.barcode = formData.barcode.slice(0, -1);\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n\n        let Select = \"select=id,item_code,bar_code,ean_12,part_number,name,product_stores,unit,part_number,name_in_arabic\";\n        let result = await fetch(\n            \"/v1/product/barcode/\" + formData.barcode + \"?\" + Select,\n            requestOptions\n        );\n        let data = await result.json();\n\n\n        let product = data.result;\n        if (product) {\n            addProduct(product);\n        } else {\n            errors[\"bar_code\"] = \"Invalid Barcode:\" + formData.barcode\n            setErrors({ ...errors });\n        }\n\n        formData.barcode = \"\";\n        setFormData({ ...formData });\n\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setDeliveredByUserOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsDeliveredByUsersLoading(true);\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setDeliveredByUserOptions(data.result);\n        setIsDeliveredByUsersLoading(false);\n    }\n\n    async function suggestSignatures(searchTerm) {\n        console.log(\"Inside handle suggestSignatures\");\n        setDeliveredBySignatureOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsDeliveredBySignaturesLoading(true);\n        let result = await fetch(\n            \"/v1/signature?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setDeliveredBySignatureOptions(data.result);\n        setIsDeliveredBySignaturesLoading(false);\n    }\n\n    function handleCreate(event) {\n        event.preventDefault();\n\n        formData.products = [];\n        for (var i = 0; i < selectedProducts.length; i++) {\n            formData.products.push({\n                product_id: selectedProducts[i].product_id,\n                quantity: parseFloat(selectedProducts[i].quantity),\n                unit_price: parseFloat(selectedProducts[i].unit_price),\n                unit: selectedProducts[i].unit,\n            });\n        }\n\n\n        if (!formData.shipping_handling_fees && formData.shipping_handling_fees !== 0) {\n            errors[\"shipping_handling_fees\"] = \"Invalid shipping / handling fees\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (formData.payment_status === \"paid_partially\" && !formData.partial_payment_amount && formData.partial_payment_amount !== 0) {\n            errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount <= 0) {\n            errors[\"partial_payment_amount\"] = \"Partial payment should be > 0 \";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (!formData.id && formData.payment_status === \"paid_partially\" && formData.partial_payment_amount >= netTotal) {\n            errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n            setErrors({ ...errors });\n            return;\n        }\n\n        errors[\"payment_method\"] = \"\";\n        setErrors({ ...errors });\n        if (!formData.id && formData.payment_status != \"not_paid\" && !formData.payment_method) {\n            errors[\"payment_method\"] = \"Payment method is required\";\n            setErrors({ ...errors });\n            return;\n        }\n\n\n        if (!formData.discount && formData.discount !== 0) {\n            errors[\"discount\"] = \"Invalid discount\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (!formData.discount_percent && formData.discount_percent !== 0) {\n            errors[\"discount_percent\"] = \"Invalid discount percent\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (parseFloat(formData.discount_percent) > 100) {\n            errors[\"discount_percent\"] = \"Discount percent cannot be > 100\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (!formData.vat_percent && formData.vat_percent !== 0) {\n            errors[\"vat_percent\"] = \"Invalid vat percent\";\n            setErrors({ ...errors });\n            return;\n        }\n\n\n\n        formData.discount = parseFloat(formData.discount);\n        formData.discount_percent = parseFloat(formData.discount_percent);\n        formData.vat_percent = parseFloat(formData.vat_percent);\n        formData.partial_payment_amount = parseFloat(formData.partial_payment_amount);\n        formData.net_total = parseFloat(netTotal);\n\n        if (cookies.get('store_id')) {\n            formData.store_id = cookies.get('store_id');\n        }\n\n\n        let endPoint = \"/v1/order\";\n        let method = \"POST\";\n        if (formData.id) {\n            endPoint = \"/v1/order/\" + formData.id;\n            method = \"PUT\";\n        }\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n            body: JSON.stringify(formData),\n        };\n\n        console.log(\"formData:\", formData);\n\n        setProcessing(true);\n        fetch(endPoint, requestOptions)\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = data && data.errors;\n                    //const error = data.errors\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n                setProcessing(false);\n\n                console.log(\"Response:\");\n                console.log(data);\n                props.showToastMessage(\"Order Created Successfully!\", \"success\");\n                if (props.refreshList) {\n                    props.refreshList();\n                }\n\n                handleClose();\n                formData.products = [];\n                selectedProducts = [];\n                setSelectedProducts([]);\n                formData.customer_id = \"\";\n                setSelectedCustomers([]);\n                setFormData({ ...formData });\n                reCalculate();\n\n                openDetailsView(data.result.id);\n            })\n            .catch((error) => {\n                setProcessing(false);\n                console.log(\"Inside catch\");\n                console.log(error);\n                setErrors({ ...error });\n                console.error(\"There was an error!\", error);\n                props.showToastMessage(\"Error Creating Order!\", \"danger\");\n            });\n    }\n\n    function getProductIndex(productID) {\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (selectedProducts[i].product_id === productID) {\n                return i;\n            }\n        }\n        return false;\n    }\n\n\n    function isProductAdded(productID) {\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (selectedProducts[i].product_id === productID) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function GetProductStockInStore(storeId, productStores) {\n        if (!productStores) {\n            return 0.0;\n        }\n\n        for (var i = 0; i < productStores.length; i++) {\n            if (productStores[i].store_id === storeId) {\n                return productStores[i].stock;\n            }\n        }\n        return 0.0;\n    }\n\n    function addProduct(product) {\n        console.log(\"Inside Add product\");\n        if (!formData.store_id) {\n            errors.product_id = \"Please Select a Store and try again\";\n            setErrors({ ...errors });\n            return;\n        }\n\n\n        errors.product_id = \"\";\n        if (!product) {\n            errors.product_id = \"Invalid Product\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        /*\n        let productStore = GetProductUnitPriceInStore(\n            formData.store_id,\n            product.stores\n        );\n        */\n        // product.unit_price = productStore.retail_unit_price;\n\n        if (product.product_stores[formData.store_id]) {\n            product.unit_price = product.product_stores[formData.store_id].retail_unit_price;\n        }\n\n\n        errors.unit_price = \"\";\n        if (!product.unit_price) {\n            errors.unit_price = \"Invalid Unit Price\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        let alreadyAdded = false;\n        let index = false;\n        let quantity = 0.00;\n        product.quantity = 1.00;\n\n\n        if (isProductAdded(product.id)) {\n            alreadyAdded = true;\n            index = getProductIndex(product.id);\n            quantity = parseFloat(selectedProducts[index].quantity + product.quantity);\n        } else {\n            quantity = parseFloat(product.quantity);\n        }\n\n        console.log(\"quantity:\", quantity);\n\n        errors.quantity = \"\";\n\n        //let stock = GetProductStockInStore(formData.store_id, product.stores);\n        let stock = 0;\n\n        if (product.product_stores[formData.store_id]) {\n            stock = product.product_stores[formData.store_id].stock;\n        }\n\n        if (stock < quantity) {\n            if (index === false) {\n                index = selectedProducts.length;\n            }\n            // errors[\"quantity_\" + index] = \"Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for product: \" + product.name;\n            errors[\"quantity_\" + index] = \"Warning: Available stock is \" + stock\n            console.log(\"errors:\", errors);\n            setErrors({ ...errors });\n        }\n\n        if (alreadyAdded) {\n            selectedProducts[index].quantity = parseFloat(quantity);\n        }\n\n        if (!alreadyAdded) {\n            selectedProducts.push({\n                product_id: product.id,\n                code: product.item_code,\n                part_number: product.part_number,\n                name: product.name,\n                quantity: product.quantity,\n                product_stores: product.product_stores,\n                unit_price: parseFloat(product.unit_price).toFixed(2),\n                unit: product.unit,\n            });\n        }\n        setSelectedProducts([...selectedProducts]);\n        reCalculate();\n    }\n\n    function removeProduct(product) {\n        const index = selectedProducts.indexOf(product);\n        if (index > -1) {\n            selectedProducts.splice(index, 1);\n        }\n        setSelectedProducts([...selectedProducts]);\n\n        reCalculate();\n    }\n\n    let [totalPrice, setTotalPrice] = useState(0.0);\n\n    function findTotalPrice() {\n        totalPrice = 0.00;\n        for (var i = 0; i < selectedProducts.length; i++) {\n            totalPrice +=\n                parseFloat(selectedProducts[i].unit_price) *\n                parseFloat(selectedProducts[i].quantity);\n        }\n        totalPrice = totalPrice.toFixed(2);\n        setTotalPrice(totalPrice);\n    }\n\n    let [vatPrice, setVatPrice] = useState(0.00);\n\n    function findVatPrice() {\n        vatPrice = 0.00;\n        if (totalPrice > 0) {\n            vatPrice = (parseFloat((parseFloat(formData.vat_percent) / 100)) * (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount))).toFixed(2);;\n            console.log(\"vatPrice:\", vatPrice);\n        }\n        setVatPrice(vatPrice);\n    }\n\n    let [netTotal, setNetTotal] = useState(0.00);\n\n    function findNetTotal() {\n        netTotal = 0.00;\n        if (totalPrice > 0) {\n            netTotal = (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount) + parseFloat(vatPrice)).toFixed(2);\n        }\n        setNetTotal(netTotal);\n\n        formData.payments = [{\n            \"date_str\": formData.date_str,\n            \"amount\": \"\",\n            \"method\": \"\",\n            \"deleted\": false,\n        }];\n        formData.payments[0].amount = parseFloat(netTotal);\n        setFormData({ ...formData });\n    }\n\n    let [discountPercent, setDiscountPercent] = useState(0.00);\n\n    function findDiscountPercent() {\n        if (formData.discount >= 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100).toFixed(2);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            setFormData({ ...formData });\n        }\n    }\n\n    function findDiscount() {\n        if (formData.discount_percent >= 0 && totalPrice > 0) {\n            formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)).toFixed(2);\n            setFormData({ ...formData });\n        }\n    }\n\n\n    function reCalculate() {\n        findTotalPrice();\n        if (formData.is_discount_percent) {\n            findDiscount();\n        } else {\n            findDiscountPercent();\n        }\n        findVatPrice();\n        findNetTotal();\n    }\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n    const StoreCreateFormRef = useRef();\n    function openStoreCreateForm() {\n        StoreCreateFormRef.current.open();\n    }\n\n    const CustomerCreateFormRef = useRef();\n    function openCustomerCreateForm() {\n        CustomerCreateFormRef.current.open();\n    }\n\n    const ProductCreateFormRef = useRef();\n    function openProductCreateForm() {\n        ProductCreateFormRef.current.open();\n    }\n\n\n    const UserCreateFormRef = useRef();\n    function openUserCreateForm() {\n        UserCreateFormRef.current.open();\n    }\n\n\n    const SignatureCreateFormRef = useRef();\n    function openSignatureCreateForm() {\n        SignatureCreateFormRef.current.open();\n    }\n\n\n    const ProductDetailsViewRef = useRef();\n    function openProductDetailsView(id) {\n        ProductDetailsViewRef.current.open(id);\n    }\n\n    function addNewPayment() {\n        formData.payments.push({\n            \"date_str\": new Date(),\n            \"amount\": \"\",\n            \"method\": \"\",\n            \"deleted\": false,\n        });\n        setFormData({ ...formData });\n    }\n\n    function getTotalPayments() {\n        let totalPayment = 0.00;\n        for (var i = 0; i < formData.payments.length; i++) {\n            if (formData.payments[i].amount && !formData.payments[i].deleted) {\n                totalPayment += formData.payments[i].amount;\n            }\n        }\n        return totalPayment;\n    }\n\n\n    return (\n        <>\n            {/*\n            <div ref={camref}></div>\n        */}\n\n            {/*\n            <BarcodeScannerComponent\n                width={500}\n                height={500}\n                onUpdate={(err, result) => {\n                    console.log(\"Result:\", result);\n                }}\n            />\n            */}\n\n            <OrderView ref={DetailsViewRef} openCreateForm={props.openCreateForm} />\n            <ProductView ref={ProductDetailsViewRef} />\n            <StoreCreate ref={StoreCreateFormRef} showToastMessage={props.showToastMessage} />\n            <CustomerCreate ref={CustomerCreateFormRef} showToastMessage={props.showToastMessage} />\n            <ProductCreate ref={ProductCreateFormRef} showToastMessage={props.showToastMessage} />\n            <UserCreate ref={UserCreateFormRef} showToastMessage={props.showToastMessage} />\n            <SignatureCreate ref={SignatureCreateFormRef} showToastMessage={props.showToastMessage} />\n\n\n            <Modal show={show} size=\"xl\" fullscreen\n                onHide={handleClose} animation={false} backdrop=\"static\" scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>\n                        {formData.id ? \"Update Sales Order #\" + formData.code : \"Create New Sales Order\"}\n                    </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <OrderPreview />\n                        <Button variant=\"primary\" onClick={handleCreate}>\n                            {isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n                            }\n                        </Button>\n\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    {Object.keys(errors).length > 0 ?\n                        <div>\n                            <ul>\n\n                                {errors && Object.keys(errors).map((key, index) => {\n                                    return (errors[key] ? <li style={{ color: \"red\" }}>{errors[key]}</li> : \"\");\n                                })}\n                            </ul></div> : \"\"}\n\n                    <form className=\"row g-3 needs-validation\" onSubmit={e => { e.preventDefault(); handleCreate(e); }} >\n                        {!cookies.get('store_name') ? <div className=\"col-md-6\">\n                            <label className=\"form-label\">Store*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"store_id\"\n                                    labelKey=\"name\"\n                                    isLoading={isStoresLoading}\n                                    isInvalid={errors.store_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.store_id = \"\";\n                                        errors[\"product_id\"] = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.store_id = \"Invalid Store selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedStores([]);\n                                            return;\n                                        }\n                                        formData.store_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        console.log(\"formData.store_id:\", formData.store_id);\n                                        selectedStores = selectedItems;\n                                        setSelectedStores([...selectedItems]);\n\n                                        if (formData.store_id) {\n                                            if (selectedProduct[0] && selectedProduct[0].product_stores && selectedProduct[0].quantity) {\n                                                let stock = 0;\n                                                if (selectedProduct[0].product_stores) {\n                                                    //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n                                                    if (selectedProduct[0].product_stores[formData.store_id]) {\n                                                        stock = selectedProduct[0].product_stores[formData.store_id].stock\n                                                    }\n                                                }\n\n                                                if (stock < parseFloat(selectedProduct[0].quantity)) {\n                                                    if (selectedStores[0]) {\n                                                        errors.product_id = \"Stock is only \" + stock + \" in Store: \" + selectedStores[0].name + \" for this product\";\n                                                    } else {\n                                                        errors.product_id = \"Stock is only \" + stock + \" in Selected Store for this product\";\n                                                    }\n\n                                                    setErrors({ ...errors });\n                                                }\n                                            } else if (selectedProduct[0] && selectedProduct[0].product_stores) {\n                                                let stock = 0;\n                                                //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n                                                if (selectedProduct[0].product_stores[formData.store_id]) {\n                                                    stock = selectedProduct[0].product_stores[formData.store_id].stock\n                                                }\n\n                                                if (stock === 0) {\n                                                    if (selectedStores[0]) {\n                                                        errors[\"product_id\"] = \"This product is not available in store: \" + selectedStores[0].name;\n                                                    } else {\n                                                        errors[\"product_id\"] = \"This product is not available in selected store.\"\n                                                    }\n                                                    setErrors({ ...errors });\n                                                }\n                                            }\n\n                                            if (selectedProduct[0]) {\n                                                /*\n                                                selectedProduct[0].unit_price = GetProductUnitPriceInStore(\n                                                    formData.store_id,\n                                                    selectedProduct[0].stores\n                                                );\n                                                */\n                                                if (selectedProduct[0].product_stores[formData.store_id]) {\n                                                    selectedProduct[0].unit_price = selectedProduct[0].product_stores[formData.store_id].retail_unit_price;\n                                                }\n\n\n                                                if (!selectedProduct[0].quantity) {\n                                                    selectedProduct[0].quantity = 1;\n                                                }\n                                                setSelectedProduct([...selectedProduct]);\n                                            }\n\n                                        }\n\n                                    }\n                                    }\n                                    options={storeOptions}\n                                    placeholder=\"Select Store\"\n                                    selected={selectedStores}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestStores(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openStoreCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi x-lg\"> </i>\n                                    {errors.store_id}\n                                </div>\n                            </div>\n                        </div> : \"\"}\n\n                        <div className=\"col-md-6\" style={{ border: \"solid 0px\" }}>\n                            <label className=\"form-label\">Customer*</label>\n                            <Typeahead\n                                id=\"customer_id\"\n                                labelKey=\"search_label\"\n                                isLoading={isCustomersLoading}\n                                isInvalid={errors.customer_id ? true : false}\n                                onChange={(selectedItems) => {\n                                    errors.customer_id = \"\";\n                                    setErrors(errors);\n                                    if (selectedItems.length === 0) {\n                                        errors.customer_id = \"Invalid Customer selected\";\n                                        setErrors(errors);\n                                        formData.customer_id = \"\";\n                                        setFormData({ ...formData });\n                                        setSelectedCustomers([]);\n                                        return;\n                                    }\n                                    formData.customer_id = selectedItems[0].id;\n                                    setFormData({ ...formData });\n                                    setSelectedCustomers(selectedItems);\n                                }}\n                                options={customerOptions}\n                                placeholder=\"Type name or mob\"\n                                selected={selectedCustomers}\n                                highlightOnlyResult={true}\n                                onInputChange={(searchTerm, e) => {\n                                    suggestCustomers(searchTerm);\n                                }}\n                            />\n                            <Button hide={true.toString()} onClick={openCustomerCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                            {errors.customer_id && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.customer_id}\n                                </div>\n                            )}\n\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <label className=\"form-label\">Product Barcode Scan</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DebounceInput\n                                    minLength={3}\n                                    debounceTimeout={100}\n                                    placeholder=\"Scan Barcode\"\n                                    className=\"form-control barcode\"\n                                    value={formData.barcode}\n                                    onChange={event => getProductByBarCode(event.target.value)} />\n                                {errors.bar_code && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.bar_code}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <label className=\"form-label\">Date*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"date_str\"\n                                    selected={formData.date_str ? new Date(formData.date_str) : null}\n                                    value={formData.date_str ? format(\n                                        new Date(formData.date_str),\n                                        \"MMMM d, yyyy h:mm aa\"\n                                    ) : null}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                    showTimeSelect\n                                    timeIntervals=\"1\"\n                                    onChange={(value) => {\n                                        console.log(\"Value\", value);\n                                        formData.date_str = value;\n                                        // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n\n                                {errors.date_str && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.date_str}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n\n                        <div className=\"col-md-12\">\n                            <label className=\"form-label\">Product Search*</label>\n                            {/*  \n                            <Form.Check\n                                type=\"switch\"\n                                as=\"input\"\n                                id=\"use_laser_scanner\"\n                                label=\"Use Laser Scanner to Read Barcode\"\n                                onChange={(e) => {\n\n                                    formData.useLaserScanner = !formData.useLaserScanner;\n\n                                    if (formData.useLaserScanner) {\n                                        console.log(\"adding keydown event\");\n                                        document.addEventListener(\"keydown\", keyPress);\n                                    } else {\n                                        console.log(\"removing keydown event\");\n                                        document.removeEventListener(\"keydown\", keyPress);\n                                    }\n\n                                    console.log(\"e.target.value:\", formData.useLaserScanner);\n\n                                    setFormData({ ...formData });\n\n                                }}\n                            />\n                            */}\n\n                            <Typeahead\n                                id=\"product_id\"\n                                size=\"lg\"\n                                labelKey=\"search_label\"\n                                emptyLabel=\"\"\n                                clearButton={true}\n                                open={openProductSearchResult}\n                                isLoading={isProductsLoading}\n                                isInvalid={errors.product_id ? true : false}\n                                onChange={(selectedItems) => {\n                                    if (selectedItems.length === 0) {\n                                        errors[\"product_id\"] = \"Invalid Product selected\";\n                                        setErrors(errors);\n                                        return;\n                                    }\n                                    errors[\"product_id\"] = \"\";\n                                    setErrors({ ...errors });\n\n                                    if (formData.store_id) {\n                                        addProduct(selectedItems[0]);\n\n                                    }\n                                    setOpenProductSearchResult(false);\n                                }}\n                                options={productOptions}\n                                selected={selectedProduct}\n                                placeholder=\"Search By Part No. / Name / Name in Arabic\"\n                                highlightOnlyResult={true}\n                                onInputChange={(searchTerm, e) => {\n                                    suggestProducts(searchTerm);\n                                }}\n                            />\n                            <Button hide={true.toString()} onClick={openProductCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                            {errors.product_id ? (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.product_id}\n                                </div>\n                            ) : \"\"}\n                        </div>\n\n\n\n                        <div className=\"table-responsive\" style={{ overflowX: \"auto\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <thead>\n                                    <tr className=\"text-center\">\n                                        <th style={{ width: \"3%\" }}>Remove</th>\n                                        <th style={{ width: \"5%\" }}>SI No.</th>\n                                        <th style={{ width: \"10%\" }}>Part No.</th>\n                                        <th style={{ width: \"30%\" }} className=\"text-start\">Name</th>\n                                        <th style={{ width: \"15%\" }} >Qty</th>\n                                        <th style={{ width: \"18%\" }}>Unit Price</th>\n                                        <th style={{ width: \"32%\" }}>Price</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedProducts.map((product, index) => (\n                                        <tr className=\"text-center\" key={index}>\n                                            <td>\n                                                <div\n                                                    style={{ color: \"red\", cursor: \"pointer\" }}\n                                                    onClick={() => {\n                                                        removeProduct(product);\n                                                    }}\n                                                >\n                                                    <i className=\"bi bi-x-lg\"> </i>\n                                                </div>\n                                            </td>\n                                            <td >{index + 1}</td>\n                                            <td  >{product.part_number}</td>\n                                            <td style={{\n                                                textDecoration: \"underline\",\n                                                color: \"blue\",\n                                                cursor: \"pointer\",\n\n                                            }}\n                                                className=\"text-start\"\n                                                onClick={() => {\n                                                    openProductDetailsView(product.product_id);\n                                                }}>{product.name}\n                                            </td>\n                                            <td >\n\n                                                <div className=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.quantity} className=\"form-control text-end\"\n\n                                                        placeholder=\"Quantity\" onChange={(e) => {\n                                                            errors[\"quantity_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                                                                selectedProducts[index].quantity = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (e.target.value === 0) {\n                                                                errors[\"quantity_\" + index] = \"Quantity should be > 0\";\n                                                                selectedProducts[index].quantity = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            product.quantity = parseFloat(e.target.value);\n                                                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                            reCalculate();\n\n                                                            let stock = 0;\n                                                            if (selectedProducts[index].product_stores) {\n                                                                stock = selectedProducts[index].product_stores[formData.store_id]?.stock;\n                                                                // stock = GetProductStockInStore(formData.store_id, selectedProducts[index].stores);\n                                                            }\n\n                                                            if (stock < parseFloat(e.target.value) && selectedProducts[index].product_stores) {\n                                                                // errors[\"quantity_\" + index] = \" Warning: Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for this product\";\n                                                                errors[\"quantity_\" + index] = \" Warning: Available stock is \" + stock;\n                                                                setErrors({ ...errors });\n                                                                return;\n                                                            }\n\n                                                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                            console.log(\"selectedProducts[index].quantity:\", selectedProducts[index].quantity);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span className=\"input-group-text\" id=\"basic-addon2\">{selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"}</span>\n                                                </div>\n                                                {errors[\"quantity_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        {errors[\"quantity_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td>\n\n                                                <div className=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.unit_price} className=\"form-control text-end\"\n\n                                                        placeholder=\"Unit Price\" onChange={(e) => {\n                                                            errors[\"unit_price_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                                                                selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (e.target.value === 0) {\n                                                                errors[\"unit_price_\" + index] = \"Unit Price should be > 0\";\n                                                                selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                            console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span className=\"input-group-text\" id=\"basic-addon2\">SAR</span>\n                                                </div>\n                                                {errors[\"unit_price_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"unit_price_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td className=\"text-end\" >\n                                                <NumberFormat\n                                                    value={(product.unit_price * product.quantity).toFixed(2)}\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    suffix={\" SAR\"}\n                                                    renderText={(value, props) => value}\n                                                />\n                                            </td>\n                                        </tr>\n                                    )).reverse()}\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <tbody>\n                                    <tr>\n\n\n                                        <th colSpan=\"8\" className=\"text-end\">Total</th>\n                                        <td className=\"text-end\" style={{ width: \"200px\" }} >\n                                            <NumberFormat\n                                                value={totalPrice}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th colSpan=\"8\" className=\"text-end\">\n                                            Shipping & Handling Fees\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <input type=\"number\" style={{ width: \"150px\" }} className=\"text-start\" value={formData.shipping_handling_fees} onChange={(e) => {\n\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.shipping_handling_fees = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"shipping_handling_fees\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.shipping_handling_fees = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"shipping_handling_fees\"] = \"Shipping / Handling Fees should be > 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.shipping_handling_fees = \"\";\n                                                    errors[\"shipping_handling_fees\"] = \"Invalid Shipping / Handling Fees\";\n                                                    setFormData({ ...formData });\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"shipping_handling_fees\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.shipping_handling_fees = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />\n                                            {\" SAR\"}\n                                            {errors.shipping_handling_fees && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.shipping_handling_fees}\n                                                </div>\n                                            )}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th colSpan=\"8\" className=\"text-end\">\n                                            Discount  <input type=\"number\" style={{ width: \"50px\" }} className=\"text-start\" value={formData.discount_percent} onChange={(e) => {\n                                                formData.is_discount_percent = true;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    formData.discount = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount_percent = \"\";\n                                                    formData.discount = 0.00;\n                                                    errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                                                    setFormData({ ...formData });\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount_percent\"] = \"\";\n                                                errors[\"discount\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount_percent = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />{\"%\"}\n                                            {errors.discount_percent && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount_percent}\n                                                </div>\n                                            )}\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <input type=\"number\" style={{ width: \"150px\" }} className=\"text-start\" value={formData.discount} onChange={(e) => {\n                                                formData.is_discount_percent = false;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    formData.discount_percent = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"Discount should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount = \"\";\n                                                    formData.discount_percent = 0.00;\n                                                    errors[\"discount\"] = \"Invalid Discount\";\n                                                    setFormData({ ...formData });\n                                                    reCalculate();\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount\"] = \"\";\n                                                errors[\"discount_percent\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />\n                                            {\" SAR\"}\n                                            {errors.discount && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount}\n                                                </div>\n                                            )}\n                                        </td>\n                                    </tr>\n                                    <tr>\n\n                                        <th colSpan=\"8\" className=\"text-end\"> VAT  <input type=\"number\" className=\"text-center\" style={{ width: \"50px\" }} value={formData.vat_percent} onChange={(e) => {\n                                            console.log(\"Inside onchange vat percent\");\n                                            if (parseFloat(e.target.value) === 0) {\n                                                formData.vat_percent = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                errors[\"vat_percent\"] = \"\";\n                                                setErrors({ ...errors });\n                                                reCalculate();\n                                                return;\n                                            }\n                                            if (parseFloat(e.target.value) < 0) {\n                                                formData.vat_percent = parseFloat(e.target.value);\n                                                vatPrice = 0.00;\n                                                setVatPrice(vatPrice);\n                                                setFormData({ ...formData });\n                                                errors[\"vat_percent\"] = \"Vat percent should be >= 0\";\n                                                setErrors({ ...errors });\n                                                reCalculate();\n                                                return;\n                                            }\n\n\n                                            if (!e.target.value) {\n                                                formData.vat_percent = \"\";\n                                                vatPrice = 0.00;\n                                                setVatPrice(vatPrice);\n                                                //formData.discount_percent = 0.00;\n                                                errors[\"vat_percent\"] = \"Invalid vat percent\";\n                                                setFormData({ ...formData });\n                                                setErrors({ ...errors });\n                                                return;\n                                            }\n                                            errors[\"vat_percent\"] = \"\";\n                                            setErrors({ ...errors });\n\n                                            formData.vat_percent = e.target.value;\n                                            reCalculate();\n                                            setFormData({ ...formData });\n                                            console.log(formData);\n                                        }} />{\"%\"}\n                                            {errors.vat_percent && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.vat_percent}\n                                                </div>\n                                            )}\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <NumberFormat\n                                                value={vatPrice}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n\n                                        <th colSpan=\"8\" className=\"text-end\">Net Total</th>\n                                        <th className=\"text-end\">\n                                            <NumberFormat\n                                                value={netTotal}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </th>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                        {/*  \n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Date*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"date_str\"\n                                    value={formData.date_str}\n                                    selected={selectedDate}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMM dd yyyy\"\n                                    onChange={(value) => {\n                                        formData.date_str = format(new Date(value), \"MMM dd yyyy\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n\n                                {errors.date_str && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.date_str}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                                */}\n                        {/*\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">VAT %*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.vat_percent}\n                                    type='number'\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange vat percent\");\n                                        if (isNaN(e.target.value)) {\n                                            errors[\"vat_percent\"] = \"Invalid VAT percentage\";\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"vat_percent\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.vat_percent = e.target.value;\n                                        findVatPrice();\n                                        findNetTotal();\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"validationCustom01\"\n                                    placeholder=\"VAT %\"\n                                    aria-label=\"Select Store\"\n                                    aria-describedby=\"button-addon1\"\n                                />\n                                {errors.vat_percent && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.vat_percent}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                                */}\n                        {/*\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Discount*</label>\n                            <Form.Check\n                                type=\"switch\"\n                                id=\"custom-switch\"\n                                label=\"%\"\n                                value={formData.is_discount_percent}\n                                onChange={(e) => {\n                                    formData.is_discount_percent = !formData.is_discount_percent;\n                                    console.log(\"e.target.value:\", formData.is_discount_percent);\n                                    setFormData({ ...formData });\n                                    reCalculate();\n                                }}\n                            />\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.discountValue}\n                                    type='number'\n                                    onChange={(e) => {\n\n                                        if (parseFloat(e.target.value) === 0) {\n                                            formData.discountValue = parseFloat(e.target.value);\n                                            setFormData({ ...formData });\n                                            errors[\"discount\"] = \"\";\n                                            setErrors({ ...errors });\n                                            reCalculate();\n                                            return;\n                                        }\n\n                                        if (!e.target.value) {\n                                            formData.discountValue = \"\";\n                                            errors[\"discount\"] = \"Invalid Discount\";\n                                            setFormData({ ...formData });\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"discount\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.discountValue = e.target.value;\n                                        setFormData({ ...formData });\n                                        reCalculate();\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"validationCustom02\"\n                                    placeholder=\"Discount\"\n                                    aria-label=\"Select Customer\"\n                                    aria-describedby=\"button-addon2\"\n                                />\n                                {errors.discount && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.discount}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                                */}\n\n\n                        {/*  \n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Delivered By*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"delivered_by\"\n                                    labelKey=\"name\"\n                                    isLoading={isDeliveredByUsersLoading}\n                                    isInvalid={errors.delivered_by ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.delivered_by = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.delivered_by = \"Invalid User Selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedDeliveredByUsers([]);\n                                            return;\n                                        }\n                                        formData.delivered_by = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        setSelectedDeliveredByUsers(selectedItems);\n                                    }}\n                                    options={deliveredByUserOptions}\n                                    placeholder=\"Select User\"\n                                    selected={selectedDeliveredByUsers}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestUsers(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openUserCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                {errors.delivered_by ? (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i> {errors.delivered_by}\n                                    </div>\n                                ) : \"\"}\n                            </div>\n                        </div>\n                                */}\n                        {/*\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">\n                                Delivered By Signature(Optional)\n                            </label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"delivered_by_signature_id\"\n                                    labelKey=\"name\"\n                                    isLoading={isDeliveredBySignaturesLoading}\n                                    isInvalid={errors.delivered_by_signature_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.delivered_by_signature_id = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.delivered_by_signature_id =\n                                                \"Invalid Signature Selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedDeliveredBySignatures([]);\n                                            return;\n                                        }\n                                        formData.delivered_by_signature_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        setSelectedDeliveredBySignatures(selectedItems);\n                                    }}\n                                    options={deliveredBySignatureOptions}\n                                    placeholder=\"Select Signature\"\n                                    selected={selectedDeliveredBySignatures}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestSignatures(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openSignatureCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                {errors.delivered_by_signature_id ? (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>{\" \"}\n                                        {errors.delivered_by_signature_id}\n                                    </div>\n                                ) : \"\"}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Signature Date(Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"signature_date_str\"\n                                    value={formData.signature_date_str}\n                                    selected={selectedDate}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMM dd yyyy\"\n                                    onChange={(value) => {\n                                        formData.signature_date_str = format(new Date(value), \"MMM dd yyyy\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n\n                                {errors.signature_date_str && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.signature_date_str}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                                */}\n\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Cash discount</label>\n                            <input type='number' value={formData.cash_discount} className=\"form-control \"\n                                onChange={(e) => {\n                                    if (!e.target.value) {\n                                        formData.cash_discount = e.target.value;\n                                        setFormData({ ...formData });\n                                        return;\n                                    }\n\n                                    formData.cash_discount = parseFloat(e.target.value);\n\n                                    setFormData({ ...formData });\n                                    console.log(formData);\n                                }}\n                            />\n\n                            {errors.cash_discount && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.cash_discount}\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Payments Received</label>\n                            <div class=\"table-responsive\" style={{ maxWidth: \"800px\" }}>\n                                <table class=\"table table-striped table-sm table-bordered\">\n                                    <thead>\n                                        <th>\n                                            Date\n                                        </th>\n                                        <th>\n                                            Amount\n                                        </th>\n                                        <th>\n                                            Payment method\n                                        </th>\n                                        <th>\n                                            Action\n                                        </th>\n\n                                    </thead>\n                                    <tbody>\n                                        {formData.payments &&\n                                            formData.payments.map((payment, key) => (\n                                                <tr key={key}>\n                                                    <td style={{ minWidth: \"220px\" }}>\n\n                                                        <DatePicker\n                                                            id=\"date_str\"\n                                                            selected={formData.payments[key].date_str ? new Date(formData.payments[key].date_str) : null}\n                                                            value={formData.payments[key].date_str ? format(\n                                                                new Date(formData.payments[key].date_str),\n                                                                \"MMMM d, yyyy h:mm aa\"\n                                                            ) : null}\n                                                            className=\"form-control\"\n                                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                            showTimeSelect\n                                                            timeIntervals=\"1\"\n                                                            onChange={(value) => {\n                                                                console.log(\"Value\", value);\n                                                                formData.payments[key].date_str = value;\n                                                                // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n                                                                setFormData({ ...formData });\n                                                            }}\n                                                        />\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        <input type='number' value={formData.payments[key].amount} className=\"form-control \"\n                                                            onChange={(e) => {\n                                                                errors[\"payment_amount\"][key] = \"\";\n                                                                setErrors({ ...errors });\n\n                                                                if (!e.target.value) {\n                                                                    formData.payments[key].amount = e.target.value;\n                                                                    setFormData({ ...formData });\n                                                                    return;\n                                                                }\n\n                                                                formData.payments[key].amount = parseFloat(e.target.value);\n                                                                let totalPayment = getTotalPayments();\n                                                                let maxAllowedAmount = (netTotal - formData.cash_discount) - (totalPayment - formData.payments[key].amount);\n                                        \n                                                                if (formData.payments[key].amount > maxAllowedAmount) {\n                                                                    errors[\"payment_amount\"][key] = \"Amount should not be greater than \" + maxAllowedAmount.toString();\n                                                                    setErrors({ ...errors });\n                                                                }\n\n\n                                                                setFormData({ ...formData });\n                                                                console.log(formData);\n                                                            }}\n                                                        />\n                                                        {errors[\"payment_amount\"] && errors[\"payment_amount\"][key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_amount\"][key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        <select value={formData.payments[key].method} className=\"form-control \"\n                                                            onChange={(e) => {\n                                                                if (!e.target.value) {\n                                                                    /* errors[\"payment_method\"] = \"Payment method is required\";\n                                                                     setErrors({ ...errors });\n                                                                     */\n                                                                    formData.payments[key].method = \"\";\n                                                                    setFormData({ ...formData });\n                                                                    return;\n                                                                }\n\n                                                                // errors[\"payment_method\"] = \"\";\n                                                                //setErrors({ ...errors });\n\n                                                                formData.payments[key].method = e.target.value;\n                                                                setFormData({ ...formData });\n                                                                console.log(formData);\n                                                            }}\n                                                        >\n                                                            <option value=\"\">Select</option>\n                                                            <option value=\"cash\">Cash</option>\n                                                            <option value=\"bank_account\">Bank Account / Debit / Credit Card</option>\n                                                            <option value=\"customer_account\">Customer Account</option>\n                                                        </select>\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        {formData.payments.length == (key + 1) ? <Button variant=\"secondary\" onClick={addNewPayment}>\n                                                            New payment\n                                                        </Button> : \"\"}\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n\n                        {/*\n                        {!formData.id ? <div className=\"col-md-2\">\n                            <label className=\"form-label\">Payment method*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <select\n                                    value={formData.payment_method}\n                                    disabled={formData.payment_status == \"not_paid\" ? \"disabled\" : \"\"}\n                                    onChange={(e) => {\n                                        if (!e.target.value) {\n                                            errors[\"payment_method\"] = \"Payment method is required\";\n                                            setErrors({ ...errors });\n                                            formData.payment_method = \"\";\n                                            setFormData({ ...formData });\n                                            return;\n                                        }\n\n                                        errors[\"payment_method\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.payment_method = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                >\n                                    <option value=\"\">Select</option>\n                                    <option value=\"cash\">Cash</option>\n                                    <option value=\"bank_account\">Bank Account / Debit / Credit Card</option>\n                                    <option value=\"customer_account\">Customer Account</option>\n                                </select>\n                                {errors.payment_method && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.payment_method}\n                                    </div>\n                                )}\n                            </div>\n                        </div> : \"\"}\n                        {!formData.id ? <div className=\"col-md-2\">\n                            <label className=\"form-label\">Payment Status*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <select\n                                    value={formData.payment_status}\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange payment Status\");\n                                        if (!e.target.value) {\n                                            errors[\"payment_status\"] = \"Payment status is required\";\n                                            formData.payment_status = \"\";\n                                            setFormData({ ...formData });\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"payment_status\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.payment_status = e.target.value;\n                                        if (formData.payment_status !== \"paid_partially\") {\n                                            formData.partial_payment_amount = 0.00;\n                                        }\n                                        setFormData({ ...formData });\n\n                                        if (formData.payment_status == \"not_paid\") {\n                                            formData.payment_method = \"\";\n                                            setFormData({ ...formData });\n                                        }\n\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                >\n                                    <option value=\"\">Select</option>\n                                    <option value=\"paid\">Paid</option>\n                                    <option value=\"not_paid\">Not Paid</option>\n                                    <option value=\"paid_partially\">Paid Partially</option>\n                                </select>\n                                {errors.payment_status && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.payment_status}\n                                    </div>\n                                )}\n                            </div>\n                        </div> : \"\"}\n\n\n                        {!formData.id && formData.payment_status === \"paid_partially\" ? <div className=\"col-md-3\">\n                            <label className=\"form-label\">Patial Payment Amount*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type='number'\n                                    value={formData.partial_payment_amount}\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange vat discount\");\n                                        if (!e.target.value) {\n                                            formData.partial_payment_amount = e.target.value;\n                                            errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n                                        formData.partial_payment_amount = parseFloat(e.target.value);\n                                        errors[\"partial_payment_amount\"] = \"\";\n\n                                        if (!formData.id && formData.partial_payment_amount >= netTotal) {\n                                            errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n                                        setErrors({ ...errors });\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"validationCustom02\"\n                                    placeholder=\"Amount\"\n                                />\n                                {errors.partial_payment_amount && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.partial_payment_amount}\n                                    </div>\n                                )}\n                            </div>\n                        </div> : \"\"}\n                                */}\n\n\n\n                        {/*\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">ID</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.code ? formData.code : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"code\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.code = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"code\"\n                                    placeholder=\"Code\"\n                                />\n                                {errors.code && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.code}\n                                    </div>\n                                )}\n                                {formData.code && !errors.code && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                                */}\n\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleCreate}>\n                                {isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n                                }\n                            </Button>\n                        </Modal.Footer>\n                    </form>\n                </Modal.Body>\n\n            </Modal >\n\n\n        </>\n    );\n});\n\nexport default OrderCreate;\n"]},"metadata":{},"sourceType":"module"}