{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toTLV = exports.toBase64 = exports.byteLength = exports.toHex = void 0;\n\nconst node_buffer_1 = require(\"node:buffer\");\n\nfunction toHex(value) {\n  let hex = value.toString(16);\n\n  if (hex.length % 2 > 0) {\n    hex = \"0\" + hex;\n  }\n\n  return node_buffer_1.Buffer.from(hex, \"hex\").toString(\"utf-8\");\n}\n\nexports.toHex = toHex;\n\nconst byteLength = value => node_buffer_1.Buffer.byteLength(value);\n\nexports.byteLength = byteLength;\n\nconst toBase64 = value => {\n  return node_buffer_1.Buffer.from(value).toString(\"base64\");\n};\n\nexports.toBase64 = toBase64;\n\nconst toTLV = (tag, value) => {\n  return toHex(tag) + toHex((0, exports.byteLength)(value)) + value;\n};\n\nexports.toTLV = toTLV;","map":{"version":3,"sources":["../../src/utils/fieldUtil.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,aAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,SAAgB,KAAhB,CAAsB,KAAtB,EAAmC;AACjC,MAAI,GAAG,GAAG,KAAK,CAAC,QAAN,CAAe,EAAf,CAAV;;AACA,MAAI,GAAG,CAAC,MAAJ,GAAa,CAAb,GAAiB,CAArB,EAAwB;AACtB,IAAA,GAAG,GAAG,MAAM,GAAZ;AACD;;AACD,SAAO,aAAA,CAAA,MAAA,CAAO,IAAP,CAAY,GAAZ,EAAiB,KAAjB,EAAwB,QAAxB,CAAiC,OAAjC,CAAP;AACD;;AAND,OAAA,CAAA,KAAA,GAAA,KAAA;;AAQO,MAAM,UAAU,GAAI,KAAD,IAAmB,aAAA,CAAA,MAAA,CAAO,UAAP,CAAkB,KAAlB,CAAtC;;AAAM,OAAA,CAAA,UAAA,GAAU,UAAV;;AAEN,MAAM,QAAQ,GAAI,KAAD,IAAkB;AACxC,SAAO,aAAA,CAAA,MAAA,CAAO,IAAP,CAAY,KAAZ,EAAmB,QAAnB,CAA4B,QAA5B,CAAP;AACD,CAFM;;AAAM,OAAA,CAAA,QAAA,GAAQ,QAAR;;AAIN,MAAM,KAAK,GAAG,CAAC,GAAD,EAAc,KAAd,KAA+B;AAClD,SAAO,KAAK,CAAC,GAAD,CAAL,GAAa,KAAK,CAAC,CAAA,GAAA,OAAA,CAAA,UAAA,EAAW,KAAX,CAAD,CAAlB,GAAwC,KAA/C;AACD,CAFM;;AAAM,OAAA,CAAA,KAAA,GAAK,KAAL","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toTLV = exports.toBase64 = exports.byteLength = exports.toHex = void 0;\nconst node_buffer_1 = require(\"node:buffer\");\nfunction toHex(value) {\n    let hex = value.toString(16);\n    if (hex.length % 2 > 0) {\n        hex = \"0\" + hex;\n    }\n    return node_buffer_1.Buffer.from(hex, \"hex\").toString(\"utf-8\");\n}\nexports.toHex = toHex;\nconst byteLength = (value) => node_buffer_1.Buffer.byteLength(value);\nexports.byteLength = byteLength;\nconst toBase64 = (value) => {\n    return node_buffer_1.Buffer.from(value).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\nconst toTLV = (tag, value) => {\n    return toHex(tag) + toHex((0, exports.byteLength)(value)) + value;\n};\nexports.toTLV = toTLV;\n//# sourceMappingURL=fieldUtil.js.map"]},"metadata":{},"sourceType":"script"}