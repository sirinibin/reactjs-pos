{"ast":null,"code":"const canPromise = require('./can-promise');\n\nconst QRCode = require('./core/qrcode');\n\nconst CanvasRenderer = require('./renderer/canvas');\n\nconst SvgRenderer = require('./renderer/svg-tag.js');\n\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1);\n  const argsNum = args.length;\n  const isLastArgCb = typeof args[argsNum - 1] === 'function';\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument');\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided');\n    }\n\n    if (argsNum === 2) {\n      cb = text;\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts;\n        opts = undefined;\n      } else {\n        cb = opts;\n        opts = text;\n        text = canvas;\n        canvas = undefined;\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided');\n    }\n\n    if (argsNum === 1) {\n      text = canvas;\n      canvas = opts = undefined;\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text;\n      text = canvas;\n      canvas = undefined;\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts);\n        resolve(renderFunc(data, canvas, opts));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  try {\n    const data = QRCode.create(text, opts);\n    cb(null, renderFunc(data, canvas, opts));\n  } catch (e) {\n    cb(e);\n  }\n}\n\nexports.create = QRCode.create;\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL); // only svg for now.\n\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts);\n});","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/qrcode/lib/browser.js"],"names":["canPromise","require","QRCode","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","canvas","text","opts","cb","args","slice","call","arguments","argsNum","length","isLastArgCb","Error","undefined","getContext","Promise","resolve","reject","data","create","e","exports","toCanvas","bind","render","toDataURL","renderToDataURL","toString","_"],"mappings":"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","sourcesContent":["\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n"]},"metadata":{},"sourceType":"script"}