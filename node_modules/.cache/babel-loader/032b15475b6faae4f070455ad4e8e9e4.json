{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,forwardRef,useImperativeHandle}from\"react\";import Cookies from\"universal-cookie\";import{Chart}from\"react-google-charts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var YearlySales=/*#__PURE__*/forwardRef(function(props,ref){var cookies=new Cookies();useImperativeHandle(ref,function(){return{init:function init(){if(props.allOrders.length>0){makeYearlySalesData();}}};});var _useState=useState([{label:\"2023\",value:2023},{label:\"2022\",value:2022},{label:\"2021\",value:2021}]),_useState2=_slicedToArray(_useState,2),yearOptions=_useState2[0],setYearOptions=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),yearlySales=_useState4[0],setYearlySales=_useState4[1];function makeYearlySalesData(){var columns=[{type:\"string\",label:\"Year\"}];if(props.columns.sales){columns.push({type:\"number\",label:\"Sales\"});}if(props.columns.salesProfit){columns.push({type:\"number\",label:\"Sales Profit\"});}if(props.columns.paidSales){columns.push({type:\"number\",label:\"Paid Sales\"});}if(props.columns.unpaidSales){columns.push({type:\"number\",label:\"UnPaid Sales\"});}if(props.columns.expense){columns.push({type:\"number\",label:\"Expense\"});}if(props.columns.purchase){columns.push({type:\"number\",label:\"Purchase\"});}if(props.columns.salesReturn){columns.push({type:\"number\",label:\"Sales Return\"});}if(props.columns.salesReturnProfit){columns.push({type:\"number\",label:\"Sales Return Profit\"});}if(props.columns.salesReturnLoss){columns.push({type:\"number\",label:\"Sales Return Loss\"});}if(props.columns.purchaseReturn){columns.push({type:\"number\",label:\"Purchase Return\"});}if(props.columns.loss){columns.push({type:\"number\",label:\"Sales Loss\"});}var data=[];if(columns.length>1){data.push(columns);}var firstYear=2020;var lastYear=new Date().getFullYear();for(var year=firstYear;year<=parseInt(lastYear);year++){var sales=0.00;var profit=0.00;var paidSales=0.00;var unpaidSales=0.00;var loss=0.00;if(props.columns.sales||props.columns.salesProfit||props.columns.paidSales||props.columns.unpaidSales||props.columns.loss){var _iterator=_createForOfIteratorHelper(props.allOrders),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var sale=_step.value;if(parseInt(new Date(sale.date).getFullYear())===year){sales+=parseFloat(sale.net_total);profit+=parseFloat(sale.net_profit);if(sale.payment_status==\"paid\"){paidSales+=parseFloat(sale.net_total);}else if(sale.payment_status==\"not_paid\"){unpaidSales+=parseFloat(sale.net_total);}loss+=parseFloat(sale.loss);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}var totalExpense=0.00;if(props.columns.expense){var _iterator2=_createForOfIteratorHelper(props.allExpenses),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var expense=_step2.value;if(parseInt(new Date(expense.date).getFullYear())===year){totalExpense+=parseFloat(expense.amount);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}var totalPurchase=0.00;if(props.columns.purchase){var _iterator3=_createForOfIteratorHelper(props.allPurchases),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var purchase=_step3.value;if(parseInt(new Date(purchase.date).getFullYear())===year){totalPurchase+=parseFloat(purchase.net_total);}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}var totalSalesReturn=0.00;var totalSalesReturnProfit=0.00;var totalSalesReturnLoss=0.00;if(props.columns.salesReturn||props.columns.salesReturnProfit||props.columns.salesReturnLoss){var _iterator4=_createForOfIteratorHelper(props.allSalesReturns),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var salesReturn=_step4.value;if(parseInt(new Date(salesReturn.date).getFullYear())===year){totalSalesReturn+=parseFloat(salesReturn.net_total);totalSalesReturnProfit+=parseFloat(salesReturn.net_profit);totalSalesReturnLoss+=parseFloat(salesReturn.loss);}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}var totalPurchaseReturn=0.00;if(props.columns.purchaseReturn){var _iterator5=_createForOfIteratorHelper(props.allPurchaseReturns),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var purchaseReturn=_step5.value;if(parseInt(new Date(purchaseReturn.date).getFullYear())===year){totalPurchaseReturn+=parseFloat(purchaseReturn.net_total);}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}var row=[year.toString()];if(props.columns.sales){row.push(parseFloat(sales.toFixed(2)));}if(props.columns.salesProfit){row.push(parseFloat(profit.toFixed(2)));}if(props.columns.paidSales){row.push(parseFloat(paidSales.toFixed(2)));}if(props.columns.unpaidSales){row.push(parseFloat(unpaidSales.toFixed(2)));}if(props.columns.expense){row.push(parseFloat(totalExpense.toFixed(2)));}if(props.columns.purchase){row.push(parseFloat(totalPurchase.toFixed(2)));}if(props.columns.salesReturn){row.push(parseFloat(totalSalesReturn.toFixed(2)));}if(props.columns.salesReturnProfit){row.push(parseFloat(totalSalesReturnProfit.toFixed(2)));}if(props.columns.salesReturnLoss){row.push(parseFloat(totalSalesReturnLoss.toFixed(2)));}if(props.columns.purchaseReturn){row.push(parseFloat(totalPurchaseReturn.toFixed(2)));}if(props.columns.loss){row.push(parseFloat(loss.toFixed(2)));}if(row.length>1){data.push(row);}}yearlySales=data;setYearlySales(data);//setYearlySales(data);\n}var _useState5=useState({title:'Sales',subtitle:'(SAR)',legend:{position:'right'},hAxis:{title:\"Year\"},vAxis:{title:\"Amount(SAR)\"},series:{// 0: { curveType: \"function\", axis: 'Temps' },\n// 1: { curveType: \"function\", axis: 'Daylight' },\n}}),_useState6=_slicedToArray(_useState5,2),options=_useState6[0],setOptions=_useState6[1];useEffect(function(){// getAllOrders();\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:yearlySales&&yearlySales.length>0?/*#__PURE__*/_jsx(Chart,{chartType:\"LineChart\",width:\"100%\",height:\"400px\",data:yearlySales,options:options}):\"\"})})});});export default YearlySales;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/analytics/sales/yearlySales.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Cookies","Chart","YearlySales","props","ref","cookies","init","allOrders","length","makeYearlySalesData","label","value","yearOptions","setYearOptions","yearlySales","setYearlySales","columns","type","sales","push","salesProfit","paidSales","unpaidSales","expense","purchase","salesReturn","salesReturnProfit","salesReturnLoss","purchaseReturn","loss","data","firstYear","lastYear","Date","getFullYear","year","parseInt","profit","sale","date","parseFloat","net_total","net_profit","payment_status","totalExpense","allExpenses","amount","totalPurchase","allPurchases","totalSalesReturn","totalSalesReturnProfit","totalSalesReturnLoss","allSalesReturns","totalPurchaseReturn","allPurchaseReturns","row","toString","toFixed","title","subtitle","legend","position","hAxis","vAxis","series","options","setOptions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Chart } from \"react-google-charts\";\n\n\n\nconst YearlySales = forwardRef((props, ref) => {\n    const cookies = new Cookies();\n    useImperativeHandle(ref, () => ({\n        init() {\n            if (props.allOrders.length > 0) {\n                makeYearlySalesData();\n            }\n        }\n    }));\n\n    const [yearOptions, setYearOptions] = useState([\n        {\n            label: \"2023\",\n            value: 2023,\n        },\n        {\n            label: \"2022\",\n            value: 2022,\n        },\n        {\n            label: \"2021\",\n            value: 2021,\n        },\n    ]);\n\n\n\n    let [yearlySales, setYearlySales] = useState([]);\n\n    function makeYearlySalesData() {\n        let columns = [\n            { type: \"string\", label: \"Year\" }\n        ];\n        if (props.columns.sales) {\n            columns.push({ type: \"number\", label: \"Sales\" });\n        }\n\n        if (props.columns.salesProfit) {\n            columns.push({ type: \"number\", label: \"Sales Profit\" });\n        }\n\n        if (props.columns.paidSales) {\n            columns.push({ type: \"number\", label: \"Paid Sales\" });\n        }\n\n        if (props.columns.unpaidSales) {\n            columns.push({ type: \"number\", label: \"UnPaid Sales\" });\n        }\n\n        if (props.columns.expense) {\n            columns.push({ type: \"number\", label: \"Expense\" });\n        }\n\n        if (props.columns.purchase) {\n            columns.push({ type: \"number\", label: \"Purchase\" });\n        }\n\n        if (props.columns.salesReturn) {\n            columns.push({ type: \"number\", label: \"Sales Return\" });\n        }\n\n        if (props.columns.salesReturnProfit) {\n            columns.push({ type: \"number\", label: \"Sales Return Profit\" });\n        }\n\n        if (props.columns.salesReturnLoss) {\n            columns.push({ type: \"number\", label: \"Sales Return Loss\" });\n        }\n\n        if (props.columns.purchaseReturn) {\n            columns.push({ type: \"number\", label: \"Purchase Return\" });\n        }\n\n        if (props.columns.loss) {\n            columns.push({ type: \"number\", label: \"Sales Loss\" });\n        }\n\n        let data = [];\n\n\n        if (columns.length > 1) {\n            data.push(columns)\n        }\n\n        let firstYear = 2020;\n        let lastYear = new Date().getFullYear();\n\n        for (let year = firstYear; year <= parseInt(lastYear); year++) {\n\n            let sales = 0.00;\n            let profit = 0.00;\n            let paidSales = 0.00;\n            let unpaidSales = 0.00;\n            let loss = 0.00;\n            if (props.columns.sales || props.columns.salesProfit || props.columns.paidSales || props.columns.unpaidSales || props.columns.loss) {\n                for (const sale of props.allOrders) {\n                    if (parseInt(new Date(sale.date).getFullYear()) === year) {\n                        sales += parseFloat(sale.net_total);\n                        profit += parseFloat(sale.net_profit);\n\n                        if(sale.payment_status==\"paid\"){\n                            paidSales += parseFloat(sale.net_total);\n                        }else if(sale.payment_status==\"not_paid\"){\n                            unpaidSales += parseFloat(sale.net_total);\n                        }\n                        loss += parseFloat(sale.loss);\n                    }\n                }\n            }\n\n            let totalExpense = 0.00;\n            if (props.columns.expense) {\n                for (const expense of props.allExpenses) {\n                    if (parseInt(new Date(expense.date).getFullYear()) === year) {\n                        totalExpense += parseFloat(expense.amount);\n                    }\n                }\n            }\n\n            let totalPurchase = 0.00;\n            if (props.columns.purchase) {\n                for (const purchase of props.allPurchases) {\n                    if (parseInt(new Date(purchase.date).getFullYear()) === year) {\n                        totalPurchase += parseFloat(purchase.net_total);\n                    }\n                }\n            }\n\n            let totalSalesReturn = 0.00;\n            let totalSalesReturnProfit = 0.00;\n            let totalSalesReturnLoss = 0.00;\n            if (props.columns.salesReturn||props.columns.salesReturnProfit||props.columns.salesReturnLoss) {\n                for (const salesReturn of props.allSalesReturns) {\n                    if (parseInt(new Date(salesReturn.date).getFullYear()) === year) {\n                        totalSalesReturn += parseFloat(salesReturn.net_total);\n                        totalSalesReturnProfit += parseFloat(salesReturn.net_profit);\n                        totalSalesReturnLoss += parseFloat(salesReturn.loss);\n                    }\n                }\n            }\n\n            let totalPurchaseReturn = 0.00;\n            if (props.columns.purchaseReturn) {\n                for (const purchaseReturn of props.allPurchaseReturns) {\n                    if (parseInt(new Date(purchaseReturn.date).getFullYear()) === year) {\n                        totalPurchaseReturn += parseFloat(purchaseReturn.net_total);\n                    }\n                }\n            }\n\n            let row = [year.toString()];\n\n            if (props.columns.sales) {\n                row.push(parseFloat(sales.toFixed(2)));\n            }\n\n            if (props.columns.salesProfit) {\n                row.push(parseFloat(profit.toFixed(2)));\n            }\n\n            if (props.columns.paidSales) {\n                row.push(parseFloat(paidSales.toFixed(2)));\n            }\n\n            if (props.columns.unpaidSales) {\n                row.push(parseFloat(unpaidSales.toFixed(2)));\n            }\n\n            if (props.columns.expense) {\n                row.push(parseFloat(totalExpense.toFixed(2)));\n            }\n\n            if (props.columns.purchase) {\n                row.push(parseFloat(totalPurchase.toFixed(2)));\n            }\n\n            if (props.columns.salesReturn) {\n                row.push(parseFloat(totalSalesReturn.toFixed(2)));\n            }\n\n            if (props.columns.salesReturnProfit) {\n                row.push(parseFloat(totalSalesReturnProfit.toFixed(2)));\n            }\n\n            if (props.columns.salesReturnLoss) {\n                row.push(parseFloat(totalSalesReturnLoss.toFixed(2)));\n            }\n\n            if (props.columns.purchaseReturn) {\n                row.push(parseFloat(totalPurchaseReturn.toFixed(2)));\n            }\n\n            if (props.columns.loss) {\n                row.push(parseFloat(loss.toFixed(2)));\n            }\n\n            if (row.length > 1) {\n                data.push(row);\n            }\n\n        }\n        yearlySales = data;\n        setYearlySales(data);\n        //setYearlySales(data);\n    }\n\n    const [options, setOptions] = useState({\n        title: 'Sales',\n        subtitle: '(SAR)',\n        legend: { position: 'right' },\n        hAxis: {\n            title: \"Year\",\n        },\n        vAxis: {\n            title: \"Amount(SAR)\",\n        },\n        series: {\n            // 0: { curveType: \"function\", axis: 'Temps' },\n            // 1: { curveType: \"function\", axis: 'Daylight' },\n        },\n    });\n\n\n\n\n\n    useEffect(() => {\n        // getAllOrders();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    {yearlySales && yearlySales.length > 0 ? <Chart\n                        chartType=\"LineChart\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={yearlySales}\n                        options={options}\n                    /> : \"\"}\n                </div>\n            </div>\n        </>\n    );\n});\n\nexport default YearlySales;\n"]},"metadata":{},"sourceType":"module"}