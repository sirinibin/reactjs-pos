{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/order/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport OrderPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport OrderView from \"./view.js\";\nimport \"./style.css\";\nimport { DebounceInput } from 'react-debounce-input'; //import BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n//import Quagga from 'quagga';\n\nimport ProductView from \"./../product/view.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OrderCreate = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  var _totalPrice, _vatPrice, _netTotal, _totalPaymentAmount, _balanceAmount;\n\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      errors = {};\n      setErrors({ ...errors\n      });\n      selectedProducts = [];\n      setSelectedProducts([]);\n      selectedStores = [];\n      setSelectedStores([]);\n      selectedCustomers = [];\n      setSelectedCustomers([]);\n\n      if (cookies.get(\"user_id\")) {\n        selectedDeliveredByUsers = [{\n          id: cookies.get(\"user_id\"),\n          name: cookies.get(\"user_name\")\n        }];\n        formData.delivered_by = cookies.get(\"user_id\");\n        setFormData({ ...formData\n        });\n        setSelectedDeliveredByUsers([...selectedDeliveredByUsers]);\n      }\n\n      if (cookies.get('store_id')) {\n        formData.store_id = cookies.get('store_id');\n        formData.store_name = cookies.get('store_name');\n        formData.vat_percent = parseFloat(cookies.get('vat_percent'));\n        console.log(\"formData.store_id:\", formData.store_id);\n      }\n\n      formData.id = undefined;\n      formData.discount = 0.00;\n      formData.discount_percent = 0.00;\n      formData.shipping_handling_fees = 0.00;\n      formData.partial_payment_amount = 0.00;\n      formData.cash_discount = 0.00;\n      formData.payment_method = \"\";\n      formData.payment_status = \"\";\n      formData.code = \"\";\n      formData.net_total = 0.00;\n      formData.date_str = new Date();\n      formData.payments_input = [{\n        \"date_str\": formData.date_str,\n        // \"amount\": \"\",\n        \"amount\": 0.00,\n        \"method\": \"\",\n        \"deleted\": false\n      }];\n      formData.cash_discount = 0.00;\n\n      if (id) {\n        getOrder(id);\n      }\n\n      setFormData({ ...formData\n      });\n      reCalculate();\n      setShow(true);\n    }\n\n  }));\n\n  function getOrder(id) {\n    console.log(\"inside get Order\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/order/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      formData = data.result;\n      formData.date_str = data.result.date;\n\n      if (data.result.payments) {\n        console.log(\"data.result.payments:\", data.result.payments);\n        formData.payments_input = data.result.payments;\n\n        for (var i = 0; i < ((_formData$payments_in = formData.payments_input) === null || _formData$payments_in === void 0 ? void 0 : _formData$payments_in.length); i++) {\n          var _formData$payments_in;\n\n          formData.payments_input[i].date_str = formData.payments_input[i].date;\n        }\n      }\n      /*\n      let order = data.result;\n      formData = {\n          id: order.id,\n          code: order.code,\n          store_id: purchase.store_id,\n          vendor_id: purchase.vendor_id,\n          date_str: purchase.date,\n          // date: purchase.date,\n          vat_percent: purchase.vat_percent,\n          discount: purchase.discount,\n          discount_percent: purchase.discount_percent,\n          status: purchase.status,\n          order_placed_by: purchase.order_placed_by,\n          order_placed_by_signature_id: purchase.order_placed_by_signature_id,\n          is_discount_percent: purchase.is_discount_percent,\n          partial_payment_amount: purchase.partial_payment_amount,\n          payment_method: purchase.payment_method,\n          payment_status: purchase.payment_status,\n          shipping_handling_fees: purchase.shipping_handling_fees,\n      };\n      */\n\n\n      if (formData.is_discount_percent) {\n        formData.discountValue = formData.discount_percent;\n      } else {\n        formData.discountValue = formData.discount;\n      }\n\n      selectedProducts = formData.products;\n      setSelectedProducts([...selectedProducts]);\n      let selectedStores = [{\n        id: formData.store_id,\n        name: formData.store_name\n      }];\n      let searchLabel = formData.customer_name;\n      let selectedCustomers = [{\n        id: formData.customer_id,\n        name: formData.customer_name,\n        search_label: searchLabel\n      }];\n      /*\n      let selectedOrderPlacedByUsers = [\n          {\n              id: formData.created_by,\n              name: formData.created_by_name\n          }\n      ];\n        setSelectedOrderPlacedByUsers([...selectedOrderPlacedByUsers]);\n      */\n\n      setSelectedStores([...selectedStores]);\n      setSelectedCustomers([...selectedCustomers]);\n      reCalculate();\n      setFormData({ ...formData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function-order.123\"); // event.preventDefault();\n\n        var form = event.target.form;\n\n        if (form && event.target) {\n          var index = Array.prototype.indexOf.call(form, event.target);\n\n          if (form && form.elements[index + 1]) {\n            if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n              form.elements[index].focus();\n            } else {\n              form.elements[index + 1].focus();\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  const selectedDate = new Date(); //const history = useHistory();\n\n  let [errors, setErrors] = useState({\n    \"payment_amount\": []\n  });\n  const [isProcessing, setProcessing] = useState(false);\n  const cookies = new Cookies(); //fields\n\n  let [formData, setFormData] = useState({\n    vat_percent: 15.0,\n    discountValue: 0.00,\n    discount: 0.00,\n    discount_percent: 0.0,\n    cash_discount: 0.00,\n    is_discount_percent: false,\n    date_str: new Date(),\n    signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n    status: \"delivered\",\n    payment_status: \"\",\n    payment_method: \"\",\n    price_type: \"retail\",\n    useLaserScanner: false,\n    store_id: \"\"\n  }); //Store Auto Suggestion\n\n  const [storeOptions, setStoreOptions] = useState([]);\n  let [selectedStores, setSelectedStores] = useState([]);\n  const [isStoresLoading, setIsStoresLoading] = useState(false); //Customer Auto Suggestion\n\n  const [customerOptions, setCustomerOptions] = useState([]);\n  let [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [isCustomersLoading, setIsCustomersLoading] = useState(false); //Product Auto Suggestion\n\n  const [productOptions, setProductOptions] = useState([]);\n  let [selectedProduct, setSelectedProduct] = useState([]);\n  let [selectedProducts, setSelectedProducts] = useState([]);\n  const [isProductsLoading, setIsProductsLoading] = useState(false); //Delivered By Auto Suggestion\n\n  let [deliveredByUserOptions, setDeliveredByUserOptions] = useState([]);\n  let [selectedDeliveredByUsers, setSelectedDeliveredByUsers] = useState([]);\n  const [isDeliveredByUsersLoading, setIsDeliveredByUsersLoading] = useState(false); //Delivered By Signature Auto Suggestion\n\n  const [deliveredBySignatureOptions, setDeliveredBySignatureOptions] = useState([]);\n  const [selectedDeliveredBySignatures, setSelectedDeliveredBySignatures] = useState([]);\n  const [isDeliveredBySignaturesLoading, setIsDeliveredBySignaturesLoading] = useState(false);\n  const [show, setShow] = useState(false);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  useEffect(() => {\n    let at = cookies.get(\"access_token\");\n\n    if (!at) {\n      // history.push(\"/dashboard/orders\");\n      window.location = \"/\";\n    }\n  });\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + encodeURIComponent(object[key]);\n    }).join(\"&\");\n  }\n\n  async function suggestStores(searchTerm) {\n    console.log(\"Inside handle suggestStores\");\n    setStoreOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsStoresLoading(true);\n    let result = await fetch(\"/v1/store?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setStoreOptions(data.result);\n    setIsStoresLoading(false);\n  }\n\n  async function suggestCustomers(searchTerm) {\n    console.log(\"Inside handle suggestCustomers\");\n    setCustomerOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n    setIsCustomersLoading(true);\n    let result = await fetch(\"/v1/customer?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setCustomerOptions(data.result);\n    setIsCustomersLoading(false);\n  }\n\n  function GetProductUnitPriceInStore(storeId, productStores) {\n    if (!productStores) {\n      return \"\";\n    }\n\n    for (var i = 0; i < productStores.length; i++) {\n      console.log(\"productStores[i]:\", productStores[i]);\n      console.log(\"store_id:\", storeId);\n\n      if (productStores[i].store_id === storeId) {\n        console.log(\"macthed\");\n        console.log(\"productStores[i].retail_unit_price:\", productStores[i].retail_unit_price);\n        return productStores[i];\n        /*\n        if (formData.price_type === \"retail\") {\n            return unitPriceListArray[i].retail_unit_price;\n        } else if (formData.price_type === \"wholesale\") {\n            return unitPriceListArray[i].wholesale_unit_price;\n        } else if (formData.price_type === \"purchase\") {\n            return unitPriceListArray[i].purchase_unit_price;\n        }\n        */\n      } else {\n        console.log(\"not matched\");\n      }\n    }\n\n    return \"\";\n  }\n\n  let [openProductSearchResult, setOpenProductSearchResult] = useState(false);\n\n  async function suggestProducts(searchTerm) {\n    console.log(\"Inside handle suggestProducts\");\n    setProductOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      openProductSearchResult = false;\n      setOpenProductSearchResult(false);\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n\n    if (cookies.get(\"store_id\")) {\n      params.store_id = cookies.get(\"store_id\");\n    }\n\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,item_code,bar_code,part_number,name,unit,part_number,name_in_arabic,product_stores\";\n    setIsProductsLoading(true);\n    let result = await fetch(\"/v1/product?\" + Select + queryString + \"&limit=200\", requestOptions);\n    let data = await result.json();\n    let products = data.result;\n\n    if (!products || products.length === 0) {\n      openProductSearchResult = false;\n      setOpenProductSearchResult(false);\n      setIsProductsLoading(false);\n      return;\n    }\n\n    openProductSearchResult = true;\n    setOpenProductSearchResult(true);\n    setProductOptions(products);\n    setIsProductsLoading(false);\n  }\n\n  async function getProductByBarCode(barcode) {\n    formData.barcode = barcode;\n    setFormData({ ...formData\n    });\n    console.log(\"Inside getProductByBarCode\");\n    errors[\"bar_code\"] = \"\";\n    setErrors({ ...errors\n    });\n    console.log(\"barcode:\" + formData.barcode);\n\n    if (!formData.barcode) {\n      return;\n    }\n\n    if (formData.barcode.length === 13) {\n      formData.barcode = formData.barcode.slice(0, -1);\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,item_code,bar_code,ean_12,part_number,name,product_stores,unit,part_number,name_in_arabic\";\n    let result = await fetch(\"/v1/product/barcode/\" + formData.barcode + \"?\" + Select, requestOptions);\n    let data = await result.json();\n    let product = data.result;\n\n    if (product) {\n      addProduct(product);\n    } else {\n      errors[\"bar_code\"] = \"Invalid Barcode:\" + formData.barcode;\n      setErrors({ ...errors\n      });\n    }\n\n    formData.barcode = \"\";\n    setFormData({ ...formData\n    });\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setDeliveredByUserOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsDeliveredByUsersLoading(true);\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setDeliveredByUserOptions(data.result);\n    setIsDeliveredByUsersLoading(false);\n  }\n\n  async function suggestSignatures(searchTerm) {\n    console.log(\"Inside handle suggestSignatures\");\n    setDeliveredBySignatureOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsDeliveredBySignaturesLoading(true);\n    let result = await fetch(\"/v1/signature?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setDeliveredBySignatureOptions(data.result);\n    setIsDeliveredBySignaturesLoading(false);\n  }\n\n  function handleCreate(event) {\n    event.preventDefault();\n    let haveErrors = false;\n\n    if (!formData.cash_discount) {\n      formData.cash_discount = 0.00;\n    }\n\n    formData.products = [];\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      formData.products.push({\n        product_id: selectedProducts[i].product_id,\n        quantity: parseFloat(selectedProducts[i].quantity),\n        unit_price: parseFloat(selectedProducts[i].unit_price),\n        purchase_unit_price: selectedProducts[i].purchase_unit_price ? parseFloat(selectedProducts[i].purchase_unit_price) : 0,\n        unit: selectedProducts[i].unit\n      });\n    }\n\n    errors[\"products\"] = \"\";\n    setErrors({ ...errors\n    });\n\n    if (formData.products.length === 0) {\n      errors[\"products\"] = \"No products added\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (!validatePaymentAmounts()) {\n      console.log(\"Errors on payments\");\n      haveErrors = true;\n    }\n\n    if (!formData.shipping_handling_fees && formData.shipping_handling_fees !== 0) {\n      errors[\"shipping_handling_fees\"] = \"Invalid shipping / handling fees\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n    /*\n    if (formData.payment_status === \"paid_partially\" && !formData.partial_payment_amount && formData.partial_payment_amount !== 0) {\n        errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n        setErrors({ ...errors });\n        return;\n    }\n     if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount <= 0) {\n        errors[\"partial_payment_amount\"] = \"Partial payment should be > 0 \";\n        setErrors({ ...errors });\n        return;\n    }\n     if (!formData.id && formData.payment_status === \"paid_partially\" && formData.partial_payment_amount >= netTotal) {\n        errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n        setErrors({ ...errors });\n        return;\n    }\n    \n     errors[\"payment_method\"] = \"\";\n    setErrors({ ...errors });\n    if (!formData.id && formData.payment_status != \"not_paid\" && !formData.payment_method) {\n        errors[\"payment_method\"] = \"Payment method is required\";\n        setErrors({ ...errors });\n        return;\n    }\n    */\n\n\n    if (!formData.discount && formData.discount !== 0) {\n      errors[\"discount\"] = \"Invalid discount\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (!formData.discount_percent && formData.discount_percent !== 0) {\n      errors[\"discount_percent\"] = \"Invalid discount percent\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (parseFloat(formData.discount_percent) > 100) {\n      errors[\"discount_percent\"] = \"Discount percent cannot be > 100\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (!formData.vat_percent && formData.vat_percent !== 0) {\n      errors[\"vat_percent\"] = \"Invalid vat percent\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (haveErrors) {\n      console.log(\"Errors: \", errors);\n      return;\n    }\n\n    formData.discount = parseFloat(formData.discount);\n    formData.discount_percent = parseFloat(formData.discount_percent);\n    formData.vat_percent = parseFloat(formData.vat_percent);\n    formData.net_total = parseFloat(netTotal);\n\n    if (cookies.get('store_id')) {\n      formData.store_id = cookies.get('store_id');\n    }\n\n    let endPoint = \"/v1/order\";\n    let method = \"POST\";\n\n    if (formData.id) {\n      endPoint = \"/v1/order/\" + formData.id;\n      method = \"PUT\";\n    }\n\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(\"formData:\", formData);\n    setProcessing(true);\n    fetch(endPoint, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.errors; //const error = data.errors\n\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      setProcessing(false);\n      console.log(\"Response:\");\n      console.log(data);\n      props.showToastMessage(\"Order Created Successfully!\", \"success\");\n\n      if (props.refreshList) {\n        props.refreshList();\n      }\n\n      handleClose();\n      formData.products = [];\n      selectedProducts = [];\n      setSelectedProducts([]);\n      formData.customer_id = \"\";\n      setSelectedCustomers([]);\n      setFormData({ ...formData\n      });\n      reCalculate();\n      openDetailsView(data.result.id);\n    }).catch(error => {\n      setProcessing(false);\n      console.log(\"Inside catch\");\n      console.log(error);\n      setErrors({ ...error\n      });\n      console.error(\"There was an error!\", error);\n      props.showToastMessage(\"Error Creating Order!\", \"danger\");\n    });\n  }\n\n  function getProductIndex(productID) {\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (selectedProducts[i].product_id === productID) {\n        return i;\n      }\n    }\n\n    return false;\n  }\n\n  function isProductAdded(productID) {\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (selectedProducts[i].product_id === productID) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function GetProductStockInStore(storeId, productStores) {\n    if (!productStores) {\n      return 0.0;\n    }\n\n    for (var i = 0; i < productStores.length; i++) {\n      if (productStores[i].store_id === storeId) {\n        return productStores[i].stock;\n      }\n    }\n\n    return 0.0;\n  }\n\n  function addProduct(product) {\n    console.log(\"Inside Add product\");\n\n    if (!formData.store_id) {\n      errors.product_id = \"Please Select a Store and try again\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    errors.product_id = \"\";\n\n    if (!product) {\n      errors.product_id = \"Invalid Product\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n    /*\n    let productStore = GetProductUnitPriceInStore(\n        formData.store_id,\n        product.stores\n    );\n    */\n    // product.unit_price = productStore.retail_unit_price;\n\n\n    if (product.product_stores[formData.store_id]) {\n      product.unit_price = product.product_stores[formData.store_id].retail_unit_price;\n      product.purchase_unit_price = product.product_stores[formData.store_id].purchase_unit_price;\n    }\n\n    errors.unit_price = \"\";\n\n    if (!product.unit_price) {\n      errors.unit_price = \"Invalid Unit Price\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    let alreadyAdded = false;\n    let index = false;\n    let quantity = 0.00;\n    product.quantity = 1.00;\n\n    if (isProductAdded(product.id)) {\n      alreadyAdded = true;\n      index = getProductIndex(product.id);\n      quantity = parseFloat(selectedProducts[index].quantity + product.quantity);\n    } else {\n      quantity = parseFloat(product.quantity);\n    }\n\n    console.log(\"quantity:\", quantity);\n    errors.quantity = \"\"; //let stock = GetProductStockInStore(formData.store_id, product.stores);\n\n    let stock = 0;\n\n    if (product.product_stores[formData.store_id]) {\n      stock = product.product_stores[formData.store_id].stock;\n    }\n\n    if (stock < quantity) {\n      if (index === false) {\n        index = selectedProducts.length;\n      } // errors[\"quantity_\" + index] = \"Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for product: \" + product.name;\n\n\n      errors[\"quantity_\" + index] = \"Warning: Available stock is \" + stock;\n      console.log(\"errors:\", errors);\n      setErrors({ ...errors\n      });\n    }\n\n    if (alreadyAdded) {\n      selectedProducts[index].quantity = parseFloat(quantity);\n    }\n\n    if (!alreadyAdded) {\n      selectedProducts.push({\n        product_id: product.id,\n        code: product.item_code,\n        part_number: product.part_number,\n        name: product.name,\n        quantity: product.quantity,\n        product_stores: product.product_stores,\n        unit_price: parseFloat(product.unit_price).toFixed(2),\n        unit: product.unit,\n        purchase_unit_price: parseFloat(product.purchase_unit_price).toFixed(2)\n      });\n    }\n\n    setSelectedProducts([...selectedProducts]);\n    reCalculate();\n  }\n\n  function removeProduct(product) {\n    const index = selectedProducts.indexOf(product);\n\n    if (product.quantity_returned > 0) {\n      errors[\"product_\" + index] = \"This product cannot be removed as it is returned, Note: Please remove the product from sales return and try again\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (index > -1) {\n      selectedProducts.splice(index, 1);\n    }\n\n    setSelectedProducts([...selectedProducts]);\n    reCalculate();\n  }\n\n  let [totalPrice, setTotalPrice] = useState(0.0);\n\n  function findTotalPrice() {\n    totalPrice = 0.00;\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      totalPrice += parseFloat(selectedProducts[i].unit_price) * parseFloat(selectedProducts[i].quantity);\n    } // totalPrice = totalPrice.toFixed(2);\n    // totalPrice = Math.round(totalPrice * 100) / 100;\n\n\n    setTotalPrice(totalPrice);\n  }\n\n  let [vatPrice, setVatPrice] = useState(0.00);\n\n  function findVatPrice() {\n    vatPrice = 0.00;\n\n    if (totalPrice > 0) {\n      console.log(\"formData.vat_percent:\", formData.vat_percent); //(35.8 / 100) * 10000;\n\n      vatPrice = parseFloat(formData.vat_percent) / 100 * (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount));\n      console.log(\"vatPrice:\", vatPrice);\n    }\n\n    setVatPrice(vatPrice);\n  }\n\n  let [netTotal, setNetTotal] = useState(0.00);\n\n  function RoundFloat(val, precision) {\n    var ratio = Math.pow(10, precision);\n    return Math.round(val * ratio) / ratio;\n  }\n\n  function findNetTotal() {\n    netTotal = 0.00;\n\n    if (totalPrice > 0) {\n      netTotal = parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount) + parseFloat(vatPrice);\n      netTotal = parseFloat(netTotal);\n    }\n\n    netTotal = RoundFloat(netTotal, 2); // netTotal = Math.round(netTotal * 100) / 100;\n\n    setNetTotal(netTotal);\n\n    if (!formData.id) {\n      let method = \"\";\n\n      if (formData.payments_input[0]) {\n        method = formData.payments_input[0].method;\n      }\n\n      formData.payments_input = [{\n        \"date_str\": formData.date_str,\n        \"amount\": 0.00,\n        \"method\": method,\n        \"deleted\": false\n      }];\n\n      if (netTotal > 0) {\n        formData.payments_input[0].amount = parseFloat(netTotal.toFixed(2));\n\n        if (formData.cash_discount) {\n          var _formData$cash_discou;\n\n          formData.payments_input[0].amount = formData.payments_input[0].amount - parseFloat((_formData$cash_discou = formData.cash_discount) === null || _formData$cash_discou === void 0 ? void 0 : _formData$cash_discou.toFixed(2));\n        }\n\n        formData.payments_input[0].amount = parseFloat(formData.payments_input[0].amount.toFixed(2));\n      }\n    }\n    /*\n    if (formData.payments_input[0].amount === 0) {\n        formData.payments_input[0].amount = \"\";\n    }\n    */\n\n\n    setFormData({ ...formData\n    });\n    validatePaymentAmounts();\n  }\n\n  let [discountPercent, setDiscountPercent] = useState(0.00);\n\n  function findDiscountPercent() {\n    if (formData.discount >= 0 && totalPrice > 0) {\n      discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n      setDiscountPercent(discountPercent);\n      formData.discount_percent = discountPercent; //formData.discount_percent = Math.round(formData.discount_percent * 100) / 100;\n\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function findDiscount() {\n    if (formData.discount_percent >= 0 && totalPrice > 0) {\n      formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)); // formData.discount = parseFloat(formData.discount.toFixed(2));\n\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function reCalculate() {\n    findTotalPrice();\n\n    if (formData.is_discount_percent) {\n      findDiscount();\n    } else {\n      findDiscountPercent();\n    }\n\n    findVatPrice();\n    findNetTotal();\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  }\n\n  const StoreCreateFormRef = useRef();\n\n  function openStoreCreateForm() {\n    StoreCreateFormRef.current.open();\n  }\n\n  const CustomerCreateFormRef = useRef();\n\n  function openCustomerCreateForm() {\n    CustomerCreateFormRef.current.open();\n  }\n\n  const ProductCreateFormRef = useRef();\n\n  function openProductCreateForm() {\n    ProductCreateFormRef.current.open();\n  }\n\n  const UserCreateFormRef = useRef();\n\n  function openUserCreateForm() {\n    UserCreateFormRef.current.open();\n  }\n\n  const SignatureCreateFormRef = useRef();\n\n  function openSignatureCreateForm() {\n    SignatureCreateFormRef.current.open();\n  }\n\n  const ProductDetailsViewRef = useRef();\n\n  function openProductDetailsView(id) {\n    ProductDetailsViewRef.current.open(id);\n  }\n\n  function addNewPayment() {\n    let date = new Date();\n\n    if (!formData.id) {\n      date = formData.date_str;\n    }\n\n    formData.payments_input.push({\n      \"date_str\": date,\n      // \"amount\": \"\",\n      \"amount\": 0.00,\n      \"method\": \"\",\n      \"deleted\": false\n    });\n    setFormData({ ...formData\n    });\n    validatePaymentAmounts(); //validatePaymentAmounts((formData.payments_input.filter(payment => !payment.deleted).length - 1));\n  }\n\n  function findTotalPayments() {\n    var _parseFloat, _parseFloat2;\n\n    let totalPayment = 0.00;\n\n    for (var i = 0; i < ((_formData$payments_in2 = formData.payments_input) === null || _formData$payments_in2 === void 0 ? void 0 : _formData$payments_in2.length); i++) {\n      var _formData$payments_in2;\n\n      if (formData.payments_input[i].amount && !formData.payments_input[i].deleted) {\n        totalPayment += formData.payments_input[i].amount;\n      }\n    }\n\n    totalPaymentAmount = totalPayment;\n    console.log(\"totalPaymentAmount:\", totalPaymentAmount);\n    setTotalPaymentAmount(totalPaymentAmount);\n    console.log(\"totalPayment:\", totalPayment);\n    balanceAmount = parseFloat(netTotal.toFixed(2)) - parseFloat((_parseFloat = parseFloat(formData.cash_discount)) === null || _parseFloat === void 0 ? void 0 : _parseFloat.toFixed(2)) - parseFloat(totalPayment.toFixed(2));\n    balanceAmount = parseFloat(balanceAmount.toFixed(2));\n    setBalanceAmount(balanceAmount);\n\n    if (balanceAmount === parseFloat((parseFloat(netTotal.toFixed(2)) - parseFloat((_parseFloat2 = parseFloat(formData.cash_discount)) === null || _parseFloat2 === void 0 ? void 0 : _parseFloat2.toFixed(2))).toFixed(2))) {\n      paymentStatus = \"not_paid\";\n    } else if (balanceAmount <= 0) {\n      paymentStatus = \"paid\";\n    } else if (balanceAmount > 0) {\n      paymentStatus = \"paid_partially\";\n    }\n\n    setPaymentStatus(paymentStatus);\n    return totalPayment;\n  }\n\n  let [totalPaymentAmount, setTotalPaymentAmount] = useState(0.00);\n  let [balanceAmount, setBalanceAmount] = useState(0.00);\n  let [paymentStatus, setPaymentStatus] = useState(\"\");\n\n  function removePayment(key, validatePayments = false) {\n    formData.payments_input.splice(key, 1); //formData.payments_input[key][\"deleted\"] = true;\n\n    setFormData({ ...formData\n    });\n\n    if (validatePayments) {\n      validatePaymentAmounts();\n    }\n\n    findTotalPayments();\n  }\n\n  function validatePaymentAmounts() {\n    console.log(\"validatePaymentAmount: netTotal:\", netTotal);\n    errors[\"cash_discount\"] = \"\";\n    setErrors({ ...errors\n    });\n    let haveErrors = false;\n\n    if (!netTotal) {\n      /*\n      removePayment(0, false);\n      totalPaymentAmount = 0.0;\n      setTotalPaymentAmount(0.00);\n      balanceAmount = 0.00;\n      setBalanceAmount(0.00);\n      paymentStatus = \"\";\n      setPaymentStatus(paymentStatus);\n      */\n      return true;\n    }\n\n    if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n      errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toFixed(2).toString();\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n      return false;\n    }\n\n    let totalPayment = findTotalPayments(); // errors[\"payment_date\"] = [];\n    //errors[\"payment_method\"] = [];\n    //errors[\"payment_amount\"] = [];\n\n    for (var key = 0; key < formData.payments_input.length; key++) {\n      errors[\"payment_amount_\" + key] = \"\";\n      errors[\"payment_date_\" + key] = \"\";\n      errors[\"payment_method_\" + key] = \"\";\n      setErrors({ ...errors\n      });\n\n      if (!formData.payments_input[key].amount) {\n        errors[\"payment_amount_\" + key] = \"Payment amount is required\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      } else if (formData.payments_input[key].amount === 0) {\n        errors[\"payment_amount_\" + key] = \"Amount should be greater than zero\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      }\n\n      if (!formData.payments_input[key].date_str) {\n        errors[\"payment_date_\" + key] = \"Payment date is required\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      }\n      /* else if ((new Date(formData.payments_input[key].date_str)) < (new Date(formData.date_str))) {\n        errors[\"payment_date_\" + key] = \"Payment date time should be greater than or equal to order date time\";\n        setErrors({ ...errors });\n        haveErrors = true;\n      }*/\n\n\n      if (!formData.payments_input[key].method) {\n        errors[\"payment_method_\" + key] = \"Payment method is required\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      }\n\n      if ((formData.payments_input[key].amount || formData.payments_input[key].amount === 0) && !formData.payments_input[key].deleted) {\n        /* let maxAllowedAmount = (netTotal - formData.cash_discount) - (totalPayment - formData.payments_input[key].amount);\n          if (maxAllowedAmount < 0) {\n             maxAllowedAmount = 0;\n         }\n          /*\n         \n         if (maxAllowedAmount === 0) {\n             errors[\"payment_amount_\" + key] = \"Total amount should not exceed \" + (netTotal - formData.cash_discount).toFixed(2).toString() + \", Please delete this payment\";\n             setErrors({ ...errors });\n             haveErrors = true;\n         } else if (formData.payments_input[key].amount > parseFloat(maxAllowedAmount.toFixed(2))) {\n             errors[\"payment_amount_\" + key] = \"Amount should not be greater than \" + maxAllowedAmount.toFixed(2);\n             setErrors({ ...errors });\n             haveErrors = true;\n         }\n         */\n      }\n    }\n\n    if (haveErrors) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrderView, {\n      ref: DetailsViewRef,\n      openCreateForm: props.openCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductView, {\n      ref: ProductDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StoreCreate, {\n      ref: StoreCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerCreate, {\n      ref: CustomerCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductCreate, {\n      ref: ProductCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserCreate, {\n      ref: UserCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignatureCreate, {\n      ref: SignatureCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      fullscreen: true,\n      onHide: handleClose,\n      animation: false,\n      backdrop: \"static\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: formData.id ? \"Update Sales Order #\" + formData.code : \"Create New Sales Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [/*#__PURE__*/_jsxDEV(OrderPreview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreate,\n            children: isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [Object.keys(errors).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors && Object.keys(errors).map((key, index) => {\n              console.log(\"Key\", key);\n\n              if (Array.isArray(errors[key])) {\n                return errors[key][0] ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1282,\n                  columnNumber: 66\n                }, this) : \"\";\n              } else {\n                return errors[key] ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors[key]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1284,\n                  columnNumber: 63\n                }, this) : \"\";\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 needs-validation\",\n          onSubmit: e => {\n            e.preventDefault();\n            handleCreate(e);\n          },\n          children: [!cookies.get('store_name') ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Store*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"store_id\",\n                labelKey: \"name\",\n                isLoading: isStoresLoading,\n                isInvalid: errors.store_id ? true : false,\n                onChange: selectedItems => {\n                  errors.store_id = \"\";\n                  errors[\"product_id\"] = \"\";\n                  setErrors(errors);\n\n                  if (selectedItems.length === 0) {\n                    errors.store_id = \"Invalid Store selected\";\n                    setErrors(errors);\n                    setFormData({ ...formData\n                    });\n                    setSelectedStores([]);\n                    return;\n                  }\n\n                  formData.store_id = selectedItems[0].id;\n                  setFormData({ ...formData\n                  });\n                  console.log(\"formData.store_id:\", formData.store_id);\n                  selectedStores = selectedItems;\n                  setSelectedStores([...selectedItems]);\n\n                  if (formData.store_id) {\n                    if (selectedProduct[0] && selectedProduct[0].product_stores && selectedProduct[0].quantity) {\n                      let stock = 0;\n\n                      if (selectedProduct[0].product_stores) {\n                        //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n                        if (selectedProduct[0].product_stores[formData.store_id]) {\n                          stock = selectedProduct[0].product_stores[formData.store_id].stock;\n                        }\n                      }\n\n                      if (stock < parseFloat(selectedProduct[0].quantity)) {\n                        if (selectedStores[0]) {\n                          errors.product_id = \"Stock is only \" + stock + \" in Store: \" + selectedStores[0].name + \" for this product\";\n                        } else {\n                          errors.product_id = \"Stock is only \" + stock + \" in Selected Store for this product\";\n                        }\n\n                        setErrors({ ...errors\n                        });\n                      }\n                    } else if (selectedProduct[0] && selectedProduct[0].product_stores) {\n                      let stock = 0; //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n\n                      if (selectedProduct[0].product_stores[formData.store_id]) {\n                        stock = selectedProduct[0].product_stores[formData.store_id].stock;\n                      }\n\n                      if (stock === 0) {\n                        if (selectedStores[0]) {\n                          errors[\"product_id\"] = \"This product is not available in store: \" + selectedStores[0].name;\n                        } else {\n                          errors[\"product_id\"] = \"This product is not available in selected store.\";\n                        }\n\n                        setErrors({ ...errors\n                        });\n                      }\n                    }\n\n                    if (selectedProduct[0]) {\n                      /*\n                      selectedProduct[0].unit_price = GetProductUnitPriceInStore(\n                          formData.store_id,\n                          selectedProduct[0].stores\n                      );\n                      */\n                      if (selectedProduct[0].product_stores[formData.store_id]) {\n                        selectedProduct[0].unit_price = selectedProduct[0].product_stores[formData.store_id].retail_unit_price;\n                      }\n\n                      if (!selectedProduct[0].quantity) {\n                        selectedProduct[0].quantity = 1;\n                      }\n\n                      setSelectedProduct([...selectedProduct]);\n                    }\n                  }\n                },\n                options: storeOptions,\n                placeholder: \"Select Store\",\n                selected: selectedStores,\n                highlightOnlyResult: true,\n                onInputChange: (searchTerm, e) => {\n                  suggestStores(searchTerm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1295,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                hide: true.toString(),\n                onClick: openStoreCreateForm,\n                className: \"btn btn-outline-secondary btn-primary btn-sm\",\n                type: \"button\",\n                id: \"button-addon1\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1384,\n                  columnNumber: 185\n                }, this), \" New\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1384,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1386,\n                  columnNumber: 37\n                }, this), errors.store_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1385,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1294,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 55\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            style: {\n              border: \"solid 0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Customer*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1393,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n              id: \"customer_id\",\n              labelKey: \"search_label\",\n              isLoading: isCustomersLoading,\n              isInvalid: errors.customer_id ? true : false,\n              onChange: selectedItems => {\n                errors.customer_id = \"\";\n                setErrors(errors);\n\n                if (selectedItems.length === 0) {\n                  errors.customer_id = \"Invalid Customer selected\";\n                  setErrors(errors);\n                  formData.customer_id = \"\";\n                  setFormData({ ...formData\n                  });\n                  setSelectedCustomers([]);\n                  return;\n                }\n\n                formData.customer_id = selectedItems[0].id;\n                setFormData({ ...formData\n                });\n                setSelectedCustomers(selectedItems);\n              },\n              options: customerOptions,\n              placeholder: \"Type name or mob\",\n              selected: selectedCustomers,\n              highlightOnlyResult: true,\n              onInputChange: (searchTerm, e) => {\n                suggestCustomers(searchTerm);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1394,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              hide: true.toString(),\n              onClick: openCustomerCreateForm,\n              className: \"btn btn-outline-secondary btn-primary btn-sm\",\n              type: \"button\",\n              id: \"button-addon1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-plus-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1422,\n                columnNumber: 184\n              }, this), \" New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 29\n            }, this), errors.customer_id && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1425,\n                columnNumber: 37\n              }, this), errors.customer_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1424,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Product Barcode Scan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1433,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(DebounceInput, {\n                minLength: 3,\n                debounceTimeout: 100,\n                placeholder: \"Scan Barcode\",\n                className: \"form-control barcode\",\n                value: formData.barcode,\n                onChange: event => getProductByBarCode(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1436,\n                columnNumber: 33\n              }, this), errors.bar_code && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1445,\n                  columnNumber: 41\n                }, this), errors.bar_code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1444,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1435,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1453,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                id: \"date_str\",\n                selected: formData.date_str ? new Date(formData.date_str) : null,\n                value: formData.date_str ? format(new Date(formData.date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                className: \"form-control\",\n                dateFormat: \"MMMM d, yyyy h:mm aa\",\n                showTimeSelect: true,\n                timeIntervals: \"1\",\n                onChange: value => {\n                  console.log(\"Value\", value);\n                  formData.date_str = value; // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n\n                  setFormData({ ...formData\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1456,\n                columnNumber: 33\n              }, this), errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1477,\n                  columnNumber: 41\n                }, this), errors.date_str]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1476,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1455,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1452,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Product Search*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1486,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n              id: \"product_id\",\n              size: \"lg\",\n              labelKey: \"search_label\",\n              emptyLabel: \"\",\n              clearButton: true,\n              open: openProductSearchResult,\n              isLoading: isProductsLoading,\n              isInvalid: errors.product_id ? true : false,\n              onChange: selectedItems => {\n                if (selectedItems.length === 0) {\n                  errors[\"product_id\"] = \"Invalid Product selected\";\n                  setErrors(errors);\n                  return;\n                }\n\n                errors[\"product_id\"] = \"\";\n                setErrors({ ...errors\n                });\n\n                if (formData.store_id) {\n                  addProduct(selectedItems[0]);\n                }\n\n                setOpenProductSearchResult(false);\n              },\n              options: productOptions,\n              selected: selectedProduct,\n              placeholder: \"Search By Part No. / Name / Name in Arabic\",\n              highlightOnlyResult: true,\n              onInputChange: (searchTerm, e) => {\n                suggestProducts(searchTerm);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1513,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              hide: true.toString(),\n              onClick: openProductCreateForm,\n              className: \"btn btn-outline-secondary btn-primary btn-sm\",\n              type: \"button\",\n              id: \"button-addon1\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-plus-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1545,\n                columnNumber: 183\n              }, this), \" New\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1545,\n              columnNumber: 29\n            }, this), errors.product_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1548,\n                columnNumber: 37\n              }, this), errors.product_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 33\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1485,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            style: {\n              overflowX: \"auto\",\n              maxHeight: \"400px\",\n              overflowY: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"3%\"\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1560,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"5%\"\n                    },\n                    children: \"SI No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1561,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"10%\"\n                    },\n                    children: \"Part No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1562,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"33%\"\n                    },\n                    className: \"text-start\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1563,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"10%\"\n                    },\n                    children: \"Purchase Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1564,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"10%\"\n                    },\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1565,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"10%\"\n                    },\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1566,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    style: {\n                      width: \"32%\"\n                    },\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1567,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1559,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1558,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\",\n                        cursor: \"pointer\"\n                      },\n                      onClick: () => {\n                        removeProduct(product);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1581,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1575,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1574,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1584,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: product.part_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1585,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textDecoration: \"underline\",\n                      color: \"blue\",\n                      cursor: \"pointer\"\n                    },\n                    className: \"text-start\",\n                    onClick: () => {\n                      openProductDetailsView(product.product_id);\n                    },\n                    children: [product.name, errors[\"product_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors[\"product_\" + index]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1599,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1586,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.purchase_unit_price,\n                        disabled: !product.disabled,\n                        className: \"form-control text-end\",\n                        placeholder: \"Purchase Unit Price\",\n                        onChange: e => {\n                          errors[\"purchase_unit_price_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            //errors[\"purchase_unit_price_\" + index] = \"Invalid purchase unit price\";\n                            selectedProducts[index].purchase_unit_price = \"\";\n                            setSelectedProducts([...selectedProducts]); //setErrors({ ...errors });\n\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            // errors[\"purchase_unit_price_\" + index] = \"purchase unit price should be > 0\";\n                            selectedProducts[index].purchase_unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]); //setErrors({ ...errors });\n                            //console.log(\"errors:\", errors);\n\n                            return;\n                          }\n\n                          if (e.target.value) {\n                            selectedProducts[index].purchase_unit_price = parseFloat(e.target.value);\n                            console.log(\"selectedProducts[index].purchase_unit_price:\", selectedProducts[index].purchase_unit_price);\n                            setSelectedProducts([...selectedProducts]); //reCalculate();\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1608,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1607,\n                      columnNumber: 49\n                    }, this), errors[\"purchase_unit_price_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1647,\n                        columnNumber: 57\n                      }, this), errors[\"purchase_unit_price_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1646,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1605,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.quantity,\n                        className: \"form-control text-end\",\n                        placeholder: \"Quantity\",\n                        onChange: e => {\n                          errors[\"quantity_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                            selectedProducts[index].quantity = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            errors[\"quantity_\" + index] = \"Quantity should be > 0\";\n                            selectedProducts[index].quantity = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          product.quantity = parseFloat(e.target.value);\n                          selectedProducts[index].quantity = parseFloat(e.target.value);\n                          reCalculate();\n                          let stock = 0;\n\n                          if (selectedProducts[index].product_stores) {\n                            var _selectedProducts$ind;\n\n                            stock = (_selectedProducts$ind = selectedProducts[index].product_stores[formData.store_id]) === null || _selectedProducts$ind === void 0 ? void 0 : _selectedProducts$ind.stock; // stock = GetProductStockInStore(formData.store_id, selectedProducts[index].stores);\n                          }\n\n                          if (stock < parseFloat(e.target.value) && selectedProducts[index].product_stores) {\n                            // errors[\"quantity_\" + index] = \" Warning: Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for this product\";\n                            errors[\"quantity_\" + index] = \" Warning: Available stock is \" + stock;\n                            setErrors({ ...errors\n                            });\n                            return;\n                          }\n\n                          selectedProducts[index].quantity = parseFloat(e.target.value);\n                          console.log(\"selectedProducts[index].quantity:\", selectedProducts[index].quantity);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1656,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1702,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1655,\n                      columnNumber: 49\n                    }, this), errors[\"quantity_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors[\"quantity_\" + index]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1705,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1653,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-group mb-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.unit_price,\n                        className: \"form-control text-end\",\n                        placeholder: \"Unit Price\",\n                        onChange: e => {\n                          errors[\"unit_price_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            errors[\"unit_price_\" + index] = \"Unit Price should be > 0\";\n                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          selectedProducts[index].unit_price = parseFloat(e.target.value);\n                          console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1714,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1713,\n                      columnNumber: 49\n                    }, this), errors[\"unit_price_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1748,\n                        columnNumber: 57\n                      }, this), errors[\"unit_price_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1747,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1711,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (product.unit_price * product.quantity).toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" \",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1755,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1754,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1573,\n                  columnNumber: 41\n                }, this)).reverse()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1571,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1557,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1556,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1774,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    style: {\n                      width: \"200px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_totalPrice = totalPrice) === null || _totalPrice === void 0 ? void 0 : _totalPrice.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" \",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1776,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1775,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1771,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: \"Shipping & Handling Fees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1786,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"150px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.shipping_handling_fees,\n                      onChange: e => {\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.shipping_handling_fees = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"shipping_handling_fees\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.shipping_handling_fees = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"shipping_handling_fees\"] = \"Shipping / Handling Fees should be > 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.shipping_handling_fees = \"\";\n                          errors[\"shipping_handling_fees\"] = \"Invalid Shipping / Handling Fees\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"shipping_handling_fees\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.shipping_handling_fees = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1790,\n                      columnNumber: 45\n                    }, this), \" \", errors.shipping_handling_fees && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.shipping_handling_fees\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1827,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1789,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1785,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: [\"Discount  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"50px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount_percent,\n                      onChange: e => {\n                        formData.is_discount_percent = true;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          formData.discount = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount_percent = \"\";\n                          formData.discount = 0.00;\n                          errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount_percent\"] = \"\";\n                        errors[\"discount\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount_percent = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1835,\n                      columnNumber: 55\n                    }, this), \"%\", errors.discount_percent && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount_percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1874,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1834,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"150px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount,\n                      onChange: e => {\n                        formData.is_discount_percent = false;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          formData.discount_percent = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"Discount should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount = \"\";\n                          formData.discount_percent = 0.00;\n                          errors[\"discount\"] = \"Invalid Discount\";\n                          setFormData({ ...formData\n                          });\n                          reCalculate();\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount\"] = \"\";\n                        errors[\"discount_percent\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1880,\n                      columnNumber: 45\n                    }, this), \" \", errors.discount && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1921,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1879,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1833,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: [\" VAT  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      className: \"text-center\",\n                      style: {\n                        width: \"50px\"\n                      },\n                      value: formData.vat_percent,\n                      onChange: e => {\n                        console.log(\"Inside onchange vat percent\");\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.vat_percent = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"vat_percent\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.vat_percent = parseFloat(e.target.value);\n                          vatPrice = 0.00;\n                          setVatPrice(vatPrice);\n                          setFormData({ ...formData\n                          });\n                          errors[\"vat_percent\"] = \"Vat percent should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.vat_percent = \"\";\n                          vatPrice = 0.00;\n                          setVatPrice(vatPrice); //formData.discount_percent = 0.00;\n\n                          errors[\"vat_percent\"] = \"Invalid vat percent\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"vat_percent\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.vat_percent = e.target.value;\n                        reCalculate();\n                        setFormData({ ...formData\n                        });\n                        console.log(formData);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1929,\n                      columnNumber: 84\n                    }, this), \"%\", errors.vat_percent && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.vat_percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1970,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1929,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_vatPrice = vatPrice) === null || _vatPrice === void 0 ? void 0 : _vatPrice.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" \",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1976,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1975,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1927,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"8\",\n                    className: \"text-end\",\n                    children: \"Net Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1987,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_netTotal = netTotal) === null || _netTotal === void 0 ? void 0 : _netTotal.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" \",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1989,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1988,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1985,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1770,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1769,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Cash discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2073,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: formData.cash_discount,\n              className: \"form-control \",\n              onChange: e => {\n                errors[\"cash_discount\"] = \"\";\n                setErrors({ ...errors\n                });\n\n                if (!e.target.value) {\n                  formData.cash_discount = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  validatePaymentAmounts();\n                  return;\n                }\n\n                formData.cash_discount = parseFloat(e.target.value);\n\n                if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n                  errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toString();\n                  setErrors({ ...errors\n                  });\n                  return;\n                }\n\n                setFormData({ ...formData\n                });\n                validatePaymentAmounts();\n                console.log(formData);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2074,\n              columnNumber: 29\n            }, this), errors.cash_discount && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2098,\n                columnNumber: 37\n              }, this), errors.cash_discount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2097,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2072,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Payments Received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"table-responsive\",\n              style: {\n                maxWidth: \"900px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                style: {\n                  alignContent: \"right\",\n                  marginBottom: \"10px\"\n                },\n                onClick: addNewPayment,\n                children: \"Create new payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                class: \"table table-striped table-sm table-bordered\",\n                children: [formData.payments_input && formData.payments_input.length > 0 && /*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2114,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2117,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Payment method\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2120,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2123,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2113,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [formData.payments_input && formData.payments_input.filter(payment => !payment.deleted).map((payment, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        minWidth: \"220px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                        id: \"payment_date_str\",\n                        selected: formData.payments_input[key].date_str ? new Date(formData.payments_input[key].date_str) : null,\n                        value: formData.payments_input[key].date_str ? format(new Date(formData.payments_input[key].date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                        className: \"form-control\",\n                        dateFormat: \"MMMM d, yyyy h:mm aa\",\n                        showTimeSelect: true,\n                        timeIntervals: \"1\",\n                        onChange: value => {\n                          console.log(\"Value\", value);\n                          formData.payments_input[key].date_str = value;\n                          setFormData({ ...formData\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2133,\n                        columnNumber: 57\n                      }, this), errors[\"payment_date_\" + key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2152,\n                          columnNumber: 65\n                        }, this), errors[\"payment_date_\" + key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2151,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2131,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"300px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: formData.payments_input[key].amount,\n                        className: \"form-control \",\n                        onChange: e => {\n                          errors[\"payment_amount_\" + key] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            formData.payments_input[key].amount = e.target.value;\n                            setFormData({ ...formData\n                            });\n                            validatePaymentAmounts();\n                            return;\n                          }\n\n                          formData.payments_input[key].amount = parseFloat(e.target.value);\n                          validatePaymentAmounts();\n                          setFormData({ ...formData\n                          });\n                          console.log(formData);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2158,\n                        columnNumber: 57\n                      }, this), errors[\"payment_amount_\" + key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2179,\n                          columnNumber: 65\n                        }, this), errors[\"payment_amount_\" + key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2178,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2157,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                        value: formData.payments_input[key].method,\n                        className: \"form-control \",\n                        onChange: e => {\n                          // errors[\"payment_method\"] = [];\n                          errors[\"payment_method_\" + key] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"payment_method_\" + key] = \"Payment method is required\";\n                            setErrors({ ...errors\n                            });\n                            formData.payments_input[key].method = \"\";\n                            setFormData({ ...formData\n                            });\n                            return;\n                          } // errors[\"payment_method\"] = \"\";\n                          //setErrors({ ...errors });\n\n\n                          formData.payments_input[key].method = e.target.value;\n                          setFormData({ ...formData\n                          });\n                          console.log(formData);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2208,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"cash\",\n                          children: \"Cash\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2209,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"bank_account\",\n                          children: \"Bank Account / Debit / Credit Card\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2210,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"customer_account\",\n                          children: \"Customer Account\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2211,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2185,\n                        columnNumber: 57\n                      }, this), errors[\"payment_method_\" + key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2215,\n                          columnNumber: 65\n                        }, this), errors[\"payment_method_\" + key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2214,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2184,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"danger\",\n                        onClick: event => {\n                          removePayment(key);\n                        },\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2221,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2220,\n                      columnNumber: 53\n                    }, this)]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2130,\n                    columnNumber: 49\n                  }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      class: \"text-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Total\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2232,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2231,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        style: {\n                          marginLeft: \"14px\"\n                        },\n                        children: (_totalPaymentAmount = totalPaymentAmount) === null || _totalPaymentAmount === void 0 ? void 0 : _totalPaymentAmount.toFixed(2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2234,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2234,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        style: {\n                          marginLeft: \"12px\",\n                          alignSelf: \"end\"\n                        },\n                        children: [\"Balance: \", (_balanceAmount = balanceAmount) === null || _balanceAmount === void 0 ? void 0 : _balanceAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2238,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2237,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: 1,\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Payment status: \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2241,\n                        columnNumber: 49\n                      }, this), paymentStatus == \"paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge bg-success\",\n                        children: \"Paid\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2243,\n                        columnNumber: 53\n                      }, this) : \"\", paymentStatus == \"paid_partially\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge bg-warning\",\n                        children: \"Paid Partially\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2247,\n                        columnNumber: 53\n                      }, this) : \"\", paymentStatus == \"not_paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge bg-danger\",\n                        children: \"Not Paid\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2251,\n                        columnNumber: 53\n                      }, this) : \"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2240,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2230,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleCreate,\n              children: isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2265,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2261,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"PCNjdN4i8gNu2yUIkQxdJlA9/uE=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = OrderCreate;\nexport default OrderCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderCreate$forwardRef\");\n$RefreshReg$(_c2, \"OrderCreate\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/order/create.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","OrderPreview","Modal","Button","Form","StoreCreate","CustomerCreate","ProductCreate","UserCreate","SignatureCreate","Cookies","Typeahead","NumberFormat","DatePicker","format","Spinner","OrderView","DebounceInput","ProductView","OrderCreate","props","ref","open","id","errors","setErrors","selectedProducts","setSelectedProducts","selectedStores","setSelectedStores","selectedCustomers","setSelectedCustomers","cookies","get","selectedDeliveredByUsers","name","formData","delivered_by","setFormData","setSelectedDeliveredByUsers","store_id","store_name","vat_percent","parseFloat","console","log","undefined","discount","discount_percent","shipping_handling_fees","partial_payment_amount","cash_discount","payment_method","payment_status","code","net_total","date_str","Date","payments_input","getOrder","reCalculate","setShow","requestOptions","method","headers","fetch","then","response","isJson","includes","data","json","ok","error","Promise","reject","result","date","payments","i","length","is_discount_percent","discountValue","products","searchLabel","customer_name","customer_id","search_label","catch","setProcessing","listener","event","form","target","index","Array","prototype","indexOf","call","elements","getAttribute","focus","preventDefault","document","addEventListener","removeEventListener","selectedDate","isProcessing","signature_date_str","status","price_type","useLaserScanner","storeOptions","setStoreOptions","isStoresLoading","setIsStoresLoading","customerOptions","setCustomerOptions","isCustomersLoading","setIsCustomersLoading","productOptions","setProductOptions","selectedProduct","setSelectedProduct","isProductsLoading","setIsProductsLoading","deliveredByUserOptions","setDeliveredByUserOptions","isDeliveredByUsersLoading","setIsDeliveredByUsersLoading","deliveredBySignatureOptions","setDeliveredBySignatureOptions","selectedDeliveredBySignatures","setSelectedDeliveredBySignatures","isDeliveredBySignaturesLoading","setIsDeliveredBySignaturesLoading","show","handleClose","at","window","location","ObjectToSearchQueryParams","object","Object","keys","map","key","encodeURIComponent","join","suggestStores","searchTerm","params","queryString","Authorization","Select","suggestCustomers","GetProductUnitPriceInStore","storeId","productStores","retail_unit_price","openProductSearchResult","setOpenProductSearchResult","suggestProducts","getProductByBarCode","barcode","slice","product","addProduct","suggestUsers","suggestSignatures","handleCreate","haveErrors","push","product_id","quantity","unit_price","purchase_unit_price","unit","validatePaymentAmounts","netTotal","endPoint","body","JSON","stringify","showToastMessage","refreshList","openDetailsView","getProductIndex","productID","isProductAdded","GetProductStockInStore","stock","product_stores","alreadyAdded","item_code","part_number","toFixed","removeProduct","quantity_returned","splice","totalPrice","setTotalPrice","findTotalPrice","vatPrice","setVatPrice","findVatPrice","setNetTotal","RoundFloat","val","precision","ratio","Math","pow","round","findNetTotal","amount","discountPercent","setDiscountPercent","findDiscountPercent","findDiscount","DetailsViewRef","current","StoreCreateFormRef","openStoreCreateForm","CustomerCreateFormRef","openCustomerCreateForm","ProductCreateFormRef","openProductCreateForm","UserCreateFormRef","openUserCreateForm","SignatureCreateFormRef","openSignatureCreateForm","ProductDetailsViewRef","openProductDetailsView","addNewPayment","findTotalPayments","totalPayment","deleted","totalPaymentAmount","setTotalPaymentAmount","balanceAmount","setBalanceAmount","paymentStatus","setPaymentStatus","removePayment","validatePayments","toString","openCreateForm","isArray","color","e","selectedItems","border","value","bar_code","overflowX","maxHeight","overflowY","width","cursor","textDecoration","disabled","reverse","maxWidth","alignContent","marginBottom","filter","payment","minWidth","marginLeft","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport OrderPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport OrderView from \"./view.js\";\nimport \"./style.css\";\nimport { DebounceInput } from 'react-debounce-input';\n//import BarcodeScannerComponent from \"react-qr-barcode-scanner\";\n//import Quagga from 'quagga';\nimport ProductView from \"./../product/view.js\";\n\nconst OrderCreate = forwardRef((props, ref) => {\n\n\n    useImperativeHandle(ref, () => ({\n        open(id) {\n            errors = {};\n            setErrors({ ...errors });\n            selectedProducts = [];\n            setSelectedProducts([]);\n\n            selectedStores = [];\n            setSelectedStores([]);\n\n            selectedCustomers = [];\n            setSelectedCustomers([]);\n\n\n\n            if (cookies.get(\"user_id\")) {\n                selectedDeliveredByUsers = [{\n                    id: cookies.get(\"user_id\"),\n                    name: cookies.get(\"user_name\"),\n                }];\n                formData.delivered_by = cookies.get(\"user_id\");\n                setFormData({ ...formData });\n                setSelectedDeliveredByUsers([...selectedDeliveredByUsers]);\n            }\n\n            if (cookies.get('store_id')) {\n                formData.store_id = cookies.get('store_id');\n                formData.store_name = cookies.get('store_name');\n                formData.vat_percent = parseFloat(cookies.get('vat_percent'));\n                console.log(\"formData.store_id:\", formData.store_id);\n            }\n\n            formData.id = undefined;\n            formData.discount = 0.00;\n            formData.discount_percent = 0.00;\n            formData.shipping_handling_fees = 0.00;\n            formData.partial_payment_amount = 0.00;\n            formData.cash_discount = 0.00;\n            formData.payment_method = \"\";\n            formData.payment_status = \"\";\n            formData.code = \"\";\n            formData.net_total = 0.00;\n            formData.date_str = new Date();\n            formData.payments_input = [\n                {\n                    \"date_str\": formData.date_str,\n                    // \"amount\": \"\",\n                    \"amount\": 0.00,\n                    \"method\": \"\",\n                    \"deleted\": false,\n                }\n            ];\n            formData.cash_discount = 0.00;\n\n            if (id) {\n                getOrder(id);\n            }\n            setFormData({ ...formData });\n            reCalculate();\n            setShow(true);\n\n        },\n    }));\n\n\n    function getOrder(id) {\n        console.log(\"inside get Order\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/order/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                formData = data.result;\n                formData.date_str = data.result.date;\n                if (data.result.payments) {\n                    console.log(\"data.result.payments:\", data.result.payments);\n                    formData.payments_input = data.result.payments;\n                    for (var i = 0; i < formData.payments_input?.length; i++) {\n                        formData.payments_input[i].date_str = formData.payments_input[i].date\n                    }\n                }\n\n                /*\n                let order = data.result;\n                formData = {\n                    id: order.id,\n                    code: order.code,\n                    store_id: purchase.store_id,\n                    vendor_id: purchase.vendor_id,\n                    date_str: purchase.date,\n                    // date: purchase.date,\n                    vat_percent: purchase.vat_percent,\n                    discount: purchase.discount,\n                    discount_percent: purchase.discount_percent,\n                    status: purchase.status,\n                    order_placed_by: purchase.order_placed_by,\n                    order_placed_by_signature_id: purchase.order_placed_by_signature_id,\n                    is_discount_percent: purchase.is_discount_percent,\n                    partial_payment_amount: purchase.partial_payment_amount,\n                    payment_method: purchase.payment_method,\n                    payment_status: purchase.payment_status,\n                    shipping_handling_fees: purchase.shipping_handling_fees,\n                };\n                */\n\n                if (formData.is_discount_percent) {\n                    formData.discountValue = formData.discount_percent;\n                } else {\n                    formData.discountValue = formData.discount;\n                }\n\n                selectedProducts = formData.products;\n                setSelectedProducts([...selectedProducts]);\n\n\n                let selectedStores = [\n                    {\n                        id: formData.store_id,\n                        name: formData.store_name,\n                    }\n                ];\n\n\n                let searchLabel = formData.customer_name;\n\n                let selectedCustomers = [\n                    {\n                        id: formData.customer_id,\n                        name: formData.customer_name,\n                        search_label: searchLabel,\n                    }\n                ];\n\n                /*\n                let selectedOrderPlacedByUsers = [\n                    {\n                        id: formData.created_by,\n                        name: formData.created_by_name\n                    }\n                ];\n\n\n                setSelectedOrderPlacedByUsers([...selectedOrderPlacedByUsers]);\n                */\n\n                setSelectedStores([...selectedStores]);\n                setSelectedCustomers([...selectedCustomers]);\n\n                reCalculate();\n                setFormData({ ...formData });\n\n\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                console.log(\"Enter key was pressed. Run your function-order.123\");\n                // event.preventDefault();\n\n\n\n                var form = event.target.form;\n                if (form && event.target) {\n                    var index = Array.prototype.indexOf.call(form, event.target);\n                    if (form && form.elements[index + 1]) {\n                        if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n                            form.elements[index].focus();\n                        } else {\n                            form.elements[index + 1].focus();\n                        }\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n\n    const selectedDate = new Date();\n\n    //const history = useHistory();\n    let [errors, setErrors] = useState({\n        \"payment_amount\": [],\n    });\n    const [isProcessing, setProcessing] = useState(false);\n    const cookies = new Cookies();\n\n    //fields\n    let [formData, setFormData] = useState({\n        vat_percent: 15.0,\n        discountValue: 0.00,\n        discount: 0.00,\n        discount_percent: 0.0,\n        cash_discount: 0.00,\n        is_discount_percent: false,\n        date_str: new Date(),\n        signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n        status: \"delivered\",\n        payment_status: \"\",\n        payment_method: \"\",\n        price_type: \"retail\",\n        useLaserScanner: false,\n        store_id: \"\",\n    });\n\n    //Store Auto Suggestion\n    const [storeOptions, setStoreOptions] = useState([]);\n    let [selectedStores, setSelectedStores] = useState([]);\n    const [isStoresLoading, setIsStoresLoading] = useState(false);\n\n    //Customer Auto Suggestion\n    const [customerOptions, setCustomerOptions] = useState([]);\n    let [selectedCustomers, setSelectedCustomers] = useState([]);\n    const [isCustomersLoading, setIsCustomersLoading] = useState(false);\n\n    //Product Auto Suggestion\n    const [productOptions, setProductOptions] = useState([]);\n    let [selectedProduct, setSelectedProduct] = useState([]);\n    let [selectedProducts, setSelectedProducts] = useState([]);\n    const [isProductsLoading, setIsProductsLoading] = useState(false);\n\n    //Delivered By Auto Suggestion\n    let [deliveredByUserOptions, setDeliveredByUserOptions] = useState([]);\n    let [selectedDeliveredByUsers, setSelectedDeliveredByUsers] = useState([]);\n    const [isDeliveredByUsersLoading, setIsDeliveredByUsersLoading] =\n        useState(false);\n\n    //Delivered By Signature Auto Suggestion\n    const [deliveredBySignatureOptions, setDeliveredBySignatureOptions] =\n        useState([]);\n    const [selectedDeliveredBySignatures, setSelectedDeliveredBySignatures] =\n        useState([]);\n    const [isDeliveredBySignaturesLoading, setIsDeliveredBySignaturesLoading] =\n        useState(false);\n\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    useEffect(() => {\n        let at = cookies.get(\"access_token\");\n        if (!at) {\n            // history.push(\"/dashboard/orders\");\n            window.location = \"/\";\n        }\n    });\n\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + encodeURIComponent(object[key]);\n            })\n            .join(\"&\");\n    }\n\n    async function suggestStores(searchTerm) {\n        console.log(\"Inside handle suggestStores\");\n        setStoreOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsStoresLoading(true);\n        let result = await fetch(\n            \"/v1/store?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setStoreOptions(data.result);\n        setIsStoresLoading(false);\n    }\n\n    async function suggestCustomers(searchTerm) {\n        console.log(\"Inside handle suggestCustomers\");\n        setCustomerOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n        setIsCustomersLoading(true);\n        let result = await fetch(\n            \"/v1/customer?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setCustomerOptions(data.result);\n        setIsCustomersLoading(false);\n    }\n\n    function GetProductUnitPriceInStore(storeId, productStores) {\n        if (!productStores) {\n            return \"\";\n        }\n\n        for (var i = 0; i < productStores.length; i++) {\n            console.log(\"productStores[i]:\", productStores[i]);\n            console.log(\"store_id:\", storeId);\n\n            if (productStores[i].store_id === storeId) {\n                console.log(\"macthed\");\n                console.log(\n                    \"productStores[i].retail_unit_price:\",\n                    productStores[i].retail_unit_price\n                );\n                return productStores[i];\n                /*\n                if (formData.price_type === \"retail\") {\n                    return unitPriceListArray[i].retail_unit_price;\n                } else if (formData.price_type === \"wholesale\") {\n                    return unitPriceListArray[i].wholesale_unit_price;\n                } else if (formData.price_type === \"purchase\") {\n                    return unitPriceListArray[i].purchase_unit_price;\n                }\n                */\n\n            } else {\n                console.log(\"not matched\");\n            }\n        }\n        return \"\";\n    }\n\n\n\n    let [openProductSearchResult, setOpenProductSearchResult] = useState(false);\n\n    async function suggestProducts(searchTerm) {\n        console.log(\"Inside handle suggestProducts\");\n        setProductOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            openProductSearchResult = false;\n            setOpenProductSearchResult(false);\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n\n        if (cookies.get(\"store_id\")) {\n            params.store_id = cookies.get(\"store_id\");\n        }\n\n\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,item_code,bar_code,part_number,name,unit,part_number,name_in_arabic,product_stores\";\n        setIsProductsLoading(true);\n        let result = await fetch(\n            \"/v1/product?\" + Select + queryString + \"&limit=200\",\n            requestOptions\n        );\n        let data = await result.json();\n\n        let products = data.result;\n        if (!products || products.length === 0) {\n            openProductSearchResult = false;\n            setOpenProductSearchResult(false);\n            setIsProductsLoading(false);\n            return;\n        }\n\n        openProductSearchResult = true;\n        setOpenProductSearchResult(true);\n        setProductOptions(products);\n        setIsProductsLoading(false);\n\n    }\n\n    async function getProductByBarCode(barcode) {\n        formData.barcode = barcode;\n        setFormData({ ...formData });\n        console.log(\"Inside getProductByBarCode\");\n        errors[\"bar_code\"] = \"\";\n        setErrors({ ...errors });\n\n        console.log(\"barcode:\" + formData.barcode);\n        if (!formData.barcode) {\n            return;\n        }\n\n        if (formData.barcode.length === 13) {\n            formData.barcode = formData.barcode.slice(0, -1);\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n\n        let Select = \"select=id,item_code,bar_code,ean_12,part_number,name,product_stores,unit,part_number,name_in_arabic\";\n        let result = await fetch(\n            \"/v1/product/barcode/\" + formData.barcode + \"?\" + Select,\n            requestOptions\n        );\n        let data = await result.json();\n\n\n        let product = data.result;\n        if (product) {\n            addProduct(product);\n        } else {\n            errors[\"bar_code\"] = \"Invalid Barcode:\" + formData.barcode\n            setErrors({ ...errors });\n        }\n\n        formData.barcode = \"\";\n        setFormData({ ...formData });\n\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setDeliveredByUserOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsDeliveredByUsersLoading(true);\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setDeliveredByUserOptions(data.result);\n        setIsDeliveredByUsersLoading(false);\n    }\n\n    async function suggestSignatures(searchTerm) {\n        console.log(\"Inside handle suggestSignatures\");\n        setDeliveredBySignatureOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsDeliveredBySignaturesLoading(true);\n        let result = await fetch(\n            \"/v1/signature?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setDeliveredBySignatureOptions(data.result);\n        setIsDeliveredBySignaturesLoading(false);\n    }\n\n    function handleCreate(event) {\n        event.preventDefault();\n        let haveErrors = false;\n\n        if (!formData.cash_discount) {\n            formData.cash_discount = 0.00;\n        }\n\n        formData.products = [];\n        for (var i = 0; i < selectedProducts.length; i++) {\n            formData.products.push({\n                product_id: selectedProducts[i].product_id,\n                quantity: parseFloat(selectedProducts[i].quantity),\n                unit_price: parseFloat(selectedProducts[i].unit_price),\n                purchase_unit_price: selectedProducts[i].purchase_unit_price?parseFloat(selectedProducts[i].purchase_unit_price):0,\n                unit: selectedProducts[i].unit,\n            });\n        }\n\n        errors[\"products\"] = \"\";\n        setErrors({ ...errors });\n\n        if (formData.products.length === 0) {\n            errors[\"products\"] = \"No products added\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n\n\n        if (!validatePaymentAmounts()) {\n            console.log(\"Errors on payments\")\n            haveErrors = true;\n        }\n\n\n\n\n        if (!formData.shipping_handling_fees && formData.shipping_handling_fees !== 0) {\n            errors[\"shipping_handling_fees\"] = \"Invalid shipping / handling fees\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        /*\n        if (formData.payment_status === \"paid_partially\" && !formData.partial_payment_amount && formData.partial_payment_amount !== 0) {\n            errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount <= 0) {\n            errors[\"partial_payment_amount\"] = \"Partial payment should be > 0 \";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (!formData.id && formData.payment_status === \"paid_partially\" && formData.partial_payment_amount >= netTotal) {\n            errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n            setErrors({ ...errors });\n            return;\n        }\n        \n\n        errors[\"payment_method\"] = \"\";\n        setErrors({ ...errors });\n        if (!formData.id && formData.payment_status != \"not_paid\" && !formData.payment_method) {\n            errors[\"payment_method\"] = \"Payment method is required\";\n            setErrors({ ...errors });\n            return;\n        }\n        */\n\n\n        if (!formData.discount && formData.discount !== 0) {\n            errors[\"discount\"] = \"Invalid discount\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (!formData.discount_percent && formData.discount_percent !== 0) {\n            errors[\"discount_percent\"] = \"Invalid discount percent\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (parseFloat(formData.discount_percent) > 100) {\n            errors[\"discount_percent\"] = \"Discount percent cannot be > 100\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (!formData.vat_percent && formData.vat_percent !== 0) {\n            errors[\"vat_percent\"] = \"Invalid vat percent\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (haveErrors) {\n            console.log(\"Errors: \", errors);\n            return;\n        }\n\n\n\n        formData.discount = parseFloat(formData.discount);\n        formData.discount_percent = parseFloat(formData.discount_percent);\n        formData.vat_percent = parseFloat(formData.vat_percent);\n        formData.net_total = parseFloat(netTotal);\n\n        if (cookies.get('store_id')) {\n            formData.store_id = cookies.get('store_id');\n        }\n\n\n        let endPoint = \"/v1/order\";\n        let method = \"POST\";\n        if (formData.id) {\n            endPoint = \"/v1/order/\" + formData.id;\n            method = \"PUT\";\n        }\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n            body: JSON.stringify(formData),\n        };\n\n        console.log(\"formData:\", formData);\n\n        setProcessing(true);\n        fetch(endPoint, requestOptions)\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = data && data.errors;\n                    //const error = data.errors\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n                setProcessing(false);\n\n                console.log(\"Response:\");\n                console.log(data);\n                props.showToastMessage(\"Order Created Successfully!\", \"success\");\n                if (props.refreshList) {\n                    props.refreshList();\n                }\n\n                handleClose();\n                formData.products = [];\n                selectedProducts = [];\n                setSelectedProducts([]);\n                formData.customer_id = \"\";\n                setSelectedCustomers([]);\n                setFormData({ ...formData });\n                reCalculate();\n\n                openDetailsView(data.result.id);\n            })\n            .catch((error) => {\n                setProcessing(false);\n                console.log(\"Inside catch\");\n                console.log(error);\n                setErrors({ ...error });\n                console.error(\"There was an error!\", error);\n                props.showToastMessage(\"Error Creating Order!\", \"danger\");\n            });\n    }\n\n    function getProductIndex(productID) {\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (selectedProducts[i].product_id === productID) {\n                return i;\n            }\n        }\n        return false;\n    }\n\n\n    function isProductAdded(productID) {\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (selectedProducts[i].product_id === productID) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function GetProductStockInStore(storeId, productStores) {\n        if (!productStores) {\n            return 0.0;\n        }\n\n        for (var i = 0; i < productStores.length; i++) {\n            if (productStores[i].store_id === storeId) {\n                return productStores[i].stock;\n            }\n        }\n        return 0.0;\n    }\n\n    function addProduct(product) {\n        console.log(\"Inside Add product\");\n        if (!formData.store_id) {\n            errors.product_id = \"Please Select a Store and try again\";\n            setErrors({ ...errors });\n            return;\n        }\n\n\n        errors.product_id = \"\";\n        if (!product) {\n            errors.product_id = \"Invalid Product\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        /*\n        let productStore = GetProductUnitPriceInStore(\n            formData.store_id,\n            product.stores\n        );\n        */\n        // product.unit_price = productStore.retail_unit_price;\n\n        if (product.product_stores[formData.store_id]) {\n            product.unit_price = product.product_stores[formData.store_id].retail_unit_price;\n            product.purchase_unit_price = product.product_stores[formData.store_id].purchase_unit_price;\n        }\n\n\n        errors.unit_price = \"\";\n        if (!product.unit_price) {\n            errors.unit_price = \"Invalid Unit Price\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        let alreadyAdded = false;\n        let index = false;\n        let quantity = 0.00;\n        product.quantity = 1.00;\n\n\n        if (isProductAdded(product.id)) {\n            alreadyAdded = true;\n            index = getProductIndex(product.id);\n            quantity = parseFloat(selectedProducts[index].quantity + product.quantity);\n        } else {\n            quantity = parseFloat(product.quantity);\n        }\n\n        console.log(\"quantity:\", quantity);\n\n        errors.quantity = \"\";\n\n        //let stock = GetProductStockInStore(formData.store_id, product.stores);\n        let stock = 0;\n\n        if (product.product_stores[formData.store_id]) {\n            stock = product.product_stores[formData.store_id].stock;\n        }\n\n        if (stock < quantity) {\n            if (index === false) {\n                index = selectedProducts.length;\n            }\n            // errors[\"quantity_\" + index] = \"Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for product: \" + product.name;\n            errors[\"quantity_\" + index] = \"Warning: Available stock is \" + stock\n            console.log(\"errors:\", errors);\n            setErrors({ ...errors });\n        }\n\n        if (alreadyAdded) {\n            selectedProducts[index].quantity = parseFloat(quantity);\n        }\n\n        if (!alreadyAdded) {\n            selectedProducts.push({\n                product_id: product.id,\n                code: product.item_code,\n                part_number: product.part_number,\n                name: product.name,\n                quantity: product.quantity,\n                product_stores: product.product_stores,\n                unit_price: parseFloat(product.unit_price).toFixed(2),\n                unit: product.unit,\n                purchase_unit_price: parseFloat(product.purchase_unit_price).toFixed(2),\n            });\n        }\n        setSelectedProducts([...selectedProducts]);\n        reCalculate();\n    }\n\n    function removeProduct(product) {\n        const index = selectedProducts.indexOf(product);\n        if (product.quantity_returned > 0) {\n            errors[\"product_\" + index] = \"This product cannot be removed as it is returned, Note: Please remove the product from sales return and try again\"\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (index > -1) {\n            selectedProducts.splice(index, 1);\n        }\n        setSelectedProducts([...selectedProducts]);\n\n        reCalculate();\n    }\n\n    let [totalPrice, setTotalPrice] = useState(0.0);\n\n    function findTotalPrice() {\n        totalPrice = 0.00;\n        for (var i = 0; i < selectedProducts.length; i++) {\n            totalPrice +=\n                parseFloat(selectedProducts[i].unit_price) *\n                parseFloat(selectedProducts[i].quantity);\n        }\n        // totalPrice = totalPrice.toFixed(2);\n        // totalPrice = Math.round(totalPrice * 100) / 100;\n        setTotalPrice(totalPrice);\n    }\n\n    let [vatPrice, setVatPrice] = useState(0.00);\n\n    function findVatPrice() {\n        vatPrice = 0.00;\n        if (totalPrice > 0) {\n            console.log(\"formData.vat_percent:\", formData.vat_percent);\n            //(35.8 / 100) * 10000;\n\n            vatPrice = (parseFloat(formData.vat_percent) / 100) * (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount));\n            console.log(\"vatPrice:\", vatPrice);\n        }\n        setVatPrice(vatPrice);\n    }\n\n    let [netTotal, setNetTotal] = useState(0.00);\n\n    function RoundFloat(val, precision) {\n        var ratio = Math.pow(10, precision);\n        return Math.round(val * ratio) / ratio;\n    }\n\n    function findNetTotal() {\n        netTotal = 0.00;\n        if (totalPrice > 0) {\n            netTotal = (parseFloat(totalPrice) + parseFloat(formData.shipping_handling_fees) - parseFloat(formData.discount) + parseFloat(vatPrice));\n            netTotal = parseFloat(netTotal);\n        }\n        netTotal = RoundFloat(netTotal, 2);\n        // netTotal = Math.round(netTotal * 100) / 100;\n        setNetTotal(netTotal);\n\n        if (!formData.id) {\n            let method = \"\";\n            if (formData.payments_input[0]) {\n                method = formData.payments_input[0].method;\n            }\n\n            formData.payments_input = [{\n                \"date_str\": formData.date_str,\n                \"amount\": 0.00,\n                \"method\": method,\n                \"deleted\": false,\n            }];\n\n            if (netTotal > 0) {\n                formData.payments_input[0].amount = parseFloat(netTotal.toFixed(2));\n                if (formData.cash_discount) {\n                    formData.payments_input[0].amount = formData.payments_input[0].amount - parseFloat(formData.cash_discount?.toFixed(2));\n                }\n                formData.payments_input[0].amount = parseFloat(formData.payments_input[0].amount.toFixed(2));\n            }\n        }\n\n        /*\n        if (formData.payments_input[0].amount === 0) {\n            formData.payments_input[0].amount = \"\";\n        }\n        */\n        setFormData({ ...formData });\n        validatePaymentAmounts();\n    }\n\n    let [discountPercent, setDiscountPercent] = useState(0.00);\n\n    function findDiscountPercent() {\n        if (formData.discount >= 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            //formData.discount_percent = Math.round(formData.discount_percent * 100) / 100;\n            setFormData({ ...formData });\n        }\n    }\n\n    function findDiscount() {\n        if (formData.discount_percent >= 0 && totalPrice > 0) {\n            formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100));\n            // formData.discount = parseFloat(formData.discount.toFixed(2));\n            setFormData({ ...formData });\n        }\n    }\n\n\n    function reCalculate() {\n        findTotalPrice();\n        if (formData.is_discount_percent) {\n            findDiscount();\n        } else {\n            findDiscountPercent();\n        }\n        findVatPrice();\n        findNetTotal();\n    }\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n    const StoreCreateFormRef = useRef();\n    function openStoreCreateForm() {\n        StoreCreateFormRef.current.open();\n    }\n\n    const CustomerCreateFormRef = useRef();\n    function openCustomerCreateForm() {\n        CustomerCreateFormRef.current.open();\n    }\n\n    const ProductCreateFormRef = useRef();\n    function openProductCreateForm() {\n        ProductCreateFormRef.current.open();\n    }\n\n\n    const UserCreateFormRef = useRef();\n    function openUserCreateForm() {\n        UserCreateFormRef.current.open();\n    }\n\n\n    const SignatureCreateFormRef = useRef();\n    function openSignatureCreateForm() {\n        SignatureCreateFormRef.current.open();\n    }\n\n\n    const ProductDetailsViewRef = useRef();\n    function openProductDetailsView(id) {\n        ProductDetailsViewRef.current.open(id);\n    }\n\n    function addNewPayment() {\n        let date = new Date();\n        if (!formData.id) {\n            date = formData.date_str;\n        }\n\n        formData.payments_input.push({\n            \"date_str\": date,\n            // \"amount\": \"\",\n            \"amount\": 0.00,\n            \"method\": \"\",\n            \"deleted\": false,\n        });\n        setFormData({ ...formData });\n        validatePaymentAmounts();\n        //validatePaymentAmounts((formData.payments_input.filter(payment => !payment.deleted).length - 1));\n    }\n\n    function findTotalPayments() {\n        let totalPayment = 0.00;\n        for (var i = 0; i < formData.payments_input?.length; i++) {\n            if (formData.payments_input[i].amount && !formData.payments_input[i].deleted) {\n                totalPayment += formData.payments_input[i].amount;\n            }\n        }\n\n        totalPaymentAmount = totalPayment;\n        console.log(\"totalPaymentAmount:\", totalPaymentAmount);\n        setTotalPaymentAmount(totalPaymentAmount);\n        console.log(\"totalPayment:\", totalPayment)\n        balanceAmount = (parseFloat(netTotal.toFixed(2)) - parseFloat(parseFloat(formData.cash_discount)?.toFixed(2))) - parseFloat(totalPayment.toFixed(2));\n        balanceAmount = parseFloat(balanceAmount.toFixed(2));\n        setBalanceAmount(balanceAmount);\n\n        if (balanceAmount === parseFloat((parseFloat(netTotal.toFixed(2)) - parseFloat(parseFloat(formData.cash_discount)?.toFixed(2))).toFixed(2))) {\n            paymentStatus = \"not_paid\"\n        } else if (balanceAmount <= 0) {\n            paymentStatus = \"paid\"\n        } else if (balanceAmount > 0) {\n            paymentStatus = \"paid_partially\"\n        }\n\n        setPaymentStatus(paymentStatus);\n\n        return totalPayment;\n    }\n\n    let [totalPaymentAmount, setTotalPaymentAmount] = useState(0.00);\n    let [balanceAmount, setBalanceAmount] = useState(0.00);\n    let [paymentStatus, setPaymentStatus] = useState(\"\");\n\n\n\n    function removePayment(key, validatePayments = false) {\n        formData.payments_input.splice(key, 1);\n        //formData.payments_input[key][\"deleted\"] = true;\n        setFormData({ ...formData });\n        if (validatePayments) {\n            validatePaymentAmounts();\n        }\n        findTotalPayments()\n    }\n\n\n    function validatePaymentAmounts() {\n        console.log(\"validatePaymentAmount: netTotal:\", netTotal)\n        errors[\"cash_discount\"] = \"\";\n        setErrors({ ...errors });\n\n        let haveErrors = false;\n        if (!netTotal) {\n            /*\n            removePayment(0, false);\n            totalPaymentAmount = 0.0;\n            setTotalPaymentAmount(0.00);\n            balanceAmount = 0.00;\n            setBalanceAmount(0.00);\n            paymentStatus = \"\";\n            setPaymentStatus(paymentStatus);\n            */\n            return true;\n        }\n\n\n        if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n            errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toFixed(2).toString();\n            setErrors({ ...errors });\n            haveErrors = true\n            return false;\n        }\n\n        let totalPayment = findTotalPayments();\n\n        // errors[\"payment_date\"] = [];\n        //errors[\"payment_method\"] = [];\n        //errors[\"payment_amount\"] = [];\n        for (var key = 0; key < formData.payments_input.length; key++) {\n            errors[\"payment_amount_\" + key] = \"\";\n            errors[\"payment_date_\" + key] = \"\";\n            errors[\"payment_method_\" + key] = \"\";\n            setErrors({ ...errors });\n\n            if (!formData.payments_input[key].amount) {\n                errors[\"payment_amount_\" + key] = \"Payment amount is required\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            } else if (formData.payments_input[key].amount === 0) {\n                errors[\"payment_amount_\" + key] = \"Amount should be greater than zero\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            }\n\n            if (!formData.payments_input[key].date_str) {\n                errors[\"payment_date_\" + key] = \"Payment date is required\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            } /* else if ((new Date(formData.payments_input[key].date_str)) < (new Date(formData.date_str))) {\n                errors[\"payment_date_\" + key] = \"Payment date time should be greater than or equal to order date time\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            }*/\n\n            if (!formData.payments_input[key].method) {\n                errors[\"payment_method_\" + key] = \"Payment method is required\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            }\n\n\n            if ((formData.payments_input[key].amount || formData.payments_input[key].amount === 0) && !formData.payments_input[key].deleted) {\n               /* let maxAllowedAmount = (netTotal - formData.cash_discount) - (totalPayment - formData.payments_input[key].amount);\n\n                if (maxAllowedAmount < 0) {\n                    maxAllowedAmount = 0;\n                }\n\n                /*\n                \n                if (maxAllowedAmount === 0) {\n                    errors[\"payment_amount_\" + key] = \"Total amount should not exceed \" + (netTotal - formData.cash_discount).toFixed(2).toString() + \", Please delete this payment\";\n                    setErrors({ ...errors });\n                    haveErrors = true;\n                } else if (formData.payments_input[key].amount > parseFloat(maxAllowedAmount.toFixed(2))) {\n                    errors[\"payment_amount_\" + key] = \"Amount should not be greater than \" + maxAllowedAmount.toFixed(2);\n                    setErrors({ ...errors });\n                    haveErrors = true;\n                }\n                */\n\n\n            }\n        }\n\n        if (haveErrors) {\n            return false;\n        }\n\n        return true;\n    }\n\n    return (\n        <>\n            {/*\n            <div ref={camref}></div>\n        */}\n\n            {/*\n            <BarcodeScannerComponent\n                width={500}\n                height={500}\n                onUpdate={(err, result) => {\n                    console.log(\"Result:\", result);\n                }}\n            />\n            */}\n\n            <OrderView ref={DetailsViewRef} openCreateForm={props.openCreateForm} />\n            <ProductView ref={ProductDetailsViewRef} />\n            <StoreCreate ref={StoreCreateFormRef} showToastMessage={props.showToastMessage} />\n            <CustomerCreate ref={CustomerCreateFormRef} showToastMessage={props.showToastMessage} />\n            <ProductCreate ref={ProductCreateFormRef} showToastMessage={props.showToastMessage} />\n            <UserCreate ref={UserCreateFormRef} showToastMessage={props.showToastMessage} />\n            <SignatureCreate ref={SignatureCreateFormRef} showToastMessage={props.showToastMessage} />\n\n\n            <Modal show={show} size=\"xl\" fullscreen\n                onHide={handleClose} animation={false} backdrop=\"static\" scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>\n                        {formData.id ? \"Update Sales Order #\" + formData.code : \"Create New Sales Order\"}\n                    </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <OrderPreview />\n                        <Button variant=\"primary\" onClick={handleCreate}>\n                            {isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n                            }\n                        </Button>\n\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    {Object.keys(errors).length > 0 ?\n                        <div>\n                            <ul>\n\n                                {errors && Object.keys(errors).map((key, index) => {\n                                    console.log(\"Key\",key);\n                                    if (Array.isArray(errors[key])) {\n                                        return (errors[key][0] ? <li style={{ color: \"red\" }}>{errors[key]}</li> : \"\");\n                                    } else {\n                                        return (errors[key] ? <li style={{ color: \"red\" }}>{errors[key]}</li> : \"\");\n                                    }\n\n                                })}\n                            </ul></div> : \"\"}\n\n                    <form className=\"row g-3 needs-validation\" onSubmit={e => { e.preventDefault(); handleCreate(e); }} >\n                        {!cookies.get('store_name') ? <div className=\"col-md-6\">\n                            <label className=\"form-label\">Store*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"store_id\"\n                                    labelKey=\"name\"\n                                    isLoading={isStoresLoading}\n                                    isInvalid={errors.store_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.store_id = \"\";\n                                        errors[\"product_id\"] = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.store_id = \"Invalid Store selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedStores([]);\n                                            return;\n                                        }\n                                        formData.store_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        console.log(\"formData.store_id:\", formData.store_id);\n                                        selectedStores = selectedItems;\n                                        setSelectedStores([...selectedItems]);\n\n                                        if (formData.store_id) {\n                                            if (selectedProduct[0] && selectedProduct[0].product_stores && selectedProduct[0].quantity) {\n                                                let stock = 0;\n                                                if (selectedProduct[0].product_stores) {\n                                                    //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n                                                    if (selectedProduct[0].product_stores[formData.store_id]) {\n                                                        stock = selectedProduct[0].product_stores[formData.store_id].stock\n                                                    }\n                                                }\n\n                                                if (stock < parseFloat(selectedProduct[0].quantity)) {\n                                                    if (selectedStores[0]) {\n                                                        errors.product_id = \"Stock is only \" + stock + \" in Store: \" + selectedStores[0].name + \" for this product\";\n                                                    } else {\n                                                        errors.product_id = \"Stock is only \" + stock + \" in Selected Store for this product\";\n                                                    }\n\n                                                    setErrors({ ...errors });\n                                                }\n                                            } else if (selectedProduct[0] && selectedProduct[0].product_stores) {\n                                                let stock = 0;\n                                                //stock = GetProductStockInStore(formData.store_id, selectedProduct[0].stores);\n                                                if (selectedProduct[0].product_stores[formData.store_id]) {\n                                                    stock = selectedProduct[0].product_stores[formData.store_id].stock\n                                                }\n\n                                                if (stock === 0) {\n                                                    if (selectedStores[0]) {\n                                                        errors[\"product_id\"] = \"This product is not available in store: \" + selectedStores[0].name;\n                                                    } else {\n                                                        errors[\"product_id\"] = \"This product is not available in selected store.\"\n                                                    }\n                                                    setErrors({ ...errors });\n                                                }\n                                            }\n\n                                            if (selectedProduct[0]) {\n                                                /*\n                                                selectedProduct[0].unit_price = GetProductUnitPriceInStore(\n                                                    formData.store_id,\n                                                    selectedProduct[0].stores\n                                                );\n                                                */\n                                                if (selectedProduct[0].product_stores[formData.store_id]) {\n                                                    selectedProduct[0].unit_price = selectedProduct[0].product_stores[formData.store_id].retail_unit_price;\n                                                }\n\n\n                                                if (!selectedProduct[0].quantity) {\n                                                    selectedProduct[0].quantity = 1;\n                                                }\n                                                setSelectedProduct([...selectedProduct]);\n                                            }\n\n                                        }\n\n                                    }\n                                    }\n                                    options={storeOptions}\n                                    placeholder=\"Select Store\"\n                                    selected={selectedStores}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestStores(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openStoreCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi x-lg\"> </i>\n                                    {errors.store_id}\n                                </div>\n                            </div>\n                        </div> : \"\"}\n\n                        <div className=\"col-md-6\" style={{ border: \"solid 0px\" }}>\n                            <label className=\"form-label\">Customer*</label>\n                            <Typeahead\n                                id=\"customer_id\"\n                                labelKey=\"search_label\"\n                                isLoading={isCustomersLoading}\n                                isInvalid={errors.customer_id ? true : false}\n                                onChange={(selectedItems) => {\n                                    errors.customer_id = \"\";\n                                    setErrors(errors);\n                                    if (selectedItems.length === 0) {\n                                        errors.customer_id = \"Invalid Customer selected\";\n                                        setErrors(errors);\n                                        formData.customer_id = \"\";\n                                        setFormData({ ...formData });\n                                        setSelectedCustomers([]);\n                                        return;\n                                    }\n                                    formData.customer_id = selectedItems[0].id;\n                                    setFormData({ ...formData });\n                                    setSelectedCustomers(selectedItems);\n                                }}\n                                options={customerOptions}\n                                placeholder=\"Type name or mob\"\n                                selected={selectedCustomers}\n                                highlightOnlyResult={true}\n                                onInputChange={(searchTerm, e) => {\n                                    suggestCustomers(searchTerm);\n                                }}\n                            />\n                            <Button hide={true.toString()} onClick={openCustomerCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                            {errors.customer_id && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.customer_id}\n                                </div>\n                            )}\n\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <label className=\"form-label\">Product Barcode Scan</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DebounceInput\n                                    minLength={3}\n                                    debounceTimeout={100}\n                                    placeholder=\"Scan Barcode\"\n                                    className=\"form-control barcode\"\n                                    value={formData.barcode}\n                                    onChange={event => getProductByBarCode(event.target.value)} />\n                                {errors.bar_code && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.bar_code}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <label className=\"form-label\">Date*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"date_str\"\n                                    selected={formData.date_str ? new Date(formData.date_str) : null}\n                                    value={formData.date_str ? format(\n                                        new Date(formData.date_str),\n                                        \"MMMM d, yyyy h:mm aa\"\n                                    ) : null}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                    showTimeSelect\n                                    timeIntervals=\"1\"\n                                    onChange={(value) => {\n                                        console.log(\"Value\", value);\n                                        formData.date_str = value;\n                                        // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n\n                                {errors.date_str && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.date_str}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n\n                        <div className=\"col-md-12\">\n                            <label className=\"form-label\">Product Search*</label>\n                            {/*  \n                            <Form.Check\n                                type=\"switch\"\n                                as=\"input\"\n                                id=\"use_laser_scanner\"\n                                label=\"Use Laser Scanner to Read Barcode\"\n                                onChange={(e) => {\n\n                                    formData.useLaserScanner = !formData.useLaserScanner;\n\n                                    if (formData.useLaserScanner) {\n                                        console.log(\"adding keydown event\");\n                                        document.addEventListener(\"keydown\", keyPress);\n                                    } else {\n                                        console.log(\"removing keydown event\");\n                                        document.removeEventListener(\"keydown\", keyPress);\n                                    }\n\n                                    console.log(\"e.target.value:\", formData.useLaserScanner);\n\n                                    setFormData({ ...formData });\n\n                                }}\n                            />\n                            */}\n\n                            <Typeahead\n                                id=\"product_id\"\n                                size=\"lg\"\n                                labelKey=\"search_label\"\n                                emptyLabel=\"\"\n                                clearButton={true}\n                                open={openProductSearchResult}\n                                isLoading={isProductsLoading}\n                                isInvalid={errors.product_id ? true : false}\n                                onChange={(selectedItems) => {\n                                    if (selectedItems.length === 0) {\n                                        errors[\"product_id\"] = \"Invalid Product selected\";\n                                        setErrors(errors);\n                                        return;\n                                    }\n                                    errors[\"product_id\"] = \"\";\n                                    setErrors({ ...errors });\n\n                                    if (formData.store_id) {\n                                        addProduct(selectedItems[0]);\n\n                                    }\n                                    setOpenProductSearchResult(false);\n                                }}\n                                options={productOptions}\n                                selected={selectedProduct}\n                                placeholder=\"Search By Part No. / Name / Name in Arabic\"\n                                highlightOnlyResult={true}\n                                onInputChange={(searchTerm, e) => {\n                                    suggestProducts(searchTerm);\n                                }}\n                            />\n                            <Button hide={true.toString()} onClick={openProductCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                            {errors.product_id ? (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.product_id}\n                                </div>\n                            ) : \"\"}\n                        </div>\n\n\n\n                        <div className=\"table-responsive\" style={{ overflowX: \"auto\", maxHeight: \"400px\", overflowY: \"auto\" }}>\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <thead>\n                                    <tr className=\"text-center\">\n                                        <th style={{ width: \"3%\" }}>Remove</th>\n                                        <th style={{ width: \"5%\" }}>SI No.</th>\n                                        <th style={{ width: \"10%\" }}>Part No.</th>\n                                        <th style={{ width: \"33%\" }} className=\"text-start\">Name</th>\n                                        <th style={{ width: \"10%\" }} >Purchase Unit Price</th>\n                                        <th style={{ width: \"10%\" }} >Qty</th>\n                                        <th style={{ width: \"10%\" }}>Unit Price</th>\n                                        <th style={{ width: \"32%\" }}>Price</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedProducts.map((product, index) => (\n                                        <tr className=\"text-center\" key={index}>\n                                            <td>\n                                                <div\n                                                    style={{ color: \"red\", cursor: \"pointer\" }}\n                                                    onClick={() => {\n                                                        removeProduct(product);\n                                                    }}\n                                                >\n                                                    <i className=\"bi bi-x-lg\"> </i>\n                                                </div>\n                                            </td>\n                                            <td >{index + 1}</td>\n                                            <td  >{product.part_number}</td>\n                                            <td style={{\n                                                textDecoration: \"underline\",\n                                                color: \"blue\",\n                                                cursor: \"pointer\",\n\n                                            }}\n                                                className=\"text-start\"\n                                                onClick={() => {\n                                                    openProductDetailsView(product.product_id);\n                                                }}>\n                                                {product.name}\n\n                                                {errors[\"product_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        {errors[\"product_\" + index]}\n                                                    </div>\n                                                )}\n                                            </td>\n                                           \n                                            <td>\n\n                                                <div className=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.purchase_unit_price} disabled={!product.disabled} className=\"form-control text-end\"\n\n                                                        placeholder=\"Purchase Unit Price\" onChange={(e) => {\n                                                            errors[\"purchase_unit_price_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            \n                                                            if (!e.target.value) {\n                                                                //errors[\"purchase_unit_price_\" + index] = \"Invalid purchase unit price\";\n                                                                selectedProducts[index].purchase_unit_price = \"\";\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                //setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            \n                                                            if (e.target.value === 0) {\n                                                               // errors[\"purchase_unit_price_\" + index] = \"purchase unit price should be > 0\";\n                                                                selectedProducts[index].purchase_unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                //setErrors({ ...errors });\n                                                                //console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            if(e.target.value){\n                                                                selectedProducts[index].purchase_unit_price = parseFloat(e.target.value);\n                                                                console.log(\"selectedProducts[index].purchase_unit_price:\", selectedProducts[index].purchase_unit_price);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                //reCalculate();\n                                                            }\n                                                          \n\n                                                        }} />\n                                                    {/*<span className=\"input-group-text\" id=\"basic-addon2\"></span>*/}\n                                                </div>\n                                                {errors[\"purchase_unit_price_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"purchase_unit_price_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td >\n\n                                                <div className=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.quantity} className=\"form-control text-end\"\n\n                                                        placeholder=\"Quantity\" onChange={(e) => {\n                                                            errors[\"quantity_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                                                                selectedProducts[index].quantity = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (e.target.value === 0) {\n                                                                errors[\"quantity_\" + index] = \"Quantity should be > 0\";\n                                                                selectedProducts[index].quantity = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            product.quantity = parseFloat(e.target.value);\n                                                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                            reCalculate();\n\n                                                            let stock = 0;\n                                                            if (selectedProducts[index].product_stores) {\n                                                                stock = selectedProducts[index].product_stores[formData.store_id]?.stock;\n                                                                // stock = GetProductStockInStore(formData.store_id, selectedProducts[index].stores);\n                                                            }\n\n                                                            if (stock < parseFloat(e.target.value) && selectedProducts[index].product_stores) {\n                                                                // errors[\"quantity_\" + index] = \" Warning: Stock is only \" + stock + \" in Store: \" + formData.store_name + \" for this product\";\n                                                                errors[\"quantity_\" + index] = \" Warning: Available stock is \" + stock;\n                                                                setErrors({ ...errors });\n                                                                return;\n                                                            }\n\n                                                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                            console.log(\"selectedProducts[index].quantity:\", selectedProducts[index].quantity);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span className=\"input-group-text\" id=\"basic-addon2\">{selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"}</span>\n                                                </div>\n                                                {errors[\"quantity_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        {errors[\"quantity_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td>\n\n                                                <div className=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.unit_price} className=\"form-control text-end\"\n\n                                                        placeholder=\"Unit Price\" onChange={(e) => {\n                                                            errors[\"unit_price_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                                                                selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (e.target.value === 0) {\n                                                                errors[\"unit_price_\" + index] = \"Unit Price should be > 0\";\n                                                                selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                            console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    {/*<span className=\"input-group-text\" id=\"basic-addon2\"></span>*/}\n                                                </div>\n                                                {errors[\"unit_price_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"unit_price_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td className=\"text-end\" >\n                                                <NumberFormat\n                                                    value={(product.unit_price * product.quantity).toFixed(2)}\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    suffix={\" \"}\n                                                    renderText={(value, props) => value}\n                                                />\n                                            </td>\n                                        </tr>\n                                    )).reverse()}\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <tbody>\n                                    <tr>\n\n\n                                        <th colSpan=\"8\" className=\"text-end\">Total</th>\n                                        <td className=\"text-end\" style={{ width: \"200px\" }} >\n                                            <NumberFormat\n                                                value={totalPrice?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" \"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th colSpan=\"8\" className=\"text-end\">\n                                            Shipping & Handling Fees\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <input type=\"number\" style={{ width: \"150px\" }} className=\"text-start\" value={formData.shipping_handling_fees} onChange={(e) => {\n\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.shipping_handling_fees = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"shipping_handling_fees\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.shipping_handling_fees = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"shipping_handling_fees\"] = \"Shipping / Handling Fees should be > 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.shipping_handling_fees = \"\";\n                                                    errors[\"shipping_handling_fees\"] = \"Invalid Shipping / Handling Fees\";\n                                                    setFormData({ ...formData });\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"shipping_handling_fees\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.shipping_handling_fees = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />\n                                            {\" \"}\n                                            {errors.shipping_handling_fees && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.shipping_handling_fees}\n                                                </div>\n                                            )}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th colSpan=\"8\" className=\"text-end\">\n                                            Discount  <input type=\"number\" style={{ width: \"50px\" }} className=\"text-start\" value={formData.discount_percent} onChange={(e) => {\n                                                formData.is_discount_percent = true;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    formData.discount = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount_percent = \"\";\n                                                    formData.discount = 0.00;\n                                                    errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                                                    setFormData({ ...formData });\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount_percent\"] = \"\";\n                                                errors[\"discount\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount_percent = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />{\"%\"}\n                                            {errors.discount_percent && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount_percent}\n                                                </div>\n                                            )}\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <input type=\"number\" style={{ width: \"150px\" }} className=\"text-start\" value={formData.discount} onChange={(e) => {\n                                                formData.is_discount_percent = false;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    formData.discount_percent = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"Discount should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount = \"\";\n                                                    formData.discount_percent = 0.00;\n                                                    errors[\"discount\"] = \"Invalid Discount\";\n                                                    setFormData({ ...formData });\n                                                    reCalculate();\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount\"] = \"\";\n                                                errors[\"discount_percent\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />\n                                            {\" \"}\n                                            {errors.discount && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount}\n                                                </div>\n                                            )}\n                                        </td>\n                                    </tr>\n                                    <tr>\n\n                                        <th colSpan=\"8\" className=\"text-end\"> VAT  <input type=\"number\" className=\"text-center\" style={{ width: \"50px\" }} value={formData.vat_percent} onChange={(e) => {\n                                            console.log(\"Inside onchange vat percent\");\n                                            if (parseFloat(e.target.value) === 0) {\n                                                formData.vat_percent = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                errors[\"vat_percent\"] = \"\";\n                                                setErrors({ ...errors });\n                                                reCalculate();\n                                                return;\n                                            }\n                                            if (parseFloat(e.target.value) < 0) {\n                                                formData.vat_percent = parseFloat(e.target.value);\n                                                vatPrice = 0.00;\n                                                setVatPrice(vatPrice);\n                                                setFormData({ ...formData });\n                                                errors[\"vat_percent\"] = \"Vat percent should be >= 0\";\n                                                setErrors({ ...errors });\n                                                reCalculate();\n                                                return;\n                                            }\n\n\n                                            if (!e.target.value) {\n                                                formData.vat_percent = \"\";\n                                                vatPrice = 0.00;\n                                                setVatPrice(vatPrice);\n                                                //formData.discount_percent = 0.00;\n                                                errors[\"vat_percent\"] = \"Invalid vat percent\";\n                                                setFormData({ ...formData });\n                                                setErrors({ ...errors });\n                                                return;\n                                            }\n                                            errors[\"vat_percent\"] = \"\";\n                                            setErrors({ ...errors });\n\n                                            formData.vat_percent = e.target.value;\n                                            reCalculate();\n                                            setFormData({ ...formData });\n                                            console.log(formData);\n                                        }} />{\"%\"}\n                                            {errors.vat_percent && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.vat_percent}\n                                                </div>\n                                            )}\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <NumberFormat\n                                                value={vatPrice?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" \"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n\n                                        <th colSpan=\"8\" className=\"text-end\">Net Total</th>\n                                        <th className=\"text-end\">\n                                            <NumberFormat\n                                                value={netTotal?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" \"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </th>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                        {/*\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">\n                                Delivered By Signature(Optional)\n                            </label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"delivered_by_signature_id\"\n                                    labelKey=\"name\"\n                                    isLoading={isDeliveredBySignaturesLoading}\n                                    isInvalid={errors.delivered_by_signature_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.delivered_by_signature_id = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.delivered_by_signature_id =\n                                                \"Invalid Signature Selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedDeliveredBySignatures([]);\n                                            return;\n                                        }\n                                        formData.delivered_by_signature_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        setSelectedDeliveredBySignatures(selectedItems);\n                                    }}\n                                    options={deliveredBySignatureOptions}\n                                    placeholder=\"Select Signature\"\n                                    selected={selectedDeliveredBySignatures}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestSignatures(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openSignatureCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                {errors.delivered_by_signature_id ? (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>{\" \"}\n                                        {errors.delivered_by_signature_id}\n                                    </div>\n                                ) : \"\"}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Signature Date(Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"signature_date_str\"\n                                    value={formData.signature_date_str}\n                                    selected={selectedDate}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMM dd yyyy\"\n                                    onChange={(value) => {\n                                        formData.signature_date_str = format(new Date(value), \"MMM dd yyyy\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n\n                                {errors.signature_date_str && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.signature_date_str}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                                */}\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Cash discount</label>\n                            <input type='number' value={formData.cash_discount} className=\"form-control \"\n                                onChange={(e) => {\n                                    errors[\"cash_discount\"] = \"\";\n                                    setErrors({ ...errors });\n                                    if (!e.target.value) {\n                                        formData.cash_discount = e.target.value;\n                                        setFormData({ ...formData });\n                                        validatePaymentAmounts();\n                                        return;\n                                    }\n                                    formData.cash_discount = parseFloat(e.target.value);\n                                    if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n                                        errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toString();\n                                        setErrors({ ...errors });\n                                        return;\n                                    }\n\n                                    setFormData({ ...formData });\n                                    validatePaymentAmounts();\n                                    console.log(formData);\n                                }}\n                            />\n                            {errors.cash_discount && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.cash_discount}\n                                </div>\n                            )}\n                        </div>\n\n                        <div className=\"col-md-8\">\n                            <label className=\"form-label\">Payments Received</label>\n\n                            <div class=\"table-responsive\" style={{ maxWidth: \"900px\" }}>\n                                <Button variant=\"secondary\" style={{ alignContent: \"right\", marginBottom: \"10px\" }} onClick={addNewPayment}>\n                                    Create new payment\n                                </Button>\n                                <table class=\"table table-striped table-sm table-bordered\">\n                                    {formData.payments_input && formData.payments_input.length > 0 &&\n                                        <thead>\n                                            <th>\n                                                Date\n                                            </th>\n                                            <th>\n                                                Amount\n                                            </th>\n                                            <th>\n                                                Payment method\n                                            </th>\n                                            <th>\n                                                Action\n                                            </th>\n                                        </thead>}\n                                    <tbody>\n                                        {formData.payments_input &&\n                                            formData.payments_input.filter(payment => !payment.deleted).map((payment, key) => (\n                                                <tr key={key}>\n                                                    <td style={{ minWidth: \"220px\" }}>\n\n                                                        <DatePicker\n                                                            id=\"payment_date_str\"\n                                                            selected={formData.payments_input[key].date_str ? new Date(formData.payments_input[key].date_str) : null}\n                                                            value={formData.payments_input[key].date_str ? format(\n                                                                new Date(formData.payments_input[key].date_str),\n                                                                \"MMMM d, yyyy h:mm aa\"\n                                                            ) : null}\n                                                            className=\"form-control\"\n                                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                            showTimeSelect\n                                                            timeIntervals=\"1\"\n                                                            onChange={(value) => {\n                                                                console.log(\"Value\", value);\n                                                                formData.payments_input[key].date_str = value;\n                                                                setFormData({ ...formData });\n                                                            }}\n                                                        />\n                                                        {errors[\"payment_date_\" + key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_date_\" + key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"300px\" }}>\n                                                        <input type='number' value={formData.payments_input[key].amount} className=\"form-control \"\n                                                            onChange={(e) => {\n                                                                errors[\"payment_amount_\" + key] = \"\";\n                                                                setErrors({ ...errors });\n\n                                                                if (!e.target.value) {\n                                                                    formData.payments_input[key].amount = e.target.value;\n                                                                    setFormData({ ...formData });\n                                                                    validatePaymentAmounts();\n                                                                    return;\n                                                                }\n\n                                                                formData.payments_input[key].amount = parseFloat(e.target.value);\n\n                                                                validatePaymentAmounts();\n                                                                setFormData({ ...formData });\n                                                                console.log(formData);\n                                                            }}\n                                                        />\n                                                        {errors[\"payment_amount_\" + key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_amount_\" + key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        <select value={formData.payments_input[key].method} className=\"form-control \"\n                                                            onChange={(e) => {\n                                                                // errors[\"payment_method\"] = [];\n                                                                errors[\"payment_method_\" + key] = \"\";\n                                                                setErrors({ ...errors });\n\n                                                                if (!e.target.value) {\n                                                                    errors[\"payment_method_\" + key] = \"Payment method is required\";\n                                                                    setErrors({ ...errors });\n\n                                                                    formData.payments_input[key].method = \"\";\n                                                                    setFormData({ ...formData });\n                                                                    return;\n                                                                }\n\n                                                                // errors[\"payment_method\"] = \"\";\n                                                                //setErrors({ ...errors });\n\n                                                                formData.payments_input[key].method = e.target.value;\n                                                                setFormData({ ...formData });\n                                                                console.log(formData);\n                                                            }}\n                                                        >\n                                                            <option value=\"\">Select</option>\n                                                            <option value=\"cash\">Cash</option>\n                                                            <option value=\"bank_account\">Bank Account / Debit / Credit Card</option>\n                                                            <option value=\"customer_account\">Customer Account</option>\n                                                        </select>\n                                                        {errors[\"payment_method_\" + key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_method_\" + key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        <Button variant=\"danger\" onClick={(event) => {\n                                                            removePayment(key);\n                                                        }}>\n                                                            Remove\n                                                        </Button>\n\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                        <tr>\n                                            <td class=\"text-end\">\n                                                <b>Total</b>\n                                            </td>\n                                            <td><b style={{ marginLeft: \"14px\" }}>{totalPaymentAmount?.toFixed(2)}</b>\n\n                                            </td>\n                                            <td>\n                                                <b style={{ marginLeft: \"12px\", alignSelf: \"end\" }}>Balance: {balanceAmount?.toFixed(2)}</b>\n                                            </td>\n                                            <td colSpan={1}>\n                                                <b>Payment status: </b>\n                                                {paymentStatus == \"paid\" ?\n                                                    <span className=\"badge bg-success\">\n                                                        Paid\n                                                    </span> : \"\"}\n                                                {paymentStatus == \"paid_partially\" ?\n                                                    <span className=\"badge bg-warning\">\n                                                        Paid Partially\n                                                    </span> : \"\"}\n                                                {paymentStatus == \"not_paid\" ?\n                                                    <span className=\"badge bg-danger\">\n                                                        Not Paid\n                                                    </span> : \"\"}\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                      \n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleCreate}>\n                                {isProcessing ? formData.id ? \"Updating....\" : \"Creating..\" : formData.id ? \"Update\" : \"Create\"\n                                }\n                            </Button>\n                        </Modal.Footer>\n                    </form>\n                </Modal.Body>\n\n            </Modal >\n\n\n        </>\n    );\n});\n\nexport default OrderCreate;\n"]},"metadata":{},"sourceType":"module"}