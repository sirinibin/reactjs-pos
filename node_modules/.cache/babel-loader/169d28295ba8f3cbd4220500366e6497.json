{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import Cookies from\"universal-cookie\";import{Typeahead}from\"react-bootstrap-typeahead\";import{format}from\"date-fns\";import DatePicker from\"react-datepicker\";import\"react-datepicker/dist/react-datepicker.css\";import{Button,Spinner,Badge,Modal}from\"react-bootstrap\";import ReactPaginate from\"react-paginate\";import NumberFormat from\"react-number-format\";import PostingIndex from\"./../posting/index.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function AccountIndex(props){var cookies=new Cookies();//Date filter\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showDateRange=_useState2[0],setShowDateRange=_useState2[1];//const selectedDate = new Date();\nvar _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),selectedDate=_useState4[0],setSelectedDate=_useState4[1];var _useState5=useState(new Date()),_useState6=_slicedToArray(_useState5,2),selectedFromDate=_useState6[0],setSelectedFromDate=_useState6[1];var _useState7=useState(new Date()),_useState8=_slicedToArray(_useState7,2),selectedToDate=_useState8[0],setSelectedToDate=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),dateValue=_useState10[0],setDateValue=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),fromDateValue=_useState12[0],setFromDateValue=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),toDateValue=_useState14[0],setToDateValue=_useState14[1];//list\nvar _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),accountList=_useState16[0],setaccountList=_useState16[1];//pagination\nvar _useState17=useState(5),_useState18=_slicedToArray(_useState17,2),pageSize=_useState18[0],setPageSize=_useState18[1];var _useState19=useState(1),_useState20=_slicedToArray(_useState19,2),page=_useState20[0],setPage=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),totalPages=_useState22[0],setTotalPages=_useState22[1];var _useState23=useState(1),_useState24=_slicedToArray(_useState23,2),totalItems=_useState24[0],setTotalItems=_useState24[1];var _useState25=useState(0),_useState26=_slicedToArray(_useState25,2),currentPageItemsCount=_useState26[0],setCurrentPageItemsCount=_useState26[1];var _useState27=useState(0),_useState28=_slicedToArray(_useState27,2),offset=_useState28[0],setOffset=_useState28[1];//Created At filter\nvar _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),showCreatedAtDateRange=_useState30[0],setShowCreatedAtDateRange=_useState30[1];var _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),createdAtValue=_useState32[0],setCreatedAtValue=_useState32[1];var _useState33=useState(\"\"),_useState34=_slicedToArray(_useState33,2),createdAtFromValue=_useState34[0],setCreatedAtFromValue=_useState34[1];var _useState35=useState(\"\"),_useState36=_slicedToArray(_useState35,2),createdAtToValue=_useState36[0],setCreatedAtToValue=_useState36[1];var _useState37=useState(new Date()),_useState38=_slicedToArray(_useState37,2),selectedCreatedAtDate=_useState38[0],setSelectedCreatedAtDate=_useState38[1];var _useState39=useState(new Date()),_useState40=_slicedToArray(_useState39,2),selectedCreatedAtFromDate=_useState40[0],setSelectedCreatedAtFromDate=_useState40[1];var _useState41=useState(new Date()),_useState42=_slicedToArray(_useState41,2),selectedCreatedAtToDate=_useState42[0],setSelectedCreatedAtToDate=_useState42[1];var _useState43=useState(new Date()),_useState44=_slicedToArray(_useState43,2),selectedUpdatedAtDate=_useState44[0],setSelectedUpdatedAtDate=_useState44[1];var _useState45=useState(new Date()),_useState46=_slicedToArray(_useState45,2),selectedUpdatedAtFromDate=_useState46[0],setSelectedUpdatedAtFromDate=_useState46[1];var _useState47=useState(new Date()),_useState48=_slicedToArray(_useState47,2),selectedUpdatedAtToDate=_useState48[0],setSelectedUpdatedAtToDate=_useState48[1];//Updated At filter\nvar _useState49=useState(false),_useState50=_slicedToArray(_useState49,2),showUpdatedAtDateRange=_useState50[0],setShowUpdatedAtDateRange=_useState50[1];var _useState51=useState(\"\"),_useState52=_slicedToArray(_useState51,2),updatedAtValue=_useState52[0],setUpdatedAtValue=_useState52[1];var _useState53=useState(\"\"),_useState54=_slicedToArray(_useState53,2),updatedAtFromValue=_useState54[0],setUpdatedAtFromValue=_useState54[1];var _useState55=useState(\"\"),_useState56=_slicedToArray(_useState55,2),updatedAtToValue=_useState56[0],setUpdatedAtToValue=_useState56[1];//loader flag\nvar _useState57=useState(false),_useState58=_slicedToArray(_useState57,2),isListLoading=_useState58[0],setIsListLoading=_useState58[1];var _useState59=useState(false),_useState60=_slicedToArray(_useState59,2),isRefreshInProcess=_useState60[0],setIsRefreshInProcess=_useState60[1];//Created By Expense Auto Suggestion\nvar _useState61=useState([]),_useState62=_slicedToArray(_useState61,2),expenseOptions=_useState62[0],setExpenseOptions=_useState62[1];var _useState63=useState([]),_useState64=_slicedToArray(_useState63,2),selectedCreatedByExpenses=_useState64[0],setSelectedCreatedByExpenses=_useState64[1];//Created By Expense Auto Suggestion\nvar _useState65=useState([]),_useState66=_slicedToArray(_useState65,2),categoryOptions=_useState66[0],setCategoryOptions=_useState66[1];var _useState67=useState([]),_useState68=_slicedToArray(_useState67,2),selectedExpenseCategories=_useState68[0],setSelectedExpenseCategories=_useState68[1];useEffect(function(){list();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);//Search params\nvar _useState69=useState({}),_useState70=_slicedToArray(_useState69,2),searchParams=_useState70[0],setSearchParams=_useState70[1];var _useState71=useState(\"updated_at\"),_useState72=_slicedToArray(_useState71,2),sortField=_useState72[0],setSortField=_useState72[1];var _useState73=useState(\"-\"),_useState74=_slicedToArray(_useState73,2),sortaccount=_useState74[0],setSortaccount=_useState74[1];var _useState75=useState(0.00),_useState76=_slicedToArray(_useState75,2),debitBalanceTotal=_useState76[0],setDebitBalanceTotal=_useState76[1];var _useState77=useState(0.00),_useState78=_slicedToArray(_useState77,2),creditBalanceTotal=_useState78[0],setCreditBalanceTotal=_useState78[1];function ObjectToSearchQueryParams(object){return Object.keys(object).map(function(key){return\"search[\".concat(key,\"]=\")+object[key];}).join(\"&\");}function searchByFieldValue(field,value){searchParams[field]=value;page=1;setPage(page);list();}function searchByDateField(field,value){if(!value){page=1;searchParams[field]=\"\";setPage(page);list();return;}var d=new Date(value);d=new Date(d.toUTCString());value=format(d,\"MMM dd yyyy\");if(field===\"date_str\"){setDateValue(value);setFromDateValue(\"\");setToDateValue(\"\");searchParams[\"from_date\"]=\"\";searchParams[\"to_date\"]=\"\";searchParams[field]=value;}else if(field===\"from_date\"){setFromDateValue(value);setDateValue(\"\");searchParams[\"date\"]=\"\";searchParams[field]=value;}else if(field===\"to_date\"){setToDateValue(value);setDateValue(\"\");searchParams[\"date\"]=\"\";searchParams[field]=value;}else if(field===\"created_at\"){setCreatedAtValue(value);setCreatedAtFromValue(\"\");setCreatedAtToValue(\"\");searchParams[\"created_at_from\"]=\"\";searchParams[\"created_at_to\"]=\"\";searchParams[field]=value;}else if(field===\"updated_at\"){setUpdatedAtValue(value);setUpdatedAtFromValue(\"\");setUpdatedAtToValue(\"\");searchParams[\"updated_at_from\"]=\"\";searchParams[\"updated_at_to\"]=\"\";searchParams[field]=value;}if(field===\"created_at_from\"){setCreatedAtFromValue(value);setCreatedAtValue(\"\");searchParams[\"created_at\"]=\"\";searchParams[field]=value;}else if(field===\"created_at_to\"){setCreatedAtToValue(value);setCreatedAtValue(\"\");searchParams[\"created_at\"]=\"\";searchParams[field]=value;}if(field===\"updated_at_from\"){setUpdatedAtFromValue(value);setUpdatedAtValue(\"\");searchParams[\"updated_at\"]=\"\";searchParams[field]=value;}else if(field===\"updated_at_to\"){setUpdatedAtToValue(value);setUpdatedAtValue(\"\");searchParams[\"updated_at\"]=\"\";searchParams[field]=value;}page=1;setPage(page);list();}var _useState79=useState([]),_useState80=_slicedToArray(_useState79,2),selectedAccounts=_useState80[0],setSelectedAccounts=_useState80[1];var _useState81=useState({}),_useState82=_slicedToArray(_useState81,2),selectedAccount=_useState82[0],setSelectedAccount=_useState82[1];function searchByMultipleValuesField(field,values){if(field===\"created_by\"){setSelectedCreatedByExpenses(values);}else if(field===\"category_id\"){setSelectedExpenseCategories(values);}else if(field===\"account_id\"){setSelectedAccounts(values);}searchParams[field]=Object.values(values).map(function(model){return model.id;}).join(\",\");page=1;setPage(page);list();}var _useState83=useState(0.00),_useState84=_slicedToArray(_useState83,2),totalExpenses=_useState84[0],setTotalExpenses=_useState84[1];function list(){var requestOptions={method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:cookies.get(\"access_token\")}};var Select=\"select=id,name,type,phone,number,search_label,open,balance,debit_total,credit_total,created_at,updated_at,reference_model,debit_or_credit_balance\";if(cookies.get(\"store_id\")){searchParams.store_id=cookies.get(\"store_id\");}var d=new Date();var diff=d.getTimezoneOffset();searchParams[\"timezone_offset\"]=parseFloat(diff/60);searchParams[\"stats\"]=\"1\";setSearchParams(searchParams);var queryParams=ObjectToSearchQueryParams(searchParams);if(queryParams!==\"\"){queryParams=\"&\"+queryParams;}// console.log(\"queryParams:\", queryParams);\n//queryParams = encodeURIComponent(queryParams);\nsetIsListLoading(true);fetch(\"/v1/account?\"+Select+queryParams+\"&sort=\"+sortaccount+sortField+\"&page=\"+page+\"&limit=\"+pageSize,requestOptions).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var _response$headers$get;var isJson,data,error,pageCount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:isJson=(_response$headers$get=response.headers.get(\"content-type\"))===null||_response$headers$get===void 0?void 0:_response$headers$get.includes(\"application/json\");_context.t0=isJson;if(!_context.t0){_context.next=6;break;}_context.next=5;return response.json();case 5:_context.t0=_context.sent;case 6:data=_context.t0;if(response.ok){_context.next=10;break;}error=data&&data.errors;return _context.abrupt(\"return\",Promise.reject(error));case 10:setIsListLoading(false);setIsRefreshInProcess(false);setaccountList(data.result);pageCount=parseInt((data.total_count+pageSize-1)/pageSize);setTotalPages(pageCount);setTotalItems(data.total_count);setOffset((page-1)*pageSize);setCurrentPageItemsCount(data.result.length);debitBalanceTotal=data.meta.debit_balance_total;setDebitBalanceTotal(debitBalanceTotal);creditBalanceTotal=data.meta.credit_balance_total;setCreditBalanceTotal(creditBalanceTotal);//totalExpenses = data.meta.total;\n//setTotalExpenses(totalExpenses);\ncase 22:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(error){setIsListLoading(false);setIsRefreshInProcess(false);console.log(error);});}function sort(field){sortField=field;setSortField(sortField);sortaccount=sortaccount===\"-\"?\"\":\"-\";setSortaccount(sortaccount);list();}function changePageSize(size){pageSize=parseInt(size);setPageSize(pageSize);list();}function changePage(newPage){page=parseInt(newPage);setPage(page);list();}var _useState85=useState(false),_useState86=_slicedToArray(_useState85,2),showAccountBalanceSheet=_useState86[0],setShowAccountBalanceSheet=_useState86[1];function openBalanceSheetDialogue(account){setSelectedAccount(account);showAccountBalanceSheet=true;setShowAccountBalanceSheet(true);}function handleAccountBalanceSheetClose(){showAccountBalanceSheet=false;setShowAccountBalanceSheet(false);//list();\n}var AccountBalanceSheetRef=useRef();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid p-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"h3\",children:\"Accounts & Trial balances\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:totalItems===0&&/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-start\",children:\"No Accounts to display\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",style:{bexpense:\"solid 0px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"col text-start\",style:{border:\"solid 0px\"},children:/*#__PURE__*/_jsxs(Button,{onClick:function onClick(){setIsRefreshInProcess(true);list();},variant:\"primary\",disabled:isRefreshInProcess,children:[isRefreshInProcess?/*#__PURE__*/_jsx(Spinner,{as:\"span\",animation:\"bexpense\",size:\"sm\",role:\"status\",\"aria-hidden\":true}):/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-refresh\"}),/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col text-center\",children:isListLoading&&/*#__PURE__*/_jsx(Spinner,{animation:\"grow\",variant:\"primary\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col text-end\",children:totalItems>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Size:\\xA0\"}),/*#__PURE__*/_jsxs(\"select\",{value:pageSize,onChange:function onChange(e){changePageSize(e.target.value);},className:\"form-control pull-right\",style:{bexpense:\"solid 1px\",bexpenseColor:\"silver\",width:\"55px\"},children:[/*#__PURE__*/_jsx(\"option\",{value:\"5\",children:\"5\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10\",children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:\"20\",children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:\"40\",children:\"40\"}),/*#__PURE__*/_jsx(\"option\",{value:\"50\",children:\"50\"}),/*#__PURE__*/_jsx(\"option\",{value:\"100\",children:\"100\"}),/*#__PURE__*/_jsx(\"option\",{value:\"200\",children:\"200\"}),/*#__PURE__*/_jsx(\"option\",{value:\"300\",children:\"300\"}),/*#__PURE__*/_jsx(\"option\",{value:\"500\",children:\"500\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1000\",children:\"1000\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1500\",children:\"1500\"})]})]})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",style:{bexpense:\"solid 0px\"},children:totalPages?/*#__PURE__*/_jsx(ReactPaginate,{breakLabel:\"...\",nextLabel:\"next >\",onPageChange:function onPageChange(event){changePage(event.selected+1);},pageRangeDisplayed:5,pageCount:totalPages,previousLabel:\"< previous\",renderOnZeroPageCount:null,className:\"pagination  flex-wrap\",pageClassName:\"page-item\",pageLinkClassName:\"page-link\",activeClassName:\"active\",previousClassName:\"page-item\",nextClassName:\"page-item\",previousLinkClassName:\"page-link\",nextLinkClassName:\"page-link\",forcePage:page-1}):\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:totalItems>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"col text-start\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-start\",children:[\"showing \",offset+1,\"-\",offset+currentPageItemsCount,\" of\",\" \",totalItems]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col text-end\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-end\",children:[\"page \",page,\" of \",totalPages]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",style:{overflowX:\"auto\"},children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped table-sm table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"number\");},children:[\"Account No.\",sortField===\"number\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"number\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"name\");},children:[\"Account Name\",sortField===\"name\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"name\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"balance\");},children:[\"Debit Balance\",sortField===\"balance\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"balance\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"balance\");},children:[\"Credit Balance\",sortField===\"balance\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"balance\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"phone\");},children:[\"Phone\",sortField===\"phone\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-down\"}):null,sortField===\"phone\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"type\");},children:[\"Type\",sortField===\"type\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-down\"}):null,sortField===\"type\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"balance\");},children:[\"Balance\",sortField===\"balance\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"balance\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"open\");},children:[\"Status\",sortField===\"open\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"open\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"reference_model\");},children:[\"Reference model\",sortField===\"reference_model\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up-alt\"}):null,sortField===\"reference_model\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-alpha-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"updated_at\");},children:[\"Updated At\",sortField===\"updated_at\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-down\"}):null,sortField===\"updated_at\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-up\"}):null]})}),/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsxs(\"b\",{style:{textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(){sort(\"created_at\");},children:[\"Created At\",sortField===\"created_at\"&&sortaccount===\"-\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-down\"}):null,sortField===\"created_at\"&&sortaccount===\"\"?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-sort-up\"}):null]})})]})}),/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"number\",onChange:function onChange(e){return searchByFieldValue(\"number\",e.target.value);},className:\"form-control\"})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",onChange:function onChange(e){return searchByFieldValue(\"name\",e.target.value);},className:\"form-control\"})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return searchByFieldValue(\"balance\",e.target.value);},className:\"form-control\"})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return searchByFieldValue(\"balance\",e.target.value);},className:\"form-control\"})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"phone\",onChange:function onChange(e){return searchByFieldValue(\"phone\",e.target.value);},className:\"form-control\"})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){return searchByFieldValue(\"type\",e.target.value);},className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"drawing\",children:\"Drawing\"}),/*#__PURE__*/_jsx(\"option\",{value:\"expense\",children:\"Expense\"}),/*#__PURE__*/_jsx(\"option\",{value:\"asset\",children:\"Asset\"}),/*#__PURE__*/_jsx(\"option\",{value:\"liability\",children:\"Liability\"}),/*#__PURE__*/_jsx(\"option\",{value:\"capital\",children:\"Capital\"}),/*#__PURE__*/_jsx(\"option\",{value:\"revenue\",children:\"Revenue\"})]})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"balance\",onChange:function onChange(e){return searchByFieldValue(\"balance\",e.target.value);},className:\"form-control\"})}),/*#__PURE__*/_jsx(\"th\",{style:{minWidth:\"130px\"},children:/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){return searchByFieldValue(\"open\",e.target.value);},className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"Open\"}),/*#__PURE__*/_jsx(\"option\",{value:\"0\",children:\"Closed\"})]})}),/*#__PURE__*/_jsx(\"th\",{style:{width:\"110px\"},children:/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){return searchByFieldValue(\"reference_model\",e.target.value);},className:\"form-control\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"customer\",children:\"Customer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"vendor\",children:\"Vendor\"}),/*#__PURE__*/_jsx(\"option\",{value:\"investor\",children:\"Investor\"}),/*#__PURE__*/_jsx(\"option\",{value:\"withdrawer\",children:\"Withdrawer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"expense_category\",children:\"Expense Category\"})]})}),/*#__PURE__*/_jsxs(\"th\",{style:{minWidth:\"150px\"},children:[/*#__PURE__*/_jsx(DatePicker,{id:\"updated_at\",value:updatedAtValue,selected:selectedUpdatedAtDate,className:\"form-control\",dateFormat:\"MMM dd yyyy\",onChange:function onChange(date){if(!date){setUpdatedAtValue(\"\");searchByDateField(\"updated_at\",\"\");return;}searchByDateField(\"updated_at\",date);selectedUpdatedAtDate=date;setSelectedUpdatedAtDate(date);}}),/*#__PURE__*/_jsx(\"small\",{style:{color:\"blue\",textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(e){return setShowUpdatedAtDateRange(!showUpdatedAtDateRange);},children:showUpdatedAtDateRange?\"Less..\":\"More..\"}),/*#__PURE__*/_jsx(\"br\",{}),showUpdatedAtDateRange?/*#__PURE__*/_jsxs(\"span\",{className:\"text-left\",children:[\"From:\",\" \",/*#__PURE__*/_jsx(DatePicker,{id:\"updated_at_from\",value:updatedAtFromValue,selected:selectedUpdatedAtFromDate,className:\"form-control\",dateFormat:\"MMM dd yyyy\",onChange:function onChange(date){if(!date){setCreatedAtFromValue(\"\");searchByDateField(\"updated_at_from\",\"\");return;}searchByDateField(\"updated_at_from\",date);selectedUpdatedAtFromDate=date;setSelectedUpdatedAtFromDate(date);}}),\"To:\",\" \",/*#__PURE__*/_jsx(DatePicker,{id:\"updated_at_to\",value:updatedAtToValue,selected:selectedUpdatedAtToDate,className:\"form-control\",dateFormat:\"MMM dd yyyy\",onChange:function onChange(date){if(!date){setUpdatedAtFromValue(\"\");searchByDateField(\"updated_at_to\",\"\");return;}searchByDateField(\"updated_at_to\",date);selectedUpdatedAtToDate=date;setSelectedUpdatedAtToDate(date);}})]}):null]}),/*#__PURE__*/_jsxs(\"th\",{style:{minWidth:\"150px\"},children:[/*#__PURE__*/_jsx(DatePicker,{id:\"created_at\",value:createdAtValue,selected:selectedCreatedAtDate,className:\"form-control\",dateFormat:\"MMM dd yyyy\",onChange:function onChange(date){if(!date){setCreatedAtValue(\"\");searchByDateField(\"created_at\",\"\");return;}searchByDateField(\"created_at\",date);selectedCreatedAtDate=date;setSelectedCreatedAtDate(date);}}),/*#__PURE__*/_jsx(\"small\",{style:{color:\"blue\",textDecoration:\"underline\",cursor:\"pointer\"},onClick:function onClick(e){return setShowCreatedAtDateRange(!showCreatedAtDateRange);},children:showCreatedAtDateRange?\"Less..\":\"More..\"}),/*#__PURE__*/_jsx(\"br\",{}),showCreatedAtDateRange?/*#__PURE__*/_jsxs(\"span\",{className:\"text-left\",children:[\"From:\",\" \",/*#__PURE__*/_jsx(DatePicker,{id:\"created_at_from\",value:createdAtFromValue,selected:selectedCreatedAtFromDate,className:\"form-control\",dateFormat:\"MMM dd yyyy\",onChange:function onChange(date){if(!date){setCreatedAtFromValue(\"\");searchByDateField(\"created_at_from\",\"\");return;}searchByDateField(\"created_at_from\",date);selectedCreatedAtFromDate=date;setSelectedCreatedAtFromDate(date);}}),\"To:\",\" \",/*#__PURE__*/_jsx(DatePicker,{id:\"created_at_to\",value:createdAtToValue,selected:selectedCreatedAtToDate,className:\"form-control\",dateFormat:\"MMM dd yyyy\",onChange:function onChange(date){if(!date){setCreatedAtFromValue(\"\");searchByDateField(\"created_at_to\",\"\");return;}searchByDateField(\"created_at_to\",date);selectedCreatedAtToDate=date;setSelectedCreatedAtToDate(date);}})]}):null]})]})}),/*#__PURE__*/_jsxs(\"tbody\",{className:\"text-center\",children:[accountList&&accountList.map(function(account){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"155px\",maxWidth:\"155px\"},children:account.number}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:/*#__PURE__*/_jsx(Button,{variant:\"link\",onClick:function onClick(){openBalanceSheetDialogue(account);},children:account.name})}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:account.debit_or_credit_balance==\"debit_balance\"?account.balance:\"0\"}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:account.debit_or_credit_balance==\"credit_balance\"?account.balance:\"0\"}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:account.phone}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:account.type}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:/*#__PURE__*/_jsx(Button,{variant:\"link\",onClick:function onClick(){openBalanceSheetDialogue(account);},children:account.balance})}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:account.open?\"Open\":\"Closed\"}),/*#__PURE__*/_jsx(\"td\",{style:{minWidth:\"120px\",maxWidth:\"120px\"},children:account.reference_model}),/*#__PURE__*/_jsx(\"td\",{children:format(new Date(account.updated_at),\"MMM dd yyyy h:mma\")}),/*#__PURE__*/_jsx(\"td\",{children:format(new Date(account.created_at),\"MMM dd yyyy h:mma\")})]},account.id);}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{colSpan:2}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:debitBalanceTotal})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:creditBalanceTotal})}),/*#__PURE__*/_jsx(\"td\",{colSpan:7})]})]})]})}),totalPages?/*#__PURE__*/_jsx(ReactPaginate,{breakLabel:\"...\",nextLabel:\"next >\",onPageChange:function onPageChange(event){changePage(event.selected+1);},pageRangeDisplayed:5,pageCount:totalPages,previousLabel:\"< previous\",renderOnZeroPageCount:null,className:\"pagination  flex-wrap\",pageClassName:\"page-item\",pageLinkClassName:\"page-link\",activeClassName:\"active\",previousClassName:\"page-item\",nextClassName:\"page-item\",previousLinkClassName:\"page-link\",nextLinkClassName:\"page-link\",forcePage:page-1}):\"\"]})})})})]}),/*#__PURE__*/_jsxs(Modal,{show:showAccountBalanceSheet,size:\"xl\",onHide:handleAccountBalanceSheetClose,animation:false,scrollable:true,children:[/*#__PURE__*/_jsxs(Modal.Header,{children:[/*#__PURE__*/_jsxs(Modal.Title,{children:[\"Balance sheet of \",selectedAccount.name+\" A/c (#\"+selectedAccount.number+\")\",\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"col align-self-end text-end\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:handleAccountBalanceSheetClose,\"aria-label\":\"Close\"})})]}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(PostingIndex,{ref:AccountBalanceSheetRef,showToastMessage:props.showToastMessage,account:selectedAccount,refreshAccountList:list})})]})]});}export default AccountIndex;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/account/index.js"],"names":["React","useState","useEffect","useRef","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","Modal","ReactPaginate","NumberFormat","PostingIndex","AccountIndex","props","cookies","showDateRange","setShowDateRange","Date","selectedDate","setSelectedDate","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","accountList","setaccountList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","selectedCreatedAtDate","setSelectedCreatedAtDate","selectedCreatedAtFromDate","setSelectedCreatedAtFromDate","selectedCreatedAtToDate","setSelectedCreatedAtToDate","selectedUpdatedAtDate","setSelectedUpdatedAtDate","selectedUpdatedAtFromDate","setSelectedUpdatedAtFromDate","selectedUpdatedAtToDate","setSelectedUpdatedAtToDate","showUpdatedAtDateRange","setShowUpdatedAtDateRange","updatedAtValue","setUpdatedAtValue","updatedAtFromValue","setUpdatedAtFromValue","updatedAtToValue","setUpdatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","expenseOptions","setExpenseOptions","selectedCreatedByExpenses","setSelectedCreatedByExpenses","categoryOptions","setCategoryOptions","selectedExpenseCategories","setSelectedExpenseCategories","list","searchParams","setSearchParams","sortField","setSortField","sortaccount","setSortaccount","debitBalanceTotal","setDebitBalanceTotal","creditBalanceTotal","setCreditBalanceTotal","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","searchByDateField","d","toUTCString","selectedAccounts","setSelectedAccounts","selectedAccount","setSelectedAccount","searchByMultipleValuesField","values","model","id","totalExpenses","setTotalExpenses","requestOptions","method","headers","Authorization","get","Select","store_id","diff","getTimezoneOffset","parseFloat","queryParams","fetch","then","response","isJson","includes","json","data","ok","error","errors","Promise","reject","result","pageCount","parseInt","total_count","length","meta","debit_balance_total","credit_balance_total","catch","console","log","sort","changePageSize","size","changePage","newPage","showAccountBalanceSheet","setShowAccountBalanceSheet","openBalanceSheetDialogue","account","handleAccountBalanceSheetClose","AccountBalanceSheetRef","bexpense","border","e","target","bexpenseColor","width","event","selected","overflowX","textDecoration","cursor","minWidth","date","color","maxWidth","number","name","debit_or_credit_balance","balance","phone","type","open","reference_model","updated_at","created_at","showToastMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport PostingIndex from \"./../posting/index.js\";\n\nfunction AccountIndex(props) {\n\n    const cookies = new Cookies();\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    //const selectedDate = new Date();\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    const [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //list\n    const [accountList, setaccountList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n    let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n    let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n\n    let [selectedUpdatedAtDate, setSelectedUpdatedAtDate] = useState(new Date());\n    let [selectedUpdatedAtFromDate, setSelectedUpdatedAtFromDate] = useState(new Date());\n    let [selectedUpdatedAtToDate, setSelectedUpdatedAtToDate] = useState(new Date());\n\n    //Updated At filter\n    const [showUpdatedAtDateRange, setShowUpdatedAtDateRange] = useState(false);\n    const [updatedAtValue, setUpdatedAtValue] = useState(\"\");\n    const [updatedAtFromValue, setUpdatedAtFromValue] = useState(\"\");\n    const [updatedAtToValue, setUpdatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Created By Expense Auto Suggestion\n    const [expenseOptions, setExpenseOptions] = useState([]);\n    const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]);\n\n    //Created By Expense Auto Suggestion\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"updated_at\");\n    let [sortaccount, setSortaccount] = useState(\"-\");\n\n    let [debitBalanceTotal, setDebitBalanceTotal] = useState(0.00);\n    let [creditBalanceTotal, setCreditBalanceTotal] = useState(0.00);\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"updated_at\") {\n            setUpdatedAtValue(value);\n            setUpdatedAtFromValue(\"\");\n            setUpdatedAtToValue(\"\");\n            searchParams[\"updated_at_from\"] = \"\";\n            searchParams[\"updated_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n\n\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        if (field === \"updated_at_from\") {\n            setUpdatedAtFromValue(value);\n            setUpdatedAtValue(\"\");\n            searchParams[\"updated_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"updated_at_to\") {\n            setUpdatedAtToValue(value);\n            setUpdatedAtValue(\"\");\n            searchParams[\"updated_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n    const [selectedAccount, setSelectedAccount] = useState({});\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByExpenses(values);\n        } else if (field === \"category_id\") {\n            setSelectedExpenseCategories(values);\n        } else if (field === \"account_id\") {\n            setSelectedAccounts(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,name,type,phone,number,search_label,open,balance,debit_total,credit_total,created_at,updated_at,reference_model,debit_or_credit_balance\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/account?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortaccount +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setaccountList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                debitBalanceTotal = data.meta.debit_balance_total;\n                setDebitBalanceTotal(debitBalanceTotal);\n\n                creditBalanceTotal = data.meta.credit_balance_total;\n                setCreditBalanceTotal(creditBalanceTotal);\n\n\n\n                //totalExpenses = data.meta.total;\n                //setTotalExpenses(totalExpenses);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortaccount = sortaccount === \"-\" ? \"\" : \"-\";\n        setSortaccount(sortaccount);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    let [showAccountBalanceSheet, setShowAccountBalanceSheet] = useState(false);\n\n    function openBalanceSheetDialogue(account) {\n        setSelectedAccount(account);\n        showAccountBalanceSheet = true;\n        setShowAccountBalanceSheet(true);\n    }\n\n    function handleAccountBalanceSheetClose() {\n        showAccountBalanceSheet = false;\n        setShowAccountBalanceSheet(false);\n        //list();\n    }\n    const AccountBalanceSheetRef = useRef();\n\n    return (\n        <>\n            {/*\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    \n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Total: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalExpenses}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" SAR\"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n            </div>\n           */}\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">Accounts & Trial balances</h1>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No Accounts to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ bexpense: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"bexpense\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        bexpense: \"solid 1px\",\n                                                        bexpenseColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\" >\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                    <option value=\"200\">200</option>\n                                                    <option value=\"300\">300</option>\n                                                    <option value=\"500\">500</option>\n                                                    <option value=\"1000\">1000</option>\n                                                    <option value=\"1500\">1500</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ bexpense: \"solid 0px\" }}>\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"number\");\n                                                        }}\n                                                    >\n                                                        Account No.\n                                                        {sortField === \"number\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"number\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"name\");\n                                                        }}\n                                                    >\n                                                        Account Name\n                                                        {sortField === \"name\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"name\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance\");\n                                                        }}\n                                                    >\n                                                        Debit Balance\n                                                        {sortField === \"balance\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance\");\n                                                        }}\n                                                    >\n                                                        Credit Balance\n                                                        {sortField === \"balance\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"phone\");\n                                                        }}\n                                                    >\n                                                        Phone\n                                                        {sortField === \"phone\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"phone\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"type\");\n                                                        }}\n                                                    >\n                                                        Type\n                                                        {sortField === \"type\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"type\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance\");\n                                                        }}\n                                                    >\n                                                        Balance\n                                                        {sortField === \"balance\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"open\");\n                                                        }}\n                                                    >\n                                                        Status\n                                                        {sortField === \"open\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"open\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"reference_model\");\n                                                        }}\n                                                    >\n                                                        Reference model\n                                                        {sortField === \"reference_model\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"reference_model\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"updated_at\");\n                                                        }}\n                                                    >\n                                                        Updated At\n                                                        {sortField === \"updated_at\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"updated_at\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"number\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"number\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"name\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"name\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"phone\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"phone\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <select onChange={(e) =>\n                                                        searchByFieldValue(\"type\", e.target.value)\n                                                    }\n                                                        className=\"form-control\">\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"drawing\">Drawing</option>\n                                                        <option value=\"expense\">Expense</option>\n                                                        <option value=\"asset\">Asset</option>\n                                                        <option value=\"liability\">Liability</option>\n                                                        <option value=\"capital\">Capital</option>\n                                                        <option value=\"revenue\">Revenue</option>\n                                                    </select>\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"balance\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ minWidth: \"130px\" }}>\n                                                    <select onChange={(e) =>\n                                                        searchByFieldValue(\"open\", e.target.value)\n                                                    }\n                                                        className=\"form-control\">\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"1\">Open</option>\n                                                        <option value=\"0\">Closed</option>\n                                                    </select>\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <select onChange={(e) =>\n                                                        searchByFieldValue(\"reference_model\", e.target.value)\n                                                    }\n                                                        className=\"form-control\">\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"customer\">Customer</option>\n                                                        <option value=\"vendor\">Vendor</option>\n                                                        <option value=\"investor\">Investor</option>\n                                                        <option value=\"withdrawer\">Withdrawer</option>\n                                                        <option value=\"expense_category\">Expense Category</option>\n                                                    </select>\n                                                </th>\n\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"updated_at\"\n                                                        value={updatedAtValue}\n                                                        selected={selectedUpdatedAtDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setUpdatedAtValue(\"\");\n                                                                searchByDateField(\"updated_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"updated_at\", date);\n                                                            selectedUpdatedAtDate = date;\n                                                            setSelectedUpdatedAtDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowUpdatedAtDateRange(!showUpdatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showUpdatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showUpdatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"updated_at_from\"\n                                                                value={updatedAtFromValue}\n                                                                selected={selectedUpdatedAtFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"updated_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"updated_at_from\", date);\n                                                                    selectedUpdatedAtFromDate = date;\n                                                                    setSelectedUpdatedAtFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"updated_at_to\"\n                                                                value={updatedAtToValue}\n                                                                selected={selectedUpdatedAtToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setUpdatedAtFromValue(\"\");\n                                                                        searchByDateField(\"updated_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"updated_at_to\", date);\n                                                                    selectedUpdatedAtToDate = date;\n                                                                    setSelectedUpdatedAtToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedCreatedAtDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                            selectedCreatedAtDate = date;\n                                                            setSelectedCreatedAtDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedCreatedAtFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                    selectedCreatedAtFromDate = date;\n                                                                    setSelectedCreatedAtFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedCreatedAtToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                    selectedCreatedAtToDate = date;\n                                                                    setSelectedCreatedAtToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                            {accountList &&\n                                                accountList.map((account) => (\n                                                    <tr key={account.id}>\n                                                        <td style={{ minWidth: \"155px\", maxWidth: \"155px\" }} >{account.number}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openBalanceSheetDialogue(account);\n                                                            }}>\n                                                                {account.name}\n                                                            </Button>\n                                                        </td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.debit_or_credit_balance == \"debit_balance\" ? account.balance : \"0\"}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.debit_or_credit_balance == \"credit_balance\" ? account.balance : \"0\"}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.phone}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.type}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openBalanceSheetDialogue(account);\n                                                            }}>\n                                                                {account.balance}\n                                                            </Button>\n                                                        </td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.open ? \"Open\" : \"Closed\"}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.reference_model}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(account.updated_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(account.created_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                            <tr>\n                                                <td colSpan={2}></td>\n                                                <td><b>{debitBalanceTotal}</b></td>\n                                                <td><b>{creditBalanceTotal}</b></td>\n                                                <td colSpan={7}></td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Modal show={showAccountBalanceSheet} size=\"xl\" onHide={handleAccountBalanceSheetClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Balance sheet of {selectedAccount.name + \" A/c (#\" + selectedAccount.number + \")\"} </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleAccountBalanceSheetClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <PostingIndex ref={AccountBalanceSheetRef} showToastMessage={props.showToastMessage} account={selectedAccount} refreshAccountList={list} />\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default AccountIndex;\n"]},"metadata":{},"sourceType":"module"}