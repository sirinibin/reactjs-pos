{"ast":null,"code":"var _classCallCheck = require(\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * Use the ImageData from a Canvas and flatten the image on a solid background\n */\nvar CanvasFlatten = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function CanvasFlatten() {\n    _classCallCheck(this, CanvasFlatten);\n  }\n\n  _createClass(CanvasFlatten, [{\n    key: \"flatten\",\n    value:\n    /**\n       * Change the image to grayscale\n       *\n       * @param  {object}   image         The imageData of a Canvas 2d context\n       * @param  {array}    background    Three values consisting of the r, g, b of the background\n       * @return {object}                 The resulting imageData\n       *\n       */\n    function flatten(image, background) {\n      for (var i = 0; i < image.data.length; i += 4) {\n        var alpha = image.data[i + 3];\n        var invAlpha = 255 - alpha;\n        image.data[i] = (alpha * image.data[i] + invAlpha * background[0]) / 255;\n        image.data[i + 1] = (alpha * image.data[i + 1] + invAlpha * background[1]) / 255;\n        image.data[i + 2] = (alpha * image.data[i + 2] + invAlpha * background[2]) / 255;\n        image.data[i + 3] = 0xff;\n      }\n\n      return image;\n    }\n  }]);\n\n  return CanvasFlatten;\n}();\n\nmodule.exports = new CanvasFlatten();","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/canvas-flatten/src/canvas-flatten.js"],"names":["CanvasFlatten","image","background","i","data","length","alpha","invAlpha","module","exports"],"mappings":";;;;AAAA;AACA;AACA;IACMA,a;;;;;;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,qBAAQC,KAAR,EAAeC,UAAf,EAA2B;AACzB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAA/B,EAAuCF,CAAC,IAAI,CAA5C,EAA+C;AAC7C,YAAMG,KAAK,GAAGL,KAAK,CAACG,IAAN,CAAWD,CAAC,GAAG,CAAf,CAAd;AACA,YAAMI,QAAQ,GAAG,MAAMD,KAAvB;AAEAL,QAAAA,KAAK,CAACG,IAAN,CAAWD,CAAX,IAAgB,CAACG,KAAK,GAAGL,KAAK,CAACG,IAAN,CAAWD,CAAX,CAAR,GAAwBI,QAAQ,GAAGL,UAAU,CAAC,CAAD,CAA9C,IAAqD,GAArE;AACAD,QAAAA,KAAK,CAACG,IAAN,CAAWD,CAAC,GAAG,CAAf,IAAoB,CAACG,KAAK,GAAGL,KAAK,CAACG,IAAN,CAAWD,CAAC,GAAG,CAAf,CAAR,GAA4BI,QAAQ,GAAGL,UAAU,CAAC,CAAD,CAAlD,IAAyD,GAA7E;AACAD,QAAAA,KAAK,CAACG,IAAN,CAAWD,CAAC,GAAG,CAAf,IAAoB,CAACG,KAAK,GAAGL,KAAK,CAACG,IAAN,CAAWD,CAAC,GAAG,CAAf,CAAR,GAA4BI,QAAQ,GAAGL,UAAU,CAAC,CAAD,CAAlD,IAAyD,GAA7E;AACAD,QAAAA,KAAK,CAACG,IAAN,CAAWD,CAAC,GAAG,CAAf,IAAoB,IAApB;AACD;;AAED,aAAOF,KAAP;AACD;;;;;;AAGHO,MAAM,CAACC,OAAP,GAAiB,IAAIT,aAAJ,EAAjB","sourcesContent":["/**\n * Use the ImageData from a Canvas and flatten the image on a solid background\n */\nclass CanvasFlatten {\n  /**\n     * Change the image to grayscale\n     *\n     * @param  {object}   image         The imageData of a Canvas 2d context\n     * @param  {array}    background    Three values consisting of the r, g, b of the background\n     * @return {object}                 The resulting imageData\n     *\n     */\n  flatten(image, background) {\n    for (let i = 0; i < image.data.length; i += 4) {\n      const alpha = image.data[i + 3];\n      const invAlpha = 255 - alpha;\n\n      image.data[i] = (alpha * image.data[i] + invAlpha * background[0]) / 255;\n      image.data[i + 1] = (alpha * image.data[i + 1] + invAlpha * background[1]) / 255;\n      image.data[i + 2] = (alpha * image.data[i + 2] + invAlpha * background[2]) / 255;\n      image.data[i + 3] = 0xff;\n    }\n\n    return image;\n  }\n}\n\nmodule.exports = new CanvasFlatten();\n"]},"metadata":{},"sourceType":"script"}