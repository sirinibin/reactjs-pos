{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/posting/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport BalanceSheetPrintPreview from './printPreview.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostingIndex = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  var _selectedAccount, _selectedAccount2;\n\n  _s();\n\n  const cookies = new Cookies();\n  let [selectedAccount, setSelectedAccount] = useState(null);\n  let [showAccountBalanceSheet, setShowAccountBalanceSheet] = useState(false);\n\n  function handleAccountBalanceSheetClose() {\n    showAccountBalanceSheet = false;\n    setShowAccountBalanceSheet(false); //list();\n  }\n\n  useImperativeHandle(ref, () => ({\n    open(account) {\n      showAccountBalanceSheet = true;\n      setShowAccountBalanceSheet(true);\n      selectedAccount = account;\n      setSelectedAccount(selectedAccount);\n      list();\n    }\n\n  })); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false); //const selectedDate = new Date();\n\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  const [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //list\n\n  const [postingList, setPostingList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n  const [totalItems, setTotalItems] = useState();\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Created By Expense Auto Suggestion\n\n  const [expenseOptions, setExpenseOptions] = useState([]);\n  const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]); //Created By Expense Auto Suggestion\n\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    moveToLastPage(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [totalPages]);\n\n  function moveToLastPage() {\n    if (totalPages) {\n      sortField = \"posts.date\";\n      setSortField(sortField);\n      sortPosting = \"\";\n      setSortPosting(sortPosting);\n      page = totalPages;\n      setPage(page);\n      list();\n    }\n  } //Search params\n\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"posts.date\");\n  let [sortPosting, setSortPosting] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + object[key];\n    }).join(\"&\");\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      page = 1;\n      searchParams[field] = \"\";\n      setPage(page);\n      list();\n      return;\n    }\n\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    value = format(d, \"MMM dd yyyy\");\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n  const [selectedDebitAccounts, setSelectedDebitAccounts] = useState([]);\n  const [selectedCreditAccounts, setSelectedCreditAccounts] = useState([]);\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByExpenses(values);\n    } else if (field === \"category_id\") {\n      setSelectedExpenseCategories(values);\n    } else if (field === \"account_id\") {\n      setSelectedAccounts(values);\n    } else if (field === \"debit_account_id\") {\n      setSelectedDebitAccounts(values);\n    } else if (field === \"credit_account_id\") {\n      setSelectedCreditAccounts(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  let [totalExpenses, setTotalExpenses] = useState(0.00);\n  let [debitTotal, setDebitTotal] = useState(0.00);\n  let [creditTotal, setCreditTotal] = useState(0.00);\n  let [debitBalance, setDebitBalance] = useState(0.00);\n  let [creditBalance, setCreditBalance] = useState(0.00);\n  let [debitBalanceBoughtDown, setDebitBalanceBoughtDown] = useState(0.00);\n  let [creditBalanceBoughtDown, setCreditBalanceBoughtDown] = useState(0.00);\n  let [allPostings, setAllPostings] = useState([]);\n  let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n  async function GetAllPostings() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,date,store_id,account_id,account_name,account_number,reference_id,reference_model,reference_code,posts,debit_total_credit_total,created_at\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    if (selectedAccount) {\n      searchParams.account_id = selectedAccount.id;\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    console.log(\"Timezone:\", parseFloat(diff / 60));\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    let size = 500;\n    let postings = [];\n    var pageNo = 1; // makeSalesReportFilename();\n\n    for (; true;) {\n      fettingAllRecordsInProgress = true;\n      setFettingAllRecordsInProgress(true);\n      let res = await fetch(\"/v1/posting?\" + Select + queryParams + \"&sort=\" + sortPosting + sortField + \"&page=\" + pageNo + \"&limit=\" + size, requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          const error = data && data.errors;\n          return Promise.reject(error);\n        } // setIsListLoading(false);\n\n\n        if (!data.result || data.result.length === 0) {\n          return [];\n        } // console.log(\"Orders:\", orders);\n\n\n        return data.result;\n      }).catch(error => {\n        console.log(error);\n        return []; //break;\n      });\n\n      if (res.length === 0) {\n        break;\n      }\n\n      postings = postings.concat(res);\n      pageNo++;\n    }\n\n    allPostings = postings;\n    setAllPostings(allPostings);\n    console.log(\"allPostings:\", allPostings);\n    fettingAllRecordsInProgress = false;\n    setFettingAllRecordsInProgress(false);\n  }\n\n  function list() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,date,store_id,account_id,account_name,account_number,reference_id,reference_model,reference_code,posts,debit_total_credit_total,created_at\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    if (selectedAccount) {\n      searchParams.account_id = selectedAccount.id;\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    } // console.log(\"queryParams:\", queryParams);\n    //queryParams = encodeURIComponent(queryParams);\n\n\n    setIsListLoading(true);\n    fetch(\"/v1/posting?\" + Select + queryParams + \"&sort=\" + sortPosting + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setPostingList(data.result);\n      selectedAccount.posts = data.result;\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      debitTotal = data.meta.debit_total;\n      setDebitTotal(debitTotal);\n      creditTotal = data.meta.credit_total;\n      setCreditTotal(creditTotal);\n\n      if (data.meta.debit_balance) {\n        debitBalance = data.meta.debit_balance;\n        setDebitBalance(debitBalance);\n      } else {\n        debitBalance = 0.00;\n        setDebitBalance(0.00);\n      }\n\n      if (data.meta.debit_balance_bought_down) {\n        debitBalanceBoughtDown = data.meta.debit_balance_bought_down;\n        setDebitBalanceBoughtDown(debitBalanceBoughtDown);\n      } else {\n        debitBalanceBoughtDown = 0.00;\n        setDebitBalanceBoughtDown(0.00);\n      }\n\n      if (data.meta.credit_balance_bought_down) {\n        creditBalanceBoughtDown = data.meta.credit_balance_bought_down;\n        setCreditBalanceBoughtDown(creditBalanceBoughtDown);\n      } else {\n        creditBalanceBoughtDown = 0.00;\n        setCreditBalanceBoughtDown(0.00);\n      }\n\n      if (data.meta.credit_balance) {\n        creditBalance = data.meta.credit_balance;\n        setCreditBalance(creditBalance);\n      } else {\n        creditBalance = 0.00;\n        setCreditBalance(0.00);\n      } //totalExpenses = data.meta.total;\n      //setTotalExpenses(totalExpenses);\n\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortPosting = sortPosting === \"-\" ? \"\" : \"-\";\n    setSortPosting(sortPosting);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const [accountOptions, setAccountOptions] = useState([]);\n\n  async function suggestAccounts(searchTerm) {\n    console.log(\"Inside handle suggestAccounts\");\n    var params = {\n      search: searchTerm\n    };\n\n    if (cookies.get(\"store_id\")) {\n      params.store_id = cookies.get(\"store_id\");\n    }\n\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = `&${queryString}`;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,number,search_label,open,balance,debit_total,credit_total\";\n    let result = await fetch(`/v1/account?${Select}${queryString}`, requestOptions);\n    let data = await result.json();\n    setAccountOptions(data.result);\n  }\n\n  const PreviewRef = useRef();\n\n  async function openPreview(account) {\n    console.log(\"Opening account: \", account);\n    await GetAllPostings();\n    account.posts = allPostings;\n    account.debitBalance = debitBalance;\n    account.creditBalance = creditBalance;\n    account.debitBalanceBoughtDown = debitBalanceBoughtDown;\n    account.creditBalanceBoughtDown = creditBalanceBoughtDown;\n    account.creditTotal = creditTotal;\n    account.debitTotal = debitTotal;\n    console.log(\" account.posts\", account.posts);\n    console.log(\"opening\");\n    account.dateRangeStr = \"\";\n    account.dateValue = dateValue;\n    account.fromDateValue = fromDateValue;\n    account.toDateValue = toDateValue;\n    /*\n    if (dateValue) {\n        account.dateRangeStr = \"Date: \" + format(new Date(dateValue), \"MMM dd yyyy h:mma\")\n    } else if (fromDateValue && toDateValue) {\n        account.dateRangeStr = \"Date From: \" + format(new Date(fromDateValue), \"MMM dd yyyy h:mma\") + \" To:\" + format(new Date(toDateValue), \"MMM dd yyyy h:mma\")\n    } else if (fromDateValue) {\n        account.dateRangeStr = \"Date From: \" + format(new Date(fromDateValue), \"MMM dd yyyy h:mma\")\n    } else if (toDateValue) {\n        account.dateRangeStr = \"Date Upto: \" + format(new Date(toDateValue), \"MMM dd yyyy h:mma\")\n    }\n    */\n\n    PreviewRef.current.open(account);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BalanceSheetPrintPreview, {\n      ref: PreviewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAccountBalanceSheet,\n      size: \"xl\",\n      onHide: handleAccountBalanceSheetClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Balance sheet of \", ((_selectedAccount = selectedAccount) === null || _selectedAccount === void 0 ? void 0 : _selectedAccount.name) + \" A/c (#\" + ((_selectedAccount2 = selectedAccount) === null || _selectedAccount2 === void 0 ? void 0 : _selectedAccount2.number) + \")\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              openPreview(selectedAccount);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-display\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this), \" Print Preview\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleAccountBalanceSheetClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"h3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-start\",\n                        children: \"No postings to display\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 606,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 605,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    style: {\n                      bexpense: \"solid 0px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-start\",\n                      style: {\n                        border: \"solid 0px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          setIsRefreshInProcess(true);\n                          list();\n                        },\n                        variant: \"primary\",\n                        disabled: isRefreshInProcess,\n                        children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                          as: \"span\",\n                          animation: \"bexpense\",\n                          size: \"sm\",\n                          role: \"status\",\n                          \"aria-hidden\": true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 621,\n                          columnNumber: 57\n                        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-refresh\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 629,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"visually-hidden\",\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 631,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 612,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-center\",\n                      children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                        animation: \"grow\",\n                        variant: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 636,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 634,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-end\",\n                      children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-label\",\n                          children: \"Size:\\xA0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 642,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: pageSize,\n                          onChange: e => {\n                            changePageSize(e.target.value);\n                          },\n                          className: \"form-control pull-right\",\n                          style: {\n                            bexpense: \"solid 1px\",\n                            bexpenseColor: \"silver\",\n                            width: \"55px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"5\",\n                            children: \"5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 655,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"10\",\n                            children: \"10\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 658,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"20\",\n                            children: \"20\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 661,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"40\",\n                            children: \"40\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 662,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"50\",\n                            children: \"50\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 663,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"100\",\n                            children: \"100\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 664,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"200\",\n                            children: \"200\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 665,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"300\",\n                            children: \"300\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 666,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"500\",\n                            children: \"500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 667,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1000\",\n                            children: \"1000\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 668,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1500\",\n                            children: \"1500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 669,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 643,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      style: {\n                        bexpense: \"solid 0px\"\n                      },\n                      children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                        breakLabel: \"...\",\n                        nextLabel: \"next >\",\n                        onPageChange: event => {\n                          changePage(event.selected + 1);\n                        },\n                        pageRangeDisplayed: 5,\n                        pageCount: totalPages,\n                        previousLabel: \"< previous\",\n                        renderOnZeroPageCount: null,\n                        className: \"pagination  flex-wrap\",\n                        pageClassName: \"page-item\",\n                        pageLinkClassName: \"page-link\",\n                        activeClassName: \"active\",\n                        previousClassName: \"page-item\",\n                        nextClassName: \"page-item\",\n                        previousLinkClassName: \"page-link\",\n                        nextLinkClassName: \"page-link\",\n                        forcePage: page - 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 679,\n                        columnNumber: 63\n                      }, this) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 678,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col text-start\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-start\",\n                          children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 705,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 704,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col text-end\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-end\",\n                          children: [\"page \", page, \" of \", totalPages]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 712,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 711,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    style: {\n                      overflowX: \"auto\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-striped table-sm table-bordered\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"posts.date\");\n                              },\n                              children: [\"Date\", sortField === \"posts.date\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-down\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 759,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"posts.date\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 762,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 748,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 747,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"posts.debit\");\n                              },\n                              children: [\"Debit\", sortField === \"posts.debit\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 779,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"posts.debit\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 782,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 768,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 767,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"posts.credit\");\n                              },\n                              children: [\"Credit\", sortField === \"posts.credit\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 799,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"posts.credit\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 802,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 788,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 787,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"reference_model\");\n                              },\n                              children: [\"Type\", sortField === \"reference_model\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 818,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"reference_model\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 821,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 807,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 806,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"reference_code\");\n                              },\n                              children: [\"ID\", sortField === \"reference_code\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 838,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"reference_code\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 841,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 827,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 826,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 722,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 721,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            style: {\n                              width: \"80px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                              id: \"date_str\",\n                              value: dateValue,\n                              selected: selectedDate,\n                              className: \"form-control\",\n                              dateFormat: \"MMM dd yyyy\",\n                              onChange: date => {\n                                if (!date) {\n                                  setDateValue(\"\");\n                                  searchByDateField(\"date_str\", \"\");\n                                  return;\n                                }\n\n                                searchByDateField(\"date_str\", date);\n                                selectedDate = date;\n                                setSelectedDate(date);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 899,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                              style: {\n                                color: \"blue\",\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: e => setShowDateRange(!showDateRange),\n                              children: showDateRange ? \"Less..\" : \"More..\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 916,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 926,\n                              columnNumber: 61\n                            }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-left\",\n                              children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                                id: \"from_date\",\n                                value: fromDateValue,\n                                selected: selectedFromDate,\n                                className: \"form-control\",\n                                dateFormat: \"MMM dd yyyy\",\n                                onChange: date => {\n                                  if (!date) {\n                                    setFromDateValue(\"\");\n                                    searchByDateField(\"from_date\", \"\");\n                                    return;\n                                  }\n\n                                  searchByDateField(\"from_date\", date);\n                                  selectedFromDate = date;\n                                  setSelectedFromDate(date);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 931,\n                                columnNumber: 69\n                              }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                                id: \"to_date\",\n                                value: toDateValue,\n                                selected: selectedToDate,\n                                className: \"form-control\",\n                                dateFormat: \"MMM dd yyyy\",\n                                onChange: date => {\n                                  if (!date) {\n                                    setToDateValue(\"\");\n                                    searchByDateField(\"to_date\", \"\");\n                                    return;\n                                  }\n\n                                  searchByDateField(\"to_date\", date);\n                                  selectedToDate = date;\n                                  setSelectedToDate(date);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 949,\n                                columnNumber: 69\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 929,\n                              columnNumber: 65\n                            }, this) : null]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 898,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            style: {\n                              width: \"130px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                              id: \"account_id\",\n                              labelKey: \"search_label\",\n                              onChange: selectedItems => {\n                                searchByMultipleValuesField(\"debit_account_id\", selectedItems);\n                              },\n                              options: accountOptions,\n                              placeholder: \"Debit A/c name / acc no. / phone\",\n                              selected: selectedDebitAccounts,\n                              highlightOnlyResult: true,\n                              onInputChange: (searchTerm, e) => {\n                                suggestAccounts(searchTerm);\n                              },\n                              multiple: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 972,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 990,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"debit\",\n                              placeholder: \"Debit amount\",\n                              onChange: e => searchByFieldValue(\"debit\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 992,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 971,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            style: {\n                              width: \"130px\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                              id: \"account_id\",\n                              labelKey: \"search_label\",\n                              onChange: selectedItems => {\n                                searchByMultipleValuesField(\"credit_account_id\", selectedItems);\n                              },\n                              options: accountOptions,\n                              placeholder: \"Credit A/c name / acc no. / phone\",\n                              selected: selectedCreditAccounts,\n                              highlightOnlyResult: true,\n                              onInputChange: (searchTerm, e) => {\n                                suggestAccounts(searchTerm);\n                              },\n                              multiple: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1003,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1021,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"credit\",\n                              placeholder: \"Credit amount\",\n                              onChange: e => searchByFieldValue(\"credit\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1022,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1002,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            style: {\n                              width: \"80px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"select\", {\n                              className: \"form-control\",\n                              onChange: e => searchByFieldValue(\"reference_model\", e.target.value),\n                              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"\",\n                                children: \"All\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1036,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"sales\",\n                                children: \"Sales\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1037,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"sales_return\",\n                                children: \"Sales Return\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1038,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"purchase\",\n                                children: \"Purchase\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1039,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"purchase_return\",\n                                children: \"Purchase Return\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1040,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"capital\",\n                                children: \"Capital\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1041,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"drawing\",\n                                children: \"Drawing\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1042,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"expense\",\n                                children: \"Expense\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1043,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"customer_deposit\",\n                                children: \"Customer deposit\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1044,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: \"customer_withdrawal\",\n                                children: \"Customer withdrawl\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1045,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1033,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1032,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            style: {\n                              width: \"80px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"reference_code\",\n                              onChange: e => searchByFieldValue(\"reference_code\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1050,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1049,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 873,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 872,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        className: \"text-center\",\n                        children: [selectedAccount && (debitBalanceBoughtDown > 0 || creditBalanceBoughtDown > 0) ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1133,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\",\n                              color: \"red\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: debitBalanceBoughtDown > 0 ? \"To balance b/d \" + debitBalanceBoughtDown : \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1134,\n                              columnNumber: 106\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1134,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\",\n                              color: \"red\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: creditBalanceBoughtDown > 0 ? \"By balance b/d \" + creditBalanceBoughtDown : \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1135,\n                              columnNumber: 106\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1135,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            colSpan: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1136,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1132,\n                          columnNumber: 135\n                        }, this) : \"\", postingList && postingList.map(posting => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            colSpan: 3,\n                            children: posting.posts && posting.posts.map((post, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                              style: {\n                                border: \"solid 1px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                style: {\n                                  border: \"solid 1px\",\n                                  minWidth: \"184px\"\n                                },\n                                children: format(new Date(post.date), \"MMM dd yyyy h:mma\")\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1157,\n                                columnNumber: 81\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                colSpan: 2,\n                                style: {\n                                  border: \"solid 0px\"\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                  style: {\n                                    border: \"solid 0px\",\n                                    borderRight: \"solid 0px\",\n                                    paddingLeft: \"5px\"\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"left\",\n                                      border: \"solid 0px\",\n                                      minWidth: \"162px\"\n                                    },\n                                    children: post.debit_or_credit == \"debit\" ? \"To \" + post.account_name + \" A/c #\" + post.account_number + \" Dr.\" : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1160,\n                                    columnNumber: 89\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"right\",\n                                      border: \"solid 0px\",\n                                      minWidth: \"140px\"\n                                    },\n                                    children: post.debit ? post.debit : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1163,\n                                    columnNumber: 89\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1159,\n                                  columnNumber: 85\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  style: {\n                                    border: \"solid 0px\",\n                                    paddingLeft: \"5px\",\n                                    borderLeft: \"solid 1px\"\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"left\",\n                                      border: \"solid 0px\",\n                                      minWidth: \"193px\"\n                                    },\n                                    children: post.debit_or_credit == \"credit\" ? \"By \" + post.account_name + \" A/c #\" + post.account_number + \"  Cr.\" : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1168,\n                                    columnNumber: 89\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"right\",\n                                      border: \"solid 0px\",\n                                      minWidth: \"105px\"\n                                    },\n                                    children: post.credit ? post.credit : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1171,\n                                    columnNumber: 89\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1167,\n                                  columnNumber: 85\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1158,\n                                columnNumber: 81\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1156,\n                              columnNumber: 77\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1153,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              minWidth: \"155px\",\n                              maxWidth: \"155px\"\n                            },\n                            children: posting.reference_model\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1199,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              minWidth: \"120px\",\n                              maxWidth: \"120px\"\n                            },\n                            children: posting.reference_code\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1200,\n                            columnNumber: 65\n                          }, this)]\n                        }, posting.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1141,\n                          columnNumber: 61\n                        }, this)), selectedAccount && (debitBalance > 0 || creditBalance > 0) ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1206,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\",\n                              color: \"red\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: debitBalance > 0 ? \"To balance c/d \" + debitBalance : \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1207,\n                              columnNumber: 106\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1207,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\",\n                              color: \"red\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: creditBalance > 0 ? \"By balance c/d \" + creditBalance : \"\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1208,\n                              columnNumber: 106\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1208,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            colSpan: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1209,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1205,\n                          columnNumber: 115\n                        }, this) : \"\", selectedAccount ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1212,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: creditTotal > debitTotal ? creditTotal : debitTotal\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1213,\n                              columnNumber: 92\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1213,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              children: creditTotal > debitTotal ? creditTotal : debitTotal\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1214,\n                              columnNumber: 92\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1214,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            colSpan: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1215,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1211,\n                          columnNumber: 72\n                        }, this) : \"\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1131,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 720,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 719,\n                    columnNumber: 41\n                  }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 55\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"8njR2k/YaIrLVcP10uaWEYRZvYw=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = PostingIndex;\nexport default PostingIndex;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostingIndex$forwardRef\");\n$RefreshReg$(_c2, \"PostingIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/posting/index.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","Modal","ReactPaginate","NumberFormat","BalanceSheetPrintPreview","PostingIndex","props","ref","cookies","selectedAccount","setSelectedAccount","showAccountBalanceSheet","setShowAccountBalanceSheet","handleAccountBalanceSheetClose","open","account","list","showDateRange","setShowDateRange","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","postingList","setPostingList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","expenseOptions","setExpenseOptions","selectedCreatedByExpenses","setSelectedCreatedByExpenses","categoryOptions","setCategoryOptions","selectedExpenseCategories","setSelectedExpenseCategories","moveToLastPage","sortField","setSortField","sortPosting","setSortPosting","searchParams","setSearchParams","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","searchByDateField","d","toUTCString","selectedAccounts","setSelectedAccounts","selectedDebitAccounts","setSelectedDebitAccounts","selectedCreditAccounts","setSelectedCreditAccounts","searchByMultipleValuesField","values","model","id","totalExpenses","setTotalExpenses","debitTotal","setDebitTotal","creditTotal","setCreditTotal","debitBalance","setDebitBalance","creditBalance","setCreditBalance","debitBalanceBoughtDown","setDebitBalanceBoughtDown","creditBalanceBoughtDown","setCreditBalanceBoughtDown","allPostings","setAllPostings","fettingAllRecordsInProgress","setFettingAllRecordsInProgress","GetAllPostings","requestOptions","method","headers","Authorization","get","Select","store_id","account_id","diff","getTimezoneOffset","console","log","parseFloat","queryParams","size","postings","pageNo","res","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","length","catch","concat","posts","pageCount","parseInt","total_count","meta","debit_total","credit_total","debit_balance","debit_balance_bought_down","credit_balance_bought_down","credit_balance","sort","changePageSize","changePage","newPage","accountOptions","setAccountOptions","suggestAccounts","searchTerm","params","search","queryString","PreviewRef","openPreview","dateRangeStr","current","name","number","bexpense","border","e","target","bexpenseColor","width","event","selected","overflowX","textDecoration","cursor","date","color","selectedItems","textAlign","posting","post","minWidth","borderRight","paddingLeft","debit_or_credit","account_name","account_number","debit","borderLeft","credit","maxWidth","reference_model","reference_code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport BalanceSheetPrintPreview from './printPreview.js';\n\nconst PostingIndex = forwardRef((props, ref) => {\n\n    const cookies = new Cookies();\n\n    let [selectedAccount, setSelectedAccount] = useState(null);\n    let [showAccountBalanceSheet, setShowAccountBalanceSheet] = useState(false);\n    function handleAccountBalanceSheetClose() {\n        showAccountBalanceSheet = false;\n        setShowAccountBalanceSheet(false);\n        //list();\n    }\n\n    useImperativeHandle(ref, () => ({\n        open(account) {\n            showAccountBalanceSheet = true;\n            setShowAccountBalanceSheet(true);\n            selectedAccount = account;\n            setSelectedAccount(selectedAccount);\n            list();\n        },\n    }));\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    //const selectedDate = new Date();\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    const [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //list\n    const [postingList, setPostingList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(null);\n    const [totalItems, setTotalItems] = useState();\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Created By Expense Auto Suggestion\n    const [expenseOptions, setExpenseOptions] = useState([]);\n    const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]);\n\n    //Created By Expense Auto Suggestion\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        moveToLastPage();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [totalPages]);\n\n\n    function moveToLastPage() {\n        if (totalPages) {\n            sortField = \"posts.date\"\n            setSortField(sortField)\n            sortPosting = \"\"\n            setSortPosting(sortPosting)\n            page = totalPages;\n            setPage(page);\n            list();\n        }\n    }\n\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"posts.date\");\n    let [sortPosting, setSortPosting] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n    const [selectedDebitAccounts, setSelectedDebitAccounts] = useState([]);\n    const [selectedCreditAccounts, setSelectedCreditAccounts] = useState([]);\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByExpenses(values);\n        } else if (field === \"category_id\") {\n            setSelectedExpenseCategories(values);\n        } else if (field === \"account_id\") {\n            setSelectedAccounts(values);\n        } else if (field === \"debit_account_id\") {\n            setSelectedDebitAccounts(values);\n        } else if (field === \"credit_account_id\") {\n            setSelectedCreditAccounts(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n    let [debitTotal, setDebitTotal] = useState(0.00);\n    let [creditTotal, setCreditTotal] = useState(0.00);\n\n    let [debitBalance, setDebitBalance] = useState(0.00);\n    let [creditBalance, setCreditBalance] = useState(0.00);\n\n    let [debitBalanceBoughtDown, setDebitBalanceBoughtDown] = useState(0.00);\n    let [creditBalanceBoughtDown, setCreditBalanceBoughtDown] = useState(0.00);\n\n    let [allPostings, setAllPostings] = useState([]);\n    let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n    async function GetAllPostings() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,date,store_id,account_id,account_name,account_number,reference_id,reference_model,reference_code,posts,debit_total_credit_total,created_at\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        if (selectedAccount) {\n            searchParams.account_id = selectedAccount.id;\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        console.log(\"Timezone:\", parseFloat(diff / 60));\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        let size = 500;\n\n        let postings = [];\n        var pageNo = 1;\n\n        // makeSalesReportFilename();\n\n        for (; true;) {\n\n            fettingAllRecordsInProgress = true;\n            setFettingAllRecordsInProgress(true);\n            let res = await fetch(\n                \"/v1/posting?\" +\n                Select +\n                queryParams +\n                \"&sort=\" +\n                sortPosting +\n                sortField +\n                \"&page=\" +\n                pageNo +\n                \"&limit=\" +\n                size,\n                requestOptions\n            )\n                .then(async (response) => {\n                    const isJson = response.headers\n                        .get(\"content-type\")\n                        ?.includes(\"application/json\");\n                    const data = isJson && (await response.json());\n\n                    // check for error response\n                    if (!response.ok) {\n                        const error = data && data.errors;\n                        return Promise.reject(error);\n                    }\n\n                    // setIsListLoading(false);\n                    if (!data.result || data.result.length === 0) {\n                        return [];\n                    }\n\n\n                    // console.log(\"Orders:\", orders);\n\n                    return data.result;\n\n\n                })\n                .catch((error) => {\n                    console.log(error);\n                    return [];\n                    //break;\n\n                });\n            if (res.length === 0) {\n                break;\n            }\n            postings = postings.concat(res);\n            pageNo++;\n        }\n\n        allPostings = postings;\n        setAllPostings(allPostings);\n\n        console.log(\"allPostings:\", allPostings);\n        fettingAllRecordsInProgress = false;\n        setFettingAllRecordsInProgress(false);\n\n    }\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,date,store_id,account_id,account_name,account_number,reference_id,reference_model,reference_code,posts,debit_total_credit_total,created_at\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        if (selectedAccount) {\n            searchParams.account_id = selectedAccount.id;\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/posting?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortPosting +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setPostingList(data.result);\n                selectedAccount.posts = data.result;\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                debitTotal = data.meta.debit_total;\n                setDebitTotal(debitTotal);\n\n                creditTotal = data.meta.credit_total;\n                setCreditTotal(creditTotal);\n\n\n\n                if (data.meta.debit_balance) {\n                    debitBalance = data.meta.debit_balance;\n                    setDebitBalance(debitBalance);\n                } else {\n                    debitBalance = 0.00;\n                    setDebitBalance(0.00);\n                }\n\n                if (data.meta.debit_balance_bought_down) {\n                    debitBalanceBoughtDown = data.meta.debit_balance_bought_down;\n                    setDebitBalanceBoughtDown(debitBalanceBoughtDown);\n                } else {\n                    debitBalanceBoughtDown = 0.00;\n                    setDebitBalanceBoughtDown(0.00);\n                }\n\n                if (data.meta.credit_balance_bought_down) {\n                    creditBalanceBoughtDown = data.meta.credit_balance_bought_down;\n                    setCreditBalanceBoughtDown(creditBalanceBoughtDown);\n                } else {\n                    creditBalanceBoughtDown = 0.00;\n                    setCreditBalanceBoughtDown(0.00);\n                }\n\n                if (data.meta.credit_balance) {\n                    creditBalance = data.meta.credit_balance;\n                    setCreditBalance(creditBalance);\n                } else {\n                    creditBalance = 0.00;\n                    setCreditBalance(0.00);\n                }\n\n\n                //totalExpenses = data.meta.total;\n                //setTotalExpenses(totalExpenses);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortPosting = sortPosting === \"-\" ? \"\" : \"-\";\n        setSortPosting(sortPosting);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    const [accountOptions, setAccountOptions] = useState([]);\n\n    async function suggestAccounts(searchTerm) {\n        console.log(\"Inside handle suggestAccounts\");\n\n        var params = {\n            search: searchTerm,\n        };\n\n        if (cookies.get(\"store_id\")) {\n            params.store_id = cookies.get(\"store_id\");\n        }\n\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = `&${queryString}`;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,number,search_label,open,balance,debit_total,credit_total\";\n        let result = await fetch(\n            `/v1/account?${Select}${queryString}`,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setAccountOptions(data.result);\n    }\n\n    const PreviewRef = useRef();\n    async function openPreview(account) {\n        console.log(\"Opening account: \", account);\n        await GetAllPostings();\n        account.posts = allPostings;\n        account.debitBalance = debitBalance;\n        account.creditBalance = creditBalance;\n        account.debitBalanceBoughtDown = debitBalanceBoughtDown;\n        account.creditBalanceBoughtDown = creditBalanceBoughtDown;\n        account.creditTotal = creditTotal;\n        account.debitTotal = debitTotal;\n\n        console.log(\" account.posts\", account.posts);\n        console.log(\"opening\")\n\n        account.dateRangeStr=\"\";\n\n        account.dateValue=dateValue;\n        account.fromDateValue=fromDateValue;\n        account.toDateValue=toDateValue;\n       \n\n        /*\n        if (dateValue) {\n            account.dateRangeStr = \"Date: \" + format(new Date(dateValue), \"MMM dd yyyy h:mma\")\n        } else if (fromDateValue && toDateValue) {\n            account.dateRangeStr = \"Date From: \" + format(new Date(fromDateValue), \"MMM dd yyyy h:mma\") + \" To:\" + format(new Date(toDateValue), \"MMM dd yyyy h:mma\")\n        } else if (fromDateValue) {\n            account.dateRangeStr = \"Date From: \" + format(new Date(fromDateValue), \"MMM dd yyyy h:mma\")\n        } else if (toDateValue) {\n            account.dateRangeStr = \"Date Upto: \" + format(new Date(toDateValue), \"MMM dd yyyy h:mma\")\n        }\n        */\n\n        PreviewRef.current.open(account);\n    }\n\n\n    return (\n        <>\n            <BalanceSheetPrintPreview ref={PreviewRef} />\n            <Modal show={showAccountBalanceSheet} size=\"xl\" onHide={handleAccountBalanceSheetClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Balance sheet of {selectedAccount?.name + \" A/c (#\" + selectedAccount?.number + \")\"} </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        &nbsp;&nbsp;\n                        <Button variant=\"primary\" onClick={() => {\n                            openPreview(selectedAccount);\n                        }} >\n                            <i className=\"bi bi-display\"></i> Print Preview\n                        </Button>\n\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleAccountBalanceSheetClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n\n\n                    {/*\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    \n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Total: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalExpenses}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" SAR\"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n            </div>\n           */}\n\n                    <div className=\"container-fluid p-0\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1 className=\"h3\">{/*Postings*/}</h1>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"card\">\n                                    {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            {totalItems === 0 && (\n                                                <div className=\"col\">\n                                                    <p className=\"text-start\">No postings to display</p>\n                                                </div>\n                                            )}\n                                        </div>\n                                        <div className=\"row\" style={{ bexpense: \"solid 0px\" }}>\n                                            <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        setIsRefreshInProcess(true);\n                                                        list();\n                                                    }}\n                                                    variant=\"primary\"\n                                                    disabled={isRefreshInProcess}\n                                                >\n                                                    {isRefreshInProcess ? (\n                                                        <Spinner\n                                                            as=\"span\"\n                                                            animation=\"bexpense\"\n                                                            size=\"sm\"\n                                                            role=\"status\"\n                                                            aria-hidden={true}\n                                                        />\n                                                    ) : (\n                                                        <i className=\"fa fa-refresh\"></i>\n                                                    )}\n                                                    <span className=\"visually-hidden\">Loading...</span>\n                                                </Button>\n                                            </div>\n                                            <div className=\"col text-center\">\n                                                {isListLoading && (\n                                                    <Spinner animation=\"grow\" variant=\"primary\" />\n                                                )}\n                                            </div>\n                                            <div className=\"col text-end\">\n                                                {totalItems > 0 && (\n                                                    <>\n                                                        <label className=\"form-label\">Size:&nbsp;</label>\n                                                        <select\n                                                            value={pageSize}\n                                                            onChange={(e) => {\n                                                                changePageSize(e.target.value);\n                                                            }}\n                                                            className=\"form-control pull-right\"\n                                                            style={{\n                                                                bexpense: \"solid 1px\",\n                                                                bexpenseColor: \"silver\",\n                                                                width: \"55px\",\n                                                            }}\n                                                        >\n                                                            <option value=\"5\">\n                                                                5\n                                                            </option>\n                                                            <option value=\"10\" >\n                                                                10\n                                                            </option>\n                                                            <option value=\"20\">20</option>\n                                                            <option value=\"40\">40</option>\n                                                            <option value=\"50\">50</option>\n                                                            <option value=\"100\">100</option>\n                                                            <option value=\"200\">200</option>\n                                                            <option value=\"300\">300</option>\n                                                            <option value=\"500\">500</option>\n                                                            <option value=\"1000\">1000</option>\n                                                            <option value=\"1500\">1500</option>\n                                                        </select>\n                                                    </>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <br />\n                                        <div className=\"row\">\n                                            <div className=\"col\" style={{ bexpense: \"solid 0px\" }}>\n                                                {totalPages ? <ReactPaginate\n                                                    breakLabel=\"...\"\n                                                    nextLabel=\"next >\"\n                                                    onPageChange={(event) => {\n                                                        changePage(event.selected + 1);\n                                                    }}\n                                                    pageRangeDisplayed={5}\n                                                    pageCount={totalPages}\n                                                    previousLabel=\"< previous\"\n                                                    renderOnZeroPageCount={null}\n                                                    className=\"pagination  flex-wrap\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    activeClassName=\"active\"\n                                                    previousClassName=\"page-item\"\n                                                    nextClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    forcePage={page - 1}\n                                                /> : \"\"}\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            {totalItems > 0 && (\n                                                <>\n                                                    <div className=\"col text-start\">\n                                                        <p className=\"text-start\">\n                                                            showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                            {totalItems}\n                                                        </p>\n                                                    </div>\n\n                                                    <div className=\"col text-end\">\n                                                        <p className=\"text-end\">\n                                                            page {page} of {totalPages}\n                                                        </p>\n                                                    </div>\n                                                </>\n                                            )}\n                                        </div>\n                                        <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                            <table className=\"table table-striped table-sm table-bordered\">\n                                                <thead>\n                                                    <tr className=\"text-center\">\n\n\n\n                                                        {/*\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"account_name\");\n                                                        }}\n                                                    >\n                                                        Account\n                                                        {sortField === \"account_name\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"account_name\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                        */}\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"posts.date\");\n                                                                }}\n                                                            >\n                                                                Date\n                                                                {sortField === \"posts.date\" && sortPosting === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-down\"></i>\n                                                                ) : null}\n                                                                {sortField === \"posts.date\" && sortPosting === \"\" ? (\n                                                                    <i className=\"bi bi-sort-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"posts.debit\");\n                                                                }}\n                                                            >\n                                                                Debit\n                                                                {sortField === \"posts.debit\" && sortPosting === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"posts.debit\" && sortPosting === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"posts.credit\");\n                                                                }}\n                                                            >\n                                                                Credit\n                                                                {sortField === \"posts.credit\" && sortPosting === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"posts.credit\" && sortPosting === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"reference_model\");\n                                                                }}\n                                                            >\n                                                                Type\n                                                                {sortField === \"reference_model\" && sortPosting === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"reference_model\" && sortPosting === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"reference_code\");\n                                                                }}\n                                                            >\n                                                                ID\n                                                                {sortField === \"reference_code\" && sortPosting === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"reference_code\" && sortPosting === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n\n                                                        {/*\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                        */}\n\n                                                    </tr>\n                                                </thead>\n\n                                                <thead>\n                                                    <tr className=\"text-center\">\n\n                                                        {/*\n                                                <th style={{ minWidth: \"250px\" }}>\n                                                    <Typeahead\n                                                        id=\"account_id\"\n                                                        labelKey=\"search_label\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"account_id\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={accountOptions}\n                                                        placeholder=\"Name / mob / acc no.\"\n                                                        selected={selectedAccounts}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestAccounts(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                    */}\n\n                                                        <th style={{ width: \"80px\" }}>\n                                                            <DatePicker\n                                                                id=\"date_str\"\n                                                                value={dateValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setDateValue(\"\");\n                                                                        searchByDateField(\"date_str\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"date_str\", date);\n                                                                    selectedDate = date;\n                                                                    setSelectedDate(date);\n                                                                }}\n                                                            />\n                                                            <small\n                                                                style={{\n                                                                    color: \"blue\",\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={(e) => setShowDateRange(!showDateRange)}\n                                                            >\n                                                                {showDateRange ? \"Less..\" : \"More..\"}\n                                                            </small>\n                                                            <br />\n\n                                                            {showDateRange ? (\n                                                                <span className=\"text-left\">\n                                                                    From:{\" \"}\n                                                                    <DatePicker\n                                                                        id=\"from_date\"\n                                                                        value={fromDateValue}\n                                                                        selected={selectedFromDate}\n                                                                        className=\"form-control\"\n                                                                        dateFormat=\"MMM dd yyyy\"\n                                                                        onChange={(date) => {\n                                                                            if (!date) {\n                                                                                setFromDateValue(\"\");\n                                                                                searchByDateField(\"from_date\", \"\");\n                                                                                return;\n                                                                            }\n                                                                            searchByDateField(\"from_date\", date);\n                                                                            selectedFromDate = date;\n                                                                            setSelectedFromDate(date);\n                                                                        }}\n                                                                    />\n                                                                    To:{\" \"}\n                                                                    <DatePicker\n                                                                        id=\"to_date\"\n                                                                        value={toDateValue}\n                                                                        selected={selectedToDate}\n                                                                        className=\"form-control\"\n                                                                        dateFormat=\"MMM dd yyyy\"\n                                                                        onChange={(date) => {\n                                                                            if (!date) {\n                                                                                setToDateValue(\"\");\n                                                                                searchByDateField(\"to_date\", \"\");\n                                                                                return;\n                                                                            }\n                                                                            searchByDateField(\"to_date\", date);\n                                                                            selectedToDate = date;\n                                                                            setSelectedToDate(date);\n                                                                        }}\n                                                                    />\n                                                                </span>\n                                                            ) : null}\n                                                        </th>\n\n\n                                                        <th style={{ width: \"130px\" }}>\n                                                            <Typeahead\n                                                                id=\"account_id\"\n                                                                labelKey=\"search_label\"\n                                                                onChange={(selectedItems) => {\n                                                                    searchByMultipleValuesField(\n                                                                        \"debit_account_id\",\n                                                                        selectedItems\n                                                                    );\n                                                                }}\n                                                                options={accountOptions}\n                                                                placeholder=\"Debit A/c name / acc no. / phone\"\n                                                                selected={selectedDebitAccounts}\n                                                                highlightOnlyResult={true}\n                                                                onInputChange={(searchTerm, e) => {\n                                                                    suggestAccounts(searchTerm);\n                                                                }}\n                                                                multiple\n                                                            />\n                                                            <br />\n\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"debit\"\n                                                                placeholder=\"Debit amount\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"debit\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th style={{ width: \"130px\" }}>\n                                                            <Typeahead\n                                                                id=\"account_id\"\n                                                                labelKey=\"search_label\"\n                                                                onChange={(selectedItems) => {\n                                                                    searchByMultipleValuesField(\n                                                                        \"credit_account_id\",\n                                                                        selectedItems\n                                                                    );\n                                                                }}\n                                                                options={accountOptions}\n                                                                placeholder=\"Credit A/c name / acc no. / phone\"\n                                                                selected={selectedCreditAccounts}\n                                                                highlightOnlyResult={true}\n                                                                onInputChange={(searchTerm, e) => {\n                                                                    suggestAccounts(searchTerm);\n                                                                }}\n                                                                multiple\n                                                            />\n                                                            <br />\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"credit\"\n                                                                placeholder=\"Credit amount\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"credit\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th style={{ width: \"80px\" }}>\n                                                            <select className=\"form-control\" onChange={(e) =>\n                                                                searchByFieldValue(\"reference_model\", e.target.value)\n                                                            }>\n                                                                <option value=\"\">All</option>\n                                                                <option value=\"sales\">Sales</option>\n                                                                <option value=\"sales_return\">Sales Return</option>\n                                                                <option value=\"purchase\">Purchase</option>\n                                                                <option value=\"purchase_return\">Purchase Return</option>\n                                                                <option value=\"capital\">Capital</option>\n                                                                <option value=\"drawing\">Drawing</option>\n                                                                <option value=\"expense\">Expense</option>\n                                                                <option value=\"customer_deposit\">Customer deposit</option>\n                                                                <option value=\"customer_withdrawal\">Customer withdrawl</option>\n                                                            </select>\n\n                                                        </th>\n                                                        <th style={{ width: \"80px\" }}>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"reference_code\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"reference_code\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        {/*\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                            */}\n                                                    </tr>\n                                                </thead>\n\n                                                <tbody className=\"text-center\">\n                                                    {selectedAccount && (debitBalanceBoughtDown > 0 || creditBalanceBoughtDown > 0) ? <tr>\n                                                        <td></td>\n                                                        <td style={{ textAlign: \"right\", color: \"red\" }}><b>{debitBalanceBoughtDown > 0 ? \"To balance b/d \" + debitBalanceBoughtDown : \"\"}</b></td>\n                                                        <td style={{ textAlign: \"right\", color: \"red\" }}><b>{creditBalanceBoughtDown > 0 ? \"By balance b/d \" + creditBalanceBoughtDown : \"\"}</b></td>\n                                                        <td colSpan={2}></td>\n                                                    </tr> : \"\"}\n\n                                                    {postingList &&\n                                                        postingList.map((posting) => (\n                                                            <tr key={posting.id}>\n\n\n                                                                {/*\n                                                          <td colSpan={4} style={{border:\"solid 1px\"}}>\n                                                            <tr style={{border:\"solid 1px\"}}>\n                                                            <td>1</td>\n                                                            <td>2</td>\n                                                            </tr>\n                                                          </td>\n                                                       */}\n\n                                                                <td colSpan={3}>\n                                                                    {posting.posts &&\n                                                                        posting.posts.map((post, key) => (\n                                                                            <tr key={key} style={{ border: \"solid 1px\" }}>\n                                                                                <td style={{ border: \"solid 1px\", minWidth: \"184px\" }}>{format(new Date(post.date), \"MMM dd yyyy h:mma\")}</td>\n                                                                                <td colSpan={2} style={{ border: \"solid 0px\" }}>\n                                                                                    <td style={{ border: \"solid 0px\", borderRight: \"solid 0px\", paddingLeft: \"5px\" }}>\n                                                                                        <td style={{ textAlign: \"left\", border: \"solid 0px\", minWidth: \"162px\" }}>\n                                                                                            {post.debit_or_credit == \"debit\" ? \"To \" + post.account_name + \" A/c #\" + post.account_number + \" Dr.\" : \"\"}\n                                                                                        </td>\n                                                                                        <td style={{ textAlign: \"right\", border: \"solid 0px\", minWidth: \"140px\" }}>\n                                                                                            {post.debit ? post.debit : \"\"}\n                                                                                        </td>\n                                                                                    </td>\n                                                                                    <td style={{ border: \"solid 0px\", paddingLeft: \"5px\", borderLeft: \"solid 1px\" }}>\n                                                                                        <td style={{ textAlign: \"left\", border: \"solid 0px\", minWidth: \"193px\" }}>\n                                                                                            {post.debit_or_credit == \"credit\" ? \"By \" + post.account_name + \" A/c #\" + post.account_number + \"  Cr.\" : \"\"}\n                                                                                        </td>\n                                                                                        <td style={{ textAlign: \"right\", border: \"solid 0px\", minWidth: \"105px\" }}>\n                                                                                            {post.credit ? post.credit : \"\"}\n                                                                                        </td>\n                                                                                    </td>\n                                                                                </td>\n                                                                                {/*\n                                                                        <td colSpan={2} >\n                                                                            <td style={{ border: \"solid 1px\", minWidth: \"250px\", maxWidth: \"250px\", textAlign: \"left\", paddingLeft: post.debit_or_credit == \"debit\" ? \"10px\" : \"10px\" }} >\n                                                                                {post.debit_or_credit == \"debit\" ? \"To \" + post.account_name + \" A/c  Dr.\" : \"\"}\n                                                                            </td>\n                                                                            <td style={{ border: \"solid 1px\", textAlign: \"right\", paddingLeft: \"100px\" }} >\n                                                                                {post.debit ? post.debit : \"\"}\n                                                                            </td>\n                                                                        </td>\n                                                                        <td colSpan={2} >\n                                                                            <td style={{ border: \"solid 1px\", minWidth: \"250px\", maxWidth: \"250px\", textAlign: \"left\", paddingLeft: post.debit_or_credit == \"credit\" ? \"10px\" : \"10px\" }} >\n                                                                                {post.debit_or_credit == \"credit\" ? \"To \" + post.account_name + \" A/c  Dr.\" : \"\"}\n                                                                            </td>\n                                                                            <td style={{ border: \"solid 1px\", textAlign: \"right\", paddingLeft: \"100px\" }} >\n                                                                                {post.credit ? post.credit : \"\"}\n                                                                            </td>\n                                                                        </td>\n                                                                */}\n\n                                                                            </tr>))}\n\n\n                                                                </td>\n                                                                <td style={{ minWidth: \"155px\", maxWidth: \"155px\" }} >{posting.reference_model}</td>\n                                                                <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{posting.reference_code}</td>\n\n\n                                                            </tr>\n                                                        ))}\n                                                    {selectedAccount && (debitBalance > 0 || creditBalance > 0) ? <tr>\n                                                        <td></td>\n                                                        <td style={{ textAlign: \"right\", color: \"red\" }}><b>{debitBalance > 0 ? \"To balance c/d \" + debitBalance : \"\"}</b></td>\n                                                        <td style={{ textAlign: \"right\", color: \"red\" }}><b>{creditBalance > 0 ? \"By balance c/d \" + creditBalance : \"\"}</b></td>\n                                                        <td colSpan={2}></td>\n                                                    </tr> : \"\"}\n                                                    {selectedAccount ? <tr>\n                                                        <td></td>\n                                                        <td style={{ textAlign: \"right\" }}><b>{creditTotal > debitTotal ? creditTotal : debitTotal}</b></td>\n                                                        <td style={{ textAlign: \"right\" }}><b>{creditTotal > debitTotal ? creditTotal : debitTotal}</b></td>\n                                                        <td colSpan={2}></td>\n                                                    </tr> : \"\"}\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n});\n\nexport default PostingIndex;\n"]},"metadata":{},"sourceType":"module"}