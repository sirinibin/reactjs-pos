{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/posting/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostingIndex(props) {\n  _s();\n\n  const cookies = new Cookies(); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false); //const selectedDate = new Date();\n\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  const [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //list\n\n  const [postingList, setPostingList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Created By Expense Auto Suggestion\n\n  const [expenseOptions, setExpenseOptions] = useState([]);\n  const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]); //Created By Expense Auto Suggestion\n\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //Search params\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"posts.date\");\n  let [sortPosting, setSortPosting] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + object[key];\n    }).join(\"&\");\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      page = 1;\n      searchParams[field] = \"\";\n      setPage(page);\n      list();\n      return;\n    }\n\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    value = format(d, \"MMM dd yyyy\");\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByExpenses(values);\n    } else if (field === \"category_id\") {\n      setSelectedExpenseCategories(values);\n    } else if (field === \"account_id\") {\n      setSelectedAccounts(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  let [totalExpenses, setTotalExpenses] = useState(0.00);\n  let [debitTotal, setDebitTotal] = useState(0.00);\n  let [creditTotal, setCreditTotal] = useState(0.00);\n  let [debitBalance, setDebitBalance] = useState(0.00);\n  let [creditBalance, setCreditBalance] = useState(0.00);\n  let [debitBalanceBoughtDown, setDebitBalanceBoughtDown] = useState(0.00);\n  let [creditBalanceBoughtDown, setCreditBalanceBoughtDown] = useState(0.00);\n\n  function list() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,date,store_id,account_id,account_name,account_number,reference_id,reference_model,reference_code,posts,debit_total_credit_total,created_at\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    if (props.account) {\n      searchParams.account_id = props.account.id;\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    } // console.log(\"queryParams:\", queryParams);\n    //queryParams = encodeURIComponent(queryParams);\n\n\n    setIsListLoading(true);\n    fetch(\"/v1/posting?\" + Select + queryParams + \"&sort=\" + sortPosting + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setPostingList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      debitTotal = data.meta.debit_total;\n      setDebitTotal(debitTotal);\n      creditTotal = data.meta.credit_total;\n      setCreditTotal(creditTotal);\n\n      if (data.meta.debit_balance) {\n        debitBalance = data.meta.debit_balance;\n        setDebitBalance(debitBalance);\n      } else {\n        debitBalance = 0.00;\n        setDebitBalance(0.00);\n      }\n\n      if (data.meta.debit_balance_bought_down) {\n        debitBalanceBoughtDown = data.meta.debit_balance_bought_down;\n        setDebitBalanceBoughtDown(debitBalanceBoughtDown);\n      } else {\n        debitBalanceBoughtDown = 0.00;\n        setDebitBalanceBoughtDown(0.00);\n      }\n\n      if (data.meta.credit_balance_bought_down) {\n        creditBalanceBoughtDown = data.meta.credit_balance_bought_down;\n        setCreditBalanceBoughtDown(creditBalanceBoughtDown);\n      } else {\n        creditBalanceBoughtDown = 0.00;\n        setCreditBalanceBoughtDown(0.00);\n      }\n\n      if (data.meta.credit_balance) {\n        creditBalance = data.meta.credit_balance;\n        setCreditBalance(creditBalance);\n      } else {\n        creditBalance = 0.00;\n        setCreditBalance(0.00);\n      } //totalExpenses = data.meta.total;\n      //setTotalExpenses(totalExpenses);\n\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortPosting = sortPosting === \"-\" ? \"\" : \"-\";\n    setSortPosting(sortPosting);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const [accountOptions, setAccountOptions] = useState([]);\n\n  async function suggestAccounts(searchTerm) {\n    console.log(\"Inside handle suggestAccounts\");\n    var params = {\n      search: searchTerm\n    };\n\n    if (cookies.get(\"store_id\")) {\n      params.store_id = cookies.get(\"store_id\");\n    }\n\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = `&${queryString}`;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,number,search_label,open,balance,debit_total,credit_total\";\n    let result = await fetch(`/v1/account?${Select}${queryString}`, requestOptions);\n    let data = await result.json();\n    setAccountOptions(data.result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start\",\n                    children: \"No Expense to display\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  bexpense: \"solid 0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-start\",\n                  style: {\n                    border: \"solid 0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setIsRefreshInProcess(true);\n                      list();\n                    },\n                    variant: \"primary\",\n                    disabled: isRefreshInProcess,\n                    children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"bexpense\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-refresh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"visually-hidden\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-center\",\n                  children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"grow\",\n                    variant: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-end\",\n                  children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Size:\\xA0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: pageSize,\n                      onChange: e => {\n                        changePageSize(e.target.value);\n                      },\n                      className: \"form-control pull-right\",\n                      style: {\n                        bexpense: \"solid 1px\",\n                        bexpenseColor: \"silver\",\n                        width: \"55px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5\",\n                        children: \"5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10\",\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"20\",\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"40\",\n                        children: \"40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"50\",\n                        children: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"100\",\n                        children: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"200\",\n                        children: \"200\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"300\",\n                        children: \"300\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"500\",\n                        children: \"500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1000\",\n                        children: \"1000\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1500\",\n                        children: \"1500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  style: {\n                    bexpense: \"solid 0px\"\n                  },\n                  children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-start\",\n                      children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-end\",\n                      children: [\"page \", page, \" of \", totalPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 501,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                style: {\n                  overflowX: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-sm table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"posts.date\");\n                          },\n                          children: [\"Date\", sortField === \"posts.date\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 548,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"posts.date\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 551,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 537,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 536,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"posts.debit\");\n                          },\n                          children: [\"Debit\", sortField === \"posts.debit\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 576,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"posts.debit\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 579,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 565,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"posts.credit\");\n                          },\n                          children: [\"Credit\", sortField === \"posts.credit\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 596,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"posts.credit\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 599,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 585,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 584,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"reference_model\");\n                          },\n                          children: [\"Type\", sortField === \"reference_model\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 615,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"reference_model\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 618,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 604,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"reference_code\");\n                          },\n                          children: [\"ID\", sortField === \"reference_code\" && sortPosting === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 635,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"reference_code\" && sortPosting === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 638,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 624,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {},\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"date_str\",\n                          value: dateValue,\n                          selected: selectedDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              setDateValue(\"\");\n                              searchByDateField(\"date_str\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"date_str\", date);\n                            selectedDate = date;\n                            setSelectedDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 696,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowDateRange(!showDateRange),\n                          children: showDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 713,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 723,\n                          columnNumber: 53\n                        }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"from_date\",\n                            value: fromDateValue,\n                            selected: selectedFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setFromDateValue(\"\");\n                                searchByDateField(\"from_date\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"from_date\", date);\n                              selectedFromDate = date;\n                              setSelectedFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 728,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"to_date\",\n                            value: toDateValue,\n                            selected: selectedToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setToDateValue(\"\");\n                                searchByDateField(\"to_date\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"to_date\", date);\n                              selectedToDate = date;\n                              setSelectedToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 746,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 726,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 695,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {},\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"debit\",\n                          onChange: e => searchByFieldValue(\"debit\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 768,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 767,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {},\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"credit\",\n                          onChange: e => searchByFieldValue(\"credit\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 778,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 777,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"form-control\",\n                          onChange: e => searchByFieldValue(\"reference_model\", e.target.value),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"All\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 791,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"sales\",\n                            children: \"Sales\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 792,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"customer_deposit\",\n                            children: \"Customer deposit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 793,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"customer_withdrawal\",\n                            children: \"Customer withdrawl\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 794,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 788,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 787,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"reference_code\",\n                          onChange: e => searchByFieldValue(\"reference_code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 799,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 798,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"text-center\",\n                    children: [props.account && (debitBalanceBoughtDown > 0 || creditBalanceBoughtDown > 0) ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 882,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          textAlign: \"right\",\n                          color: \"red\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: debitBalanceBoughtDown > 0 ? \"To balance b/d \" + debitBalanceBoughtDown : \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 883,\n                          columnNumber: 98\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 883,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          textAlign: \"right\",\n                          color: \"red\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: creditBalanceBoughtDown > 0 ? \"By balance b/d \" + creditBalanceBoughtDown : \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 884,\n                          columnNumber: 98\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 884,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: 2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 885,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 881,\n                      columnNumber: 124\n                    }, this) : \"\", postingList && postingList.map(posting => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: 3,\n                        children: /*#__PURE__*/_jsxDEV(\"table\", {\n                          class: \"table table-bordered border-secondary table-secondary table-hover table-striped\",\n                          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                            children: posting.posts && posting.posts.map((post, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                              style: {\n                                border: \"solid 1px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                style: {\n                                  border: \"solid 1px\"\n                                },\n                                children: format(new Date(post.date), \"MMM dd yyyy h:mma\")\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 908,\n                                columnNumber: 73\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                colSpan: 2,\n                                style: {\n                                  border: \"solid 0px\"\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                  style: {\n                                    border: \"solid 0px\",\n                                    borderRight: \"solid 0px\",\n                                    paddingLeft: \"5px\"\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"left\",\n                                      border: \"solid 0px\"\n                                    },\n                                    children: post.debit_or_credit == \"debit\" ? \"To \" + post.account_name + \" A/c  Dr.\" : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 911,\n                                    columnNumber: 81\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"right\",\n                                      border: \"solid 0px\"\n                                    },\n                                    children: post.debit ? post.debit : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 914,\n                                    columnNumber: 81\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 910,\n                                  columnNumber: 77\n                                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                  style: {\n                                    border: \"solid 0px\",\n                                    paddingLeft: \"5px\"\n                                  },\n                                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"left\",\n                                      border: \"solid 0px\"\n                                    },\n                                    children: post.debit_or_credit == \"credit\" ? \"By \" + post.account_name + \" A/c  Cr.\" : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 919,\n                                    columnNumber: 81\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      textAlign: \"right\",\n                                      border: \"solid 0px\"\n                                    },\n                                    children: post.credit ? post.credit : \"\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 922,\n                                    columnNumber: 81\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 918,\n                                  columnNumber: 77\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 909,\n                                columnNumber: 73\n                              }, this)]\n                            }, key, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 907,\n                              columnNumber: 69\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 904,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 903,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 902,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {},\n                        children: posting.reference_model\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 935,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {},\n                        children: posting.reference_code\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 936,\n                        columnNumber: 57\n                      }, this)]\n                    }, posting.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 890,\n                      columnNumber: 53\n                    }, this)), props.account && (debitBalance > 0 || creditBalance > 0) ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 942,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          textAlign: \"right\",\n                          color: \"red\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: debitBalance > 0 ? \"To balance c/d \" + debitBalance : \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 943,\n                          columnNumber: 98\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 943,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          textAlign: \"right\",\n                          color: \"red\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: creditBalance > 0 ? \"By balance c/d \" + creditBalance : \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 944,\n                          columnNumber: 98\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 944,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: 2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 941,\n                      columnNumber: 105\n                    }, this) : \"\", props.account ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 948,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: creditTotal > debitTotal ? creditTotal : debitTotal\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 949,\n                          columnNumber: 84\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 949,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          textAlign: \"right\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: creditTotal > debitTotal ? creditTotal : debitTotal\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 950,\n                          columnNumber: 84\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 950,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: 2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 951,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 947,\n                      columnNumber: 62\n                    }, this) : \"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 880,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 33\n              }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                breakLabel: \"...\",\n                nextLabel: \"next >\",\n                onPageChange: event => {\n                  changePage(event.selected + 1);\n                },\n                pageRangeDisplayed: 5,\n                pageCount: totalPages,\n                previousLabel: \"< previous\",\n                renderOnZeroPageCount: null,\n                className: \"pagination  flex-wrap\",\n                pageClassName: \"page-item\",\n                pageLinkClassName: \"page-link\",\n                activeClassName: \"active\",\n                previousClassName: \"page-item\",\n                nextClassName: \"page-item\",\n                previousLinkClassName: \"page-link\",\n                nextLinkClassName: \"page-link\",\n                forcePage: page - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 47\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(PostingIndex, \"+cd/Qz1ZZyQjXZZvAsvg+UqnwRs=\");\n\n_c = PostingIndex;\nexport default PostingIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostingIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/posting/index.js"],"names":["React","useState","useEffect","useRef","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","ReactPaginate","NumberFormat","PostingIndex","props","cookies","showDateRange","setShowDateRange","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","postingList","setPostingList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","expenseOptions","setExpenseOptions","selectedCreatedByExpenses","setSelectedCreatedByExpenses","categoryOptions","setCategoryOptions","selectedExpenseCategories","setSelectedExpenseCategories","list","searchParams","setSearchParams","sortField","setSortField","sortPosting","setSortPosting","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","searchByDateField","d","toUTCString","selectedAccounts","setSelectedAccounts","searchByMultipleValuesField","values","model","id","totalExpenses","setTotalExpenses","debitTotal","setDebitTotal","creditTotal","setCreditTotal","debitBalance","setDebitBalance","creditBalance","setCreditBalance","debitBalanceBoughtDown","setDebitBalanceBoughtDown","creditBalanceBoughtDown","setCreditBalanceBoughtDown","requestOptions","method","headers","Authorization","get","Select","store_id","account","account_id","diff","getTimezoneOffset","parseFloat","queryParams","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","pageCount","parseInt","total_count","length","meta","debit_total","credit_total","debit_balance","debit_balance_bought_down","credit_balance_bought_down","credit_balance","catch","console","log","sort","changePageSize","size","changePage","newPage","accountOptions","setAccountOptions","suggestAccounts","searchTerm","params","search","queryString","bexpense","border","e","target","bexpenseColor","width","event","selected","overflowX","textDecoration","cursor","date","color","textAlign","posting","posts","post","borderRight","paddingLeft","debit_or_credit","account_name","debit","credit","reference_model","reference_code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\n\nfunction PostingIndex(props) {\n\n    const cookies = new Cookies();\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    //const selectedDate = new Date();\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    const [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //list\n    const [postingList, setPostingList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Created By Expense Auto Suggestion\n    const [expenseOptions, setExpenseOptions] = useState([]);\n    const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]);\n\n    //Created By Expense Auto Suggestion\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"posts.date\");\n    let [sortPosting, setSortPosting] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByExpenses(values);\n        } else if (field === \"category_id\") {\n            setSelectedExpenseCategories(values);\n        } else if (field === \"account_id\") {\n            setSelectedAccounts(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n    let [debitTotal, setDebitTotal] = useState(0.00);\n    let [creditTotal, setCreditTotal] = useState(0.00);\n\n    let [debitBalance, setDebitBalance] = useState(0.00);\n    let [creditBalance, setCreditBalance] = useState(0.00);\n\n    let [debitBalanceBoughtDown, setDebitBalanceBoughtDown] = useState(0.00);\n    let [creditBalanceBoughtDown, setCreditBalanceBoughtDown] = useState(0.00);\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,date,store_id,account_id,account_name,account_number,reference_id,reference_model,reference_code,posts,debit_total_credit_total,created_at\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        if (props.account) {\n            searchParams.account_id = props.account.id;\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/posting?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortPosting +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setPostingList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                debitTotal = data.meta.debit_total;\n                setDebitTotal(debitTotal);\n\n                creditTotal = data.meta.credit_total;\n                setCreditTotal(creditTotal);\n\n               \n\n                if (data.meta.debit_balance) {\n                    debitBalance = data.meta.debit_balance;\n                    setDebitBalance(debitBalance);\n                }else {\n                    debitBalance = 0.00;\n                    setDebitBalance(0.00);\n                }\n\n                if (data.meta.debit_balance_bought_down) {\n                    debitBalanceBoughtDown = data.meta.debit_balance_bought_down;\n                    setDebitBalanceBoughtDown(debitBalanceBoughtDown);\n                }else {\n                    debitBalanceBoughtDown = 0.00;\n                    setDebitBalanceBoughtDown(0.00);\n                }\n\n                if (data.meta.credit_balance_bought_down) {\n                    creditBalanceBoughtDown = data.meta.credit_balance_bought_down;\n                    setCreditBalanceBoughtDown(creditBalanceBoughtDown);\n                }else {\n                    creditBalanceBoughtDown = 0.00;\n                    setCreditBalanceBoughtDown(0.00);\n                }\n\n                if (data.meta.credit_balance) {\n                    creditBalance = data.meta.credit_balance;\n                    setCreditBalance(creditBalance);\n                }else {\n                    creditBalance = 0.00;\n                    setCreditBalance(0.00);\n                }\n\n\n                //totalExpenses = data.meta.total;\n                //setTotalExpenses(totalExpenses);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortPosting = sortPosting === \"-\" ? \"\" : \"-\";\n        setSortPosting(sortPosting);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    const [accountOptions, setAccountOptions] = useState([]);\n\n    async function suggestAccounts(searchTerm) {\n        console.log(\"Inside handle suggestAccounts\");\n\n        var params = {\n            search: searchTerm,\n        };\n\n        if (cookies.get(\"store_id\")) {\n            params.store_id = cookies.get(\"store_id\");\n        }\n\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = `&${queryString}`;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,number,search_label,open,balance,debit_total,credit_total\";\n        let result = await fetch(\n            `/v1/account?${Select}${queryString}`,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setAccountOptions(data.result);\n    }\n\n\n    return (\n        <>\n            {/*\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    \n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Total: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalExpenses}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" SAR\"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n            </div>\n           */}\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">{/*Postings*/}</h1>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No Expense to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ bexpense: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"bexpense\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        bexpense: \"solid 1px\",\n                                                        bexpenseColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\" >\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                    <option value=\"200\">200</option>\n                                                    <option value=\"300\">300</option>\n                                                    <option value=\"500\">500</option>\n                                                    <option value=\"1000\">1000</option>\n                                                    <option value=\"1500\">1500</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ bexpense: \"solid 0px\" }}>\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n\n\n\n                                                {/*\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"account_name\");\n                                                        }}\n                                                    >\n                                                        Account\n                                                        {sortField === \"account_name\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"account_name\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                        */}\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"posts.date\");\n                                                        }}\n                                                    >\n                                                        Date\n                                                        {sortField === \"posts.date\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"posts.date\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n\n\n\n\n\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"posts.debit\");\n                                                        }}\n                                                    >\n                                                        Debit\n                                                        {sortField === \"posts.debit\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"posts.debit\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"posts.credit\");\n                                                        }}\n                                                    >\n                                                        Credit\n                                                        {sortField === \"posts.credit\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"posts.credit\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"reference_model\");\n                                                        }}\n                                                    >\n                                                        Type\n                                                        {sortField === \"reference_model\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"reference_model\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"reference_code\");\n                                                        }}\n                                                    >\n                                                        ID\n                                                        {sortField === \"reference_code\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"reference_code\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n                                                {/*\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortPosting === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortPosting === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                        */}\n\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n\n                                                {/*\n                                                <th style={{ minWidth: \"250px\" }}>\n                                                    <Typeahead\n                                                        id=\"account_id\"\n                                                        labelKey=\"search_label\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"account_id\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={accountOptions}\n                                                        placeholder=\"Name / mob / acc no.\"\n                                                        selected={selectedAccounts}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestAccounts(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                    */}\n\n                                                <th style={{  }}>\n                                                    <DatePicker\n                                                        id=\"date_str\"\n                                                        value={dateValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setDateValue(\"\");\n                                                                searchByDateField(\"date_str\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"date_str\", date);\n                                                            selectedDate = date;\n                                                            setSelectedDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) => setShowDateRange(!showDateRange)}\n                                                    >\n                                                        {showDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"from_date\"\n                                                                value={fromDateValue}\n                                                                selected={selectedFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setFromDateValue(\"\");\n                                                                        searchByDateField(\"from_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"from_date\", date);\n                                                                    selectedFromDate = date;\n                                                                    setSelectedFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"to_date\"\n                                                                value={toDateValue}\n                                                                selected={selectedToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setToDateValue(\"\");\n                                                                        searchByDateField(\"to_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"to_date\", date);\n                                                                    selectedToDate = date;\n                                                                    setSelectedToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n\n                                                <th style={{  }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"debit\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"debit\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{  }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"credit\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"credit\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th >\n                                                    <select className=\"form-control\" onChange={(e) =>\n                                                        searchByFieldValue(\"reference_model\", e.target.value)\n                                                    }>\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"sales\">Sales</option>\n                                                        <option value=\"customer_deposit\">Customer deposit</option>\n                                                        <option value=\"customer_withdrawal\">Customer withdrawl</option>\n                                                    </select>\n\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"reference_code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"reference_code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                {/*\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                            */}\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                           {props.account && (debitBalanceBoughtDown > 0 || creditBalanceBoughtDown > 0) ? <tr>\n                                                <td></td>\n                                                <td style={{ textAlign: \"right\", color: \"red\" }}><b>{debitBalanceBoughtDown > 0 ? \"To balance b/d \" + debitBalanceBoughtDown : \"\"}</b></td>\n                                                <td style={{ textAlign: \"right\", color: \"red\" }}><b>{creditBalanceBoughtDown > 0 ? \"By balance b/d \" + creditBalanceBoughtDown : \"\"}</b></td>\n                                                <td colSpan={2}></td>\n                                            </tr> : \"\"}\n\n                                            {postingList &&\n                                                postingList.map((posting) => (\n                                                    <tr key={posting.id}>\n\n\n                                                        {/*\n                                                          <td colSpan={4} style={{border:\"solid 1px\"}}>\n                                                            <tr style={{border:\"solid 1px\"}}>\n                                                            <td>1</td>\n                                                            <td>2</td>\n                                                            </tr>\n                                                          </td>\n                                                       */}\n\n                                                        <td colSpan={3} >\n                                                        <table class=\"table table-bordered border-secondary table-secondary table-hover table-striped\">\n                                                        <tbody>\n                                                            {posting.posts &&\n                                                                posting.posts.map((post, key) => (\n                                                                    <tr key={key} style={{ border: \"solid 1px\" }} >\n                                                                        <td style={{ border: \"solid 1px\", }}>{format(new Date(post.date), \"MMM dd yyyy h:mma\")}</td>\n                                                                        <td colSpan={2} style={{ border: \"solid 0px\"}}>\n                                                                            <td style={{ border: \"solid 0px\", borderRight: \"solid 0px\", paddingLeft: \"5px\" }}>\n                                                                                <td style={{ textAlign: \"left\", border: \"solid 0px\",  }}>\n                                                                                    {post.debit_or_credit == \"debit\" ? \"To \" + post.account_name + \" A/c  Dr.\" : \"\"}\n                                                                                </td>\n                                                                                <td style={{ textAlign: \"right\", border: \"solid 0px\", }}>\n                                                                                    {post.debit ? post.debit : \"\"}\n                                                                                </td>\n                                                                            </td>\n                                                                            <td style={{ border: \"solid 0px\",  paddingLeft: \"5px\",}}>\n                                                                                <td style={{ textAlign: \"left\", border: \"solid 0px\",  }}>\n                                                                                    {post.debit_or_credit == \"credit\" ? \"By \" + post.account_name + \" A/c  Cr.\" : \"\"}\n                                                                                </td>\n                                                                                <td style={{ textAlign: \"right\", border: \"solid 0px\",  }}>\n                                                                                    {post.credit ? post.credit : \"\"}\n                                                                                </td>\n                                                                            </td>\n                                                                        </td>\n                                                                      \n\n                                                                    </tr>))}\n                                                                    </tbody>\n                                                                </table>\n\n\n                                                        </td>\n                                                        <td style={{  }} >{posting.reference_model}</td>\n                                                        <td style={{  }}>{posting.reference_code}</td>\n\n\n                                                    </tr>\n                                                ))}\n                                            {props.account && (debitBalance > 0 || creditBalance > 0) ? <tr>\n                                                <td></td>\n                                                <td style={{ textAlign: \"right\", color: \"red\" }}><b>{debitBalance > 0 ? \"To balance c/d \" + debitBalance : \"\"}</b></td>\n                                                <td style={{ textAlign: \"right\", color: \"red\" }}><b>{creditBalance > 0 ? \"By balance c/d \" + creditBalance : \"\"}</b></td>\n                                                <td colSpan={2}></td>\n                                            </tr> : \"\"}\n                                            {props.account ? <tr>\n                                                <td></td>\n                                                <td style={{ textAlign: \"right\" }}><b>{creditTotal > debitTotal ? creditTotal : debitTotal}</b></td>\n                                                <td style={{ textAlign: \"right\" }}><b>{creditTotal > debitTotal ? creditTotal : debitTotal}</b></td>\n                                                <td colSpan={2}></td>\n                                            </tr> : \"\"}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default PostingIndex;\n"]},"metadata":{},"sourceType":"module"}