{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { Size } from './constants';\nimport { isFunction, warn } from './utils';\nvar INPUT_PROPS_BLACKLIST = [{\n  alt: 'onBlur',\n  prop: 'onBlur'\n}, {\n  alt: 'onInputChange',\n  prop: 'onChange'\n}, {\n  alt: 'onFocus',\n  prop: 'onFocus'\n}, {\n  alt: 'onKeyDown',\n  prop: 'onKeyDown'\n}];\nexport var sizeType = PropTypes.oneOf(Object.values(Size));\n/**\n * Allows additional warnings or messaging related to prop validation.\n */\n\nexport function checkPropType(validator, callback) {\n  return function (props, propName, componentName) {\n    PropTypes.checkPropTypes(_defineProperty({}, propName, validator), props, 'prop', componentName);\n    isFunction(callback) && callback(props, propName, componentName);\n  };\n}\nexport function caseSensitiveType(props) {\n  var caseSensitive = props.caseSensitive,\n      filterBy = props.filterBy;\n  warn(!caseSensitive || typeof filterBy !== 'function', 'Your `filterBy` function will override the `caseSensitive` prop.');\n}\nexport function deprecated(validator, reason) {\n  return function (props, propName, componentName) {\n    if (props[propName] != null) {\n      warn(false, \"The `\".concat(propName, \"` prop is deprecated. \").concat(reason));\n    }\n\n    return PropTypes.checkPropTypes(_defineProperty({}, propName, validator), props, 'prop', componentName);\n  };\n}\nexport function defaultInputValueType(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultSelected = props.defaultSelected,\n      multiple = props.multiple,\n      selected = props.selected;\n  var name = defaultSelected.length ? 'defaultSelected' : 'selected';\n  warn(!(!multiple && defaultInputValue && (defaultSelected.length || selected && selected.length)), \"`defaultInputValue` will be overridden by the value from `\".concat(name, \"`.\"));\n}\nexport function defaultSelectedType(props) {\n  var defaultSelected = props.defaultSelected,\n      multiple = props.multiple;\n  warn(multiple || defaultSelected.length <= 1, 'You are passing multiple options to the `defaultSelected` prop of a ' + 'Typeahead in single-select mode. The selections will be truncated to a ' + 'single selection.');\n}\nexport function highlightOnlyResultType(_ref) {\n  var allowNew = _ref.allowNew,\n      highlightOnlyResult = _ref.highlightOnlyResult;\n  warn(!(highlightOnlyResult && allowNew), '`highlightOnlyResult` will not work with `allowNew`.');\n}\nexport function ignoreDiacriticsType(props) {\n  var filterBy = props.filterBy,\n      ignoreDiacritics = props.ignoreDiacritics;\n  warn(ignoreDiacritics || typeof filterBy !== 'function', 'Your `filterBy` function will override the `ignoreDiacritics` prop.');\n}\nexport function inputPropsType(_ref2) {\n  var inputProps = _ref2.inputProps;\n\n  if (!(inputProps && Object.prototype.toString.call(inputProps) === '[object Object]')) {\n    return;\n  } // Blacklisted properties.\n\n\n  INPUT_PROPS_BLACKLIST.forEach(function (_ref3) {\n    var alt = _ref3.alt,\n        prop = _ref3.prop;\n    var msg = alt ? \" Use the top-level `\".concat(alt, \"` prop instead.\") : null;\n    warn(!inputProps[prop], \"The `\".concat(prop, \"` property of `inputProps` will be ignored.\").concat(msg));\n  });\n}\nexport function isRequiredForA11y(props, propName, componentName) {\n  warn(props[propName] != null, \"The prop `\".concat(propName, \"` is required to make `\").concat(componentName, \"` \") + 'accessible for users of assistive technologies such as screen readers.');\n}\nexport function labelKeyType(_ref4) {\n  var allowNew = _ref4.allowNew,\n      labelKey = _ref4.labelKey;\n  warn(!(isFunction(labelKey) && allowNew), '`labelKey` must be a string when `allowNew={true}`.');\n}\nexport var optionType = PropTypes.oneOfType([PropTypes.object, PropTypes.string]);\nexport function selectedType(_ref5) {\n  var multiple = _ref5.multiple,\n      onChange = _ref5.onChange,\n      selected = _ref5.selected;\n  warn(multiple || !selected || selected.length <= 1, 'You are passing multiple options to the `selected` prop of a Typeahead ' + 'in single-select mode. This may lead to unexpected behaviors or errors.');\n  warn(!selected || selected && isFunction(onChange), 'You provided a `selected` prop without an `onChange` handler. If you ' + 'want the typeahead to be uncontrolled, use `defaultSelected`. ' + 'Otherwise, set `onChange`.');\n}","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/react-bootstrap-typeahead/es/propTypes.js"],"names":["_defineProperty","PropTypes","Size","isFunction","warn","INPUT_PROPS_BLACKLIST","alt","prop","sizeType","oneOf","Object","values","checkPropType","validator","callback","props","propName","componentName","checkPropTypes","caseSensitiveType","caseSensitive","filterBy","deprecated","reason","concat","defaultInputValueType","defaultInputValue","defaultSelected","multiple","selected","name","length","defaultSelectedType","highlightOnlyResultType","_ref","allowNew","highlightOnlyResult","ignoreDiacriticsType","ignoreDiacritics","inputPropsType","_ref2","inputProps","prototype","toString","call","forEach","_ref3","msg","isRequiredForA11y","labelKeyType","_ref4","labelKey","optionType","oneOfType","object","string","selectedType","_ref5","onChange"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport { Size } from './constants';\nimport { isFunction, warn } from './utils';\nvar INPUT_PROPS_BLACKLIST = [{\n  alt: 'onBlur',\n  prop: 'onBlur'\n}, {\n  alt: 'onInputChange',\n  prop: 'onChange'\n}, {\n  alt: 'onFocus',\n  prop: 'onFocus'\n}, {\n  alt: 'onKeyDown',\n  prop: 'onKeyDown'\n}];\nexport var sizeType = PropTypes.oneOf(Object.values(Size));\n\n/**\n * Allows additional warnings or messaging related to prop validation.\n */\nexport function checkPropType(validator, callback) {\n  return function (props, propName, componentName) {\n    PropTypes.checkPropTypes(_defineProperty({}, propName, validator), props, 'prop', componentName);\n    isFunction(callback) && callback(props, propName, componentName);\n  };\n}\nexport function caseSensitiveType(props) {\n  var caseSensitive = props.caseSensitive,\n      filterBy = props.filterBy;\n  warn(!caseSensitive || typeof filterBy !== 'function', 'Your `filterBy` function will override the `caseSensitive` prop.');\n}\nexport function deprecated(validator, reason) {\n  return function (props, propName, componentName) {\n    if (props[propName] != null) {\n      warn(false, \"The `\".concat(propName, \"` prop is deprecated. \").concat(reason));\n    }\n\n    return PropTypes.checkPropTypes(_defineProperty({}, propName, validator), props, 'prop', componentName);\n  };\n}\nexport function defaultInputValueType(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultSelected = props.defaultSelected,\n      multiple = props.multiple,\n      selected = props.selected;\n  var name = defaultSelected.length ? 'defaultSelected' : 'selected';\n  warn(!(!multiple && defaultInputValue && (defaultSelected.length || selected && selected.length)), \"`defaultInputValue` will be overridden by the value from `\".concat(name, \"`.\"));\n}\nexport function defaultSelectedType(props) {\n  var defaultSelected = props.defaultSelected,\n      multiple = props.multiple;\n  warn(multiple || defaultSelected.length <= 1, 'You are passing multiple options to the `defaultSelected` prop of a ' + 'Typeahead in single-select mode. The selections will be truncated to a ' + 'single selection.');\n}\nexport function highlightOnlyResultType(_ref) {\n  var allowNew = _ref.allowNew,\n      highlightOnlyResult = _ref.highlightOnlyResult;\n  warn(!(highlightOnlyResult && allowNew), '`highlightOnlyResult` will not work with `allowNew`.');\n}\nexport function ignoreDiacriticsType(props) {\n  var filterBy = props.filterBy,\n      ignoreDiacritics = props.ignoreDiacritics;\n  warn(ignoreDiacritics || typeof filterBy !== 'function', 'Your `filterBy` function will override the `ignoreDiacritics` prop.');\n}\nexport function inputPropsType(_ref2) {\n  var inputProps = _ref2.inputProps;\n\n  if (!(inputProps && Object.prototype.toString.call(inputProps) === '[object Object]')) {\n    return;\n  } // Blacklisted properties.\n\n\n  INPUT_PROPS_BLACKLIST.forEach(function (_ref3) {\n    var alt = _ref3.alt,\n        prop = _ref3.prop;\n    var msg = alt ? \" Use the top-level `\".concat(alt, \"` prop instead.\") : null;\n    warn(!inputProps[prop], \"The `\".concat(prop, \"` property of `inputProps` will be ignored.\").concat(msg));\n  });\n}\nexport function isRequiredForA11y(props, propName, componentName) {\n  warn(props[propName] != null, \"The prop `\".concat(propName, \"` is required to make `\").concat(componentName, \"` \") + 'accessible for users of assistive technologies such as screen readers.');\n}\nexport function labelKeyType(_ref4) {\n  var allowNew = _ref4.allowNew,\n      labelKey = _ref4.labelKey;\n  warn(!(isFunction(labelKey) && allowNew), '`labelKey` must be a string when `allowNew={true}`.');\n}\nexport var optionType = PropTypes.oneOfType([PropTypes.object, PropTypes.string]);\nexport function selectedType(_ref5) {\n  var multiple = _ref5.multiple,\n      onChange = _ref5.onChange,\n      selected = _ref5.selected;\n  warn(multiple || !selected || selected.length <= 1, 'You are passing multiple options to the `selected` prop of a Typeahead ' + 'in single-select mode. This may lead to unexpected behaviors or errors.');\n  warn(!selected || selected && isFunction(onChange), 'You provided a `selected` prop without an `onChange` handler. If you ' + 'want the typeahead to be uncontrolled, use `defaultSelected`. ' + 'Otherwise, set `onChange`.');\n}"]},"metadata":{},"sourceType":"module"}