{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\"];\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Highlighter from './Highlighter';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport { getOptionLabel, getOptionProperty, isString } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: !!getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (getOptionProperty(option, 'customOption')) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: menuProps.text\n      }, label));\n    }\n\n    if (getOptionProperty(option, 'paginationOption')) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: \"pagination-option-divider\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: // TODO: Fix how (aria-)labels are passed to `MenuItem`.\n        // `paginationText` can be a ReactNode.\n        isString(paginationText) ? paginationText : ''\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, menuProps, options.map(renderMenuItem));\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/react-bootstrap-typeahead/es/components/TypeaheadMenu.js"],"names":["_extends","_objectWithoutProperties","_excluded","PropTypes","React","Highlighter","Menu","MenuItem","getOptionLabel","getOptionProperty","isString","propTypes","newSelectionPrefix","node","paginationText","renderMenuItemChildren","func","defaultProps","option","props","createElement","search","text","labelKey","TypeaheadMenu","options","menuProps","renderMenuItem","position","label","menuItemProps","disabled","className","key","Fragment","Divider","map"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\"];\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Highlighter from './Highlighter';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport { getOptionLabel, getOptionProperty, isString } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: !!getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (getOptionProperty(option, 'customOption')) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: menuProps.text\n      }, label));\n    }\n\n    if (getOptionProperty(option, 'paginationOption')) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: \"pagination-option-divider\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: // TODO: Fix how (aria-)labels are passed to `MenuItem`.\n        // `paginationText` can be a ReactNode.\n        isString(paginationText) ? paginationText : ''\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, menuProps, options.map(renderMenuItem));\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;"]},"metadata":{},"sourceType":"module"}