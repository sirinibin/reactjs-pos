{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/ledger/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport PostingIndex from \"./../posting/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LedgerIndex(props) {\n  _s();\n\n  const cookies = new Cookies(); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false); //const selectedDate = new Date();\n\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  const [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //list\n\n  const [ledgerList, setLedgerList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Created By Expense Auto Suggestion\n\n  const [expenseOptions, setExpenseOptions] = useState([]);\n  const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]); //Created By Expense Auto Suggestion\n\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //Search params\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortLedger, setSortLedger] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + object[key];\n    }).join(\"&\");\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      page = 1;\n      searchParams[field] = \"\";\n      setPage(page);\n      list();\n      return;\n    }\n\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    value = format(d, \"MMM dd yyyy\");\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByExpenses(values);\n    } else if (field === \"category_id\") {\n      setSelectedExpenseCategories(values);\n    } else if (field === \"account_id\") {\n      setSelectedAccounts(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n  function list() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,store_id,reference_model,reference_code,journals,created_at\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    } // console.log(\"queryParams:\", queryParams);\n    //queryParams = encodeURIComponent(queryParams);\n\n\n    setIsListLoading(true);\n    fetch(\"/v1/ledger?\" + Select + queryParams + \"&sort=\" + sortLedger + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setLedgerList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length); //totalExpenses = data.meta.total;\n      //setTotalExpenses(totalExpenses);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortLedger = sortLedger === \"-\" ? \"\" : \"-\";\n    setSortLedger(sortLedger);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const [accountOptions, setAccountOptions] = useState([]);\n\n  async function suggestAccounts(searchTerm) {\n    console.log(\"Inside handle suggestAccounts\");\n    var params = {\n      search: searchTerm\n    };\n\n    if (cookies.get(\"store_id\")) {\n      params.store_id = cookies.get(\"store_id\");\n    }\n\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = `&${queryString}`;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,number,search_label,open,balance,debit_total,credit_total\";\n    let result = await fetch(`/v1/account?${Select}${queryString}`, requestOptions);\n    let data = await result.json();\n    setAccountOptions(data.result);\n  }\n\n  let [showAccountBalanceSheet, setShowAccountBalanceSheet] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState({});\n\n  function openBalanceSheetDialogue(id) {\n    console.log(\"inside get User\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/account/' + id, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get('content-type')) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      console.log(\"Response:\");\n      console.log(data); // model = data.result;\n\n      setSelectedAccount(data.result);\n      showAccountBalanceSheet = true;\n      setShowAccountBalanceSheet(true); //setModel({ ...model });\n    }).catch(error => {// setErrors(error);\n    });\n  }\n\n  const AccountBalanceSheetRef = useRef();\n\n  function handleAccountBalanceSheetClose() {\n    showAccountBalanceSheet = false;\n    setShowAccountBalanceSheet(false); //list();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Ledger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start\",\n                    children: \"No Expense to display\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  bexpense: \"solid 0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-start\",\n                  style: {\n                    border: \"solid 0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setIsRefreshInProcess(true);\n                      list();\n                    },\n                    variant: \"primary\",\n                    disabled: isRefreshInProcess,\n                    children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"bexpense\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-refresh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"visually-hidden\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-center\",\n                  children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"grow\",\n                    variant: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-end\",\n                  children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Size:\\xA0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: pageSize,\n                      onChange: e => {\n                        changePageSize(e.target.value);\n                      },\n                      className: \"form-control pull-right\",\n                      style: {\n                        bexpense: \"solid 1px\",\n                        bexpenseColor: \"silver\",\n                        width: \"55px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5\",\n                        children: \"5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10\",\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 444,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"20\",\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 447,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"40\",\n                        children: \"40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"50\",\n                        children: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"100\",\n                        children: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"200\",\n                        children: \"200\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"300\",\n                        children: \"300\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 452,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"500\",\n                        children: \"500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1000\",\n                        children: \"1000\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1500\",\n                        children: \"1500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 455,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  style: {\n                    bexpense: \"solid 0px\"\n                  },\n                  children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-start\",\n                      children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-end\",\n                      children: [\"page \", page, \" of \", totalPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                style: {\n                  overflowX: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-sm table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"journals.date\");\n                          },\n                          children: [\"Date\", sortField === \"journals.date\" && sortLedger === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 524,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"journals.date\" && sortLedger === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 527,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 513,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"journals.account_name\");\n                          },\n                          children: [\"Account\", sortField === \"journals.account_name\" && sortLedger === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 547,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"journals.account_name\" && sortLedger === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 550,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 536,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"journals.debit\");\n                          },\n                          children: [\"Debit\", sortField === \"journals.debit\" && sortLedger === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 567,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"journals.debit\" && sortLedger === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 570,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 556,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 555,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"journals.credit\");\n                          },\n                          children: [\"Credit\", sortField === \"journals.credit\" && sortLedger === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 587,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"journals.credit\" && sortLedger === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 590,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 576,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 575,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"reference_model\");\n                          },\n                          children: [\"Type\", sortField === \"reference_model\" && sortLedger === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 606,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"reference_model\" && sortLedger === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 609,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 595,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"reference_code\");\n                          },\n                          children: [\"ID\", sortField === \"reference_code\" && sortLedger === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 626,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"reference_code\" && sortLedger === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 629,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 615,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"190px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"date_str\",\n                          value: dateValue,\n                          selected: selectedDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              setDateValue(\"\");\n                              searchByDateField(\"date_str\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"date_str\", date);\n                            selectedDate = date;\n                            setSelectedDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 664,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowDateRange(!showDateRange),\n                          children: showDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 681,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 691,\n                          columnNumber: 53\n                        }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"from_date\",\n                            value: fromDateValue,\n                            selected: selectedFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setFromDateValue(\"\");\n                                searchByDateField(\"from_date\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"from_date\", date);\n                              selectedFromDate = date;\n                              setSelectedFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 696,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"to_date\",\n                            value: toDateValue,\n                            selected: selectedToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setToDateValue(\"\");\n                                searchByDateField(\"to_date\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"to_date\", date);\n                              selectedToDate = date;\n                              setSelectedToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 714,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 694,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          minWidth: \"250px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"account_id\",\n                          labelKey: \"search_label\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"account_id\", selectedItems);\n                          },\n                          options: accountOptions,\n                          placeholder: \"Name / mob / acc no.\",\n                          selected: selectedAccounts,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestAccounts(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 735,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 734,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          minWidth: \"130px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"debit\",\n                          onChange: e => searchByFieldValue(\"debit\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 755,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 754,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          minWidth: \"130px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"credit\",\n                          onChange: e => searchByFieldValue(\"credit\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 765,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 764,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"form-control\",\n                          onChange: e => searchByFieldValue(\"reference_model\", e.target.value),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"All\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 778,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"sales\",\n                            children: \"Sales\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 779,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"customer_deposit\",\n                            children: \"Customer deposit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 780,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"customer_withdrawal\",\n                            children: \"Customer withdrawl\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 781,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 775,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 774,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"reference_code\",\n                          onChange: e => searchByFieldValue(\"reference_code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 786,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 785,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 661,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"text-center\",\n                    children: ledgerList && ledgerList.map(ledger => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: 4,\n                        children: ledger.journals && ledger.journals.map(journal => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          style: {\n                            border: \"solid 1px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              border: \"solid 1px\",\n                              minWidth: \"184px\"\n                            },\n                            children: format(new Date(journal.date), \"MMM dd yyyy h:mma\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 885,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              border: \"solid 1px\",\n                              minWidth: \"250px\",\n                              maxWidth: \"250px\",\n                              textAlign: \"left\",\n                              paddingLeft: journal.debit_or_credit == \"credit\" ? \"60px\" : \"30px\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              variant: \"link\",\n                              onClick: () => {\n                                openBalanceSheetDialogue(journal.account_id);\n                              },\n                              children: journal.debit_or_credit == \"credit\" ? \"     To \" + journal.account_name + \" A/c #\" + journal.account_number + \"  Cr.\" : \"\" + journal.account_name + \" A/c #\" + journal.account_number + \" Dr.\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 887,\n                              columnNumber: 77\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 886,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              border: \"solid 1px\",\n                              minWidth: \"135px\",\n                              maxWidth: \"135px\"\n                            },\n                            children: journal.debit_or_credit == \"debit\" ? journal.debit : \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 893,\n                            columnNumber: 73\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              border: \"solid 1px\",\n                              minWidth: \"130px\",\n                              maxWidth: \"130px\"\n                            },\n                            children: journal.debit_or_credit == \"credit\" ? journal.credit : \"\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 894,\n                            columnNumber: 73\n                          }, this)]\n                        }, journal.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 884,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 881,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"155px\",\n                          maxWidth: \"155px\"\n                        },\n                        children: ledger.reference_model\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 899,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: ledger.reference_code\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 900,\n                        columnNumber: 57\n                      }, this)]\n                    }, ledger.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 870,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 33\n              }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                breakLabel: \"...\",\n                nextLabel: \"next >\",\n                onPageChange: event => {\n                  changePage(event.selected + 1);\n                },\n                pageRangeDisplayed: 5,\n                pageCount: totalPages,\n                previousLabel: \"< previous\",\n                renderOnZeroPageCount: null,\n                className: \"pagination  flex-wrap\",\n                pageClassName: \"page-item\",\n                pageLinkClassName: \"page-link\",\n                activeClassName: \"active\",\n                previousClassName: \"page-item\",\n                nextClassName: \"page-item\",\n                previousLinkClassName: \"page-link\",\n                nextLinkClassName: \"page-link\",\n                forcePage: page - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 47\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showAccountBalanceSheet,\n      size: \"lg\",\n      onHide: handleAccountBalanceSheetClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Balance sheet of \", selectedAccount.name + \" A/c (#\" + selectedAccount.number + \")\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleAccountBalanceSheetClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(PostingIndex, {\n          ref: AccountBalanceSheetRef,\n          showToastMessage: props.showToastMessage,\n          account: selectedAccount,\n          refreshLedgerList: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LedgerIndex, \"IxJx+NYogGQy6ju24RgQBzrbz50=\");\n\n_c = LedgerIndex;\nexport default LedgerIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"LedgerIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/ledger/index.js"],"names":["React","useState","useEffect","useRef","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","Modal","ReactPaginate","NumberFormat","PostingIndex","LedgerIndex","props","cookies","showDateRange","setShowDateRange","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","ledgerList","setLedgerList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","expenseOptions","setExpenseOptions","selectedCreatedByExpenses","setSelectedCreatedByExpenses","categoryOptions","setCategoryOptions","selectedExpenseCategories","setSelectedExpenseCategories","list","searchParams","setSearchParams","sortField","setSortField","sortLedger","setSortLedger","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","searchByDateField","d","toUTCString","selectedAccounts","setSelectedAccounts","searchByMultipleValuesField","values","model","id","totalExpenses","setTotalExpenses","requestOptions","method","headers","Authorization","get","Select","store_id","diff","getTimezoneOffset","parseFloat","queryParams","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","pageCount","parseInt","total_count","length","catch","console","log","sort","changePageSize","size","changePage","newPage","accountOptions","setAccountOptions","suggestAccounts","searchTerm","params","search","queryString","showAccountBalanceSheet","setShowAccountBalanceSheet","selectedAccount","setSelectedAccount","openBalanceSheetDialogue","AccountBalanceSheetRef","handleAccountBalanceSheetClose","bexpense","border","e","target","bexpenseColor","width","event","selected","overflowX","textDecoration","cursor","date","color","minWidth","selectedItems","ledger","journals","journal","maxWidth","textAlign","paddingLeft","debit_or_credit","account_id","account_name","account_number","debit","credit","reference_model","reference_code","name","number","showToastMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAgCC,KAAhC,QAA6C,iBAA7C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAMC,OAAO,GAAG,IAAIb,OAAJ,EAAhB,CAFwB,CAIxB;;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD,CALwB,CAMxB;;AACA,MAAI,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,IAAIqB,IAAJ,EAAD,CAA9C;AACA,MAAI,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAAC,IAAIqB,IAAJ,EAAD,CAAtD;AACA,MAAI,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,IAAIqB,IAAJ,EAAD,CAAlD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC4B,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC8B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC,EAAD,CAA9C,CAZwB,CAcxB;;AACA,QAAM,CAACgC,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,EAAD,CAA5C,CAfwB,CAiBxB;;AACA,MAAI,CAACkC,QAAD,EAAWC,WAAX,IAA0BnC,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAI,CAACoC,IAAD,EAAOC,OAAP,IAAkBrC,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACsC,UAAD,EAAaC,aAAb,IAA8BvC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACwC,UAAD,EAAaC,aAAb,IAA8BzC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC0C,qBAAD,EAAwBC,wBAAxB,IAAoD3C,QAAQ,CAAC,CAAD,CAAlE;AACA,QAAM,CAAC4C,MAAD,EAASC,SAAT,IAAsB7C,QAAQ,CAAC,CAAD,CAApC,CAvBwB,CA0BxB;;AACA,QAAM,CAAC8C,sBAAD,EAAyBC,yBAAzB,IAAsD/C,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACgD,cAAD,EAAiBC,iBAAjB,IAAsCjD,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACkD,kBAAD,EAAqBC,qBAArB,IAA8CnD,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACoD,gBAAD,EAAmBC,mBAAnB,IAA0CrD,QAAQ,CAAC,EAAD,CAAxD,CA9BwB,CAgCxB;;AACA,QAAM,CAACsD,aAAD,EAAgBC,gBAAhB,IAAoCvD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACwD,kBAAD,EAAqBC,qBAArB,IAA8CzD,QAAQ,CAAC,KAAD,CAA5D,CAlCwB,CAoCxB;;AACA,QAAM,CAAC0D,cAAD,EAAiBC,iBAAjB,IAAsC3D,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC4D,yBAAD,EAA4BC,4BAA5B,IAA4D7D,QAAQ,CAAC,EAAD,CAA1E,CAtCwB,CAwCxB;;AACA,QAAM,CAAC8D,eAAD,EAAkBC,kBAAlB,IAAwC/D,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACgE,yBAAD,EAA4BC,4BAA5B,IAA4DjE,QAAQ,CAAC,EAAD,CAA1E;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZiE,IAAAA,IAAI,GADQ,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT,CA7CwB,CAkDxB;;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCpE,QAAQ,CAAC,EAAD,CAAhD;AACA,MAAI,CAACqE,SAAD,EAAYC,YAAZ,IAA4BtE,QAAQ,CAAC,YAAD,CAAxC;AACA,MAAI,CAACuE,UAAD,EAAaC,aAAb,IAA8BxE,QAAQ,CAAC,GAAD,CAA1C;;AAEA,WAASyE,yBAAT,CAAmCC,MAAnC,EAA2C;AACvC,WAAOC,MAAM,CAACC,IAAP,CAAYF,MAAZ,EACFG,GADE,CACE,UAAUC,GAAV,EAAe;AAChB,aAAQ,UAASA,GAAI,IAAd,GAAoBJ,MAAM,CAACI,GAAD,CAAjC;AACH,KAHE,EAIFC,IAJE,CAIG,GAJH,CAAP;AAKH;;AAED,WAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,KAAnC,EAA0C;AACtCf,IAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AAEA9C,IAAAA,IAAI,GAAG,CAAP;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA8B,IAAAA,IAAI;AACP;;AAED,WAASiB,iBAAT,CAA2BF,KAA3B,EAAkCC,KAAlC,EAAyC;AACrC,QAAI,CAACA,KAAL,EAAY;AACR9C,MAAAA,IAAI,GAAG,CAAP;AACA+B,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsB,EAAtB;AACA5C,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA8B,MAAAA,IAAI;AACJ;AACH;;AAED,QAAIkB,CAAC,GAAG,IAAI/D,IAAJ,CAAS6D,KAAT,CAAR;AACAE,IAAAA,CAAC,GAAG,IAAI/D,IAAJ,CAAS+D,CAAC,CAACC,WAAF,EAAT,CAAJ;AAEAH,IAAAA,KAAK,GAAG7E,MAAM,CAAC+E,CAAD,EAAI,aAAJ,CAAd;;AAEA,QAAIH,KAAK,KAAK,UAAd,EAA0B;AACtBtD,MAAAA,YAAY,CAACuD,KAAD,CAAZ;AACArD,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAoC,MAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4B,EAA5B;AACAA,MAAAA,YAAY,CAAC,SAAD,CAAZ,GAA0B,EAA1B;AACAA,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AACH,KAPD,MAOO,IAAID,KAAK,KAAK,WAAd,EAA2B;AAC9BpD,MAAAA,gBAAgB,CAACqD,KAAD,CAAhB;AACAvD,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAwC,MAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuB,EAAvB;AACAA,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AACH,KALM,MAKA,IAAID,KAAK,KAAK,SAAd,EAAyB;AAC5BlD,MAAAA,cAAc,CAACmD,KAAD,CAAd;AACAvD,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAwC,MAAAA,YAAY,CAAC,MAAD,CAAZ,GAAuB,EAAvB;AACAA,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AACH,KALM,MAKA,IAAID,KAAK,KAAK,YAAd,EAA4B;AAC/BhC,MAAAA,iBAAiB,CAACiC,KAAD,CAAjB;AACA/B,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACAE,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAc,MAAAA,YAAY,CAAC,iBAAD,CAAZ,GAAkC,EAAlC;AACAA,MAAAA,YAAY,CAAC,eAAD,CAAZ,GAAgC,EAAhC;AACAA,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AACH;;AACD,QAAID,KAAK,KAAK,iBAAd,EAAiC;AAC7B9B,MAAAA,qBAAqB,CAAC+B,KAAD,CAArB;AACAjC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAkB,MAAAA,YAAY,CAAC,YAAD,CAAZ,GAA6B,EAA7B;AACAA,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AACH,KALD,MAKO,IAAID,KAAK,KAAK,eAAd,EAA+B;AAClC5B,MAAAA,mBAAmB,CAAC6B,KAAD,CAAnB;AACAjC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAkB,MAAAA,YAAY,CAAC,YAAD,CAAZ,GAA6B,EAA7B;AACAA,MAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBC,KAAtB;AACH;;AAED9C,IAAAA,IAAI,GAAG,CAAP;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEA8B,IAAAA,IAAI;AACP;;AAED,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CvF,QAAQ,CAAC,EAAD,CAAxD;;AAEA,WAASwF,2BAAT,CAAqCP,KAArC,EAA4CQ,MAA5C,EAAoD;AAChD,QAAIR,KAAK,KAAK,YAAd,EAA4B;AACxBpB,MAAAA,4BAA4B,CAAC4B,MAAD,CAA5B;AACH,KAFD,MAEO,IAAIR,KAAK,KAAK,aAAd,EAA6B;AAChChB,MAAAA,4BAA4B,CAACwB,MAAD,CAA5B;AACH,KAFM,MAEA,IAAIR,KAAK,KAAK,YAAd,EAA4B;AAC/BM,MAAAA,mBAAmB,CAACE,MAAD,CAAnB;AACH;;AAEDtB,IAAAA,YAAY,CAACc,KAAD,CAAZ,GAAsBN,MAAM,CAACc,MAAP,CAAcA,MAAd,EACjBZ,GADiB,CACb,UAAUa,KAAV,EAAiB;AAClB,aAAOA,KAAK,CAACC,EAAb;AACH,KAHiB,EAIjBZ,IAJiB,CAIZ,GAJY,CAAtB;AAMA3C,IAAAA,IAAI,GAAG,CAAP;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEA8B,IAAAA,IAAI;AACP;;AAED,MAAI,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC7F,QAAQ,CAAC,IAAD,CAAhD;;AAEA,WAASkE,IAAT,GAAgB;AACZ,UAAM4B,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAEjF,OAAO,CAACkF,GAAR,CAAY,cAAZ;AAFV;AAFU,KAAvB;AAOA,QAAIC,MAAM,GACN,uEADJ;;AAGA,QAAInF,OAAO,CAACkF,GAAR,CAAY,UAAZ,CAAJ,EAA6B;AACzB/B,MAAAA,YAAY,CAACiC,QAAb,GAAwBpF,OAAO,CAACkF,GAAR,CAAY,UAAZ,CAAxB;AACH;;AAED,UAAMd,CAAC,GAAG,IAAI/D,IAAJ,EAAV;AACA,QAAIgF,IAAI,GAAGjB,CAAC,CAACkB,iBAAF,EAAX;AACAnC,IAAAA,YAAY,CAAC,iBAAD,CAAZ,GAAkCoC,UAAU,CAACF,IAAI,GAAG,EAAR,CAA5C;AACAlC,IAAAA,YAAY,CAAC,OAAD,CAAZ,GAAwB,GAAxB;AAEAC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACA,QAAIqC,WAAW,GAAG/B,yBAAyB,CAACN,YAAD,CAA3C;;AACA,QAAIqC,WAAW,KAAK,EAApB,EAAwB;AACpBA,MAAAA,WAAW,GAAG,MAAMA,WAApB;AACH,KAxBW,CA0BZ;AACA;;;AAEAjD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAkD,IAAAA,KAAK,CACD,gBACAN,MADA,GAEAK,WAFA,GAGA,QAHA,GAIAjC,UAJA,GAKAF,SALA,GAMA,QANA,GAOAjC,IAPA,GAQA,SARA,GASAF,QAVC,EAWD4D,cAXC,CAAL,CAaKY,IAbL,CAaU,MAAOC,QAAP,IAAoB;AAAA;;AACtB,YAAMC,MAAM,4BAAGD,QAAQ,CAACX,OAAT,CACVE,GADU,CACN,cADM,CAAH,0DAAG,sBAETW,QAFS,CAEA,kBAFA,CAAf;AAGA,YAAMC,IAAI,GAAGF,MAAM,KAAK,MAAMD,QAAQ,CAACI,IAAT,EAAX,CAAnB,CAJsB,CAMtB;;AACA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAGH,IAAI,IAAIA,IAAI,CAACI,MAA3B;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH;;AAED1D,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAxB,MAAAA,aAAa,CAAC6E,IAAI,CAACO,MAAN,CAAb;AAEA,UAAIC,SAAS,GAAGC,QAAQ,CAAC,CAACT,IAAI,CAACU,WAAL,GAAmBtF,QAAnB,GAA8B,CAA/B,IAAoCA,QAArC,CAAxB;AAEAK,MAAAA,aAAa,CAAC+E,SAAD,CAAb;AACA7E,MAAAA,aAAa,CAACqE,IAAI,CAACU,WAAN,CAAb;AACA3E,MAAAA,SAAS,CAAC,CAACT,IAAI,GAAG,CAAR,IAAaF,QAAd,CAAT;AACAS,MAAAA,wBAAwB,CAACmE,IAAI,CAACO,MAAL,CAAYI,MAAb,CAAxB,CArBsB,CAuBtB;AACA;AAEH,KAvCL,EAwCKC,KAxCL,CAwCYT,KAAD,IAAW;AACd1D,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAE,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAkE,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,KA5CL;AA6CH;;AAED,WAASY,IAAT,CAAc5C,KAAd,EAAqB;AACjBZ,IAAAA,SAAS,GAAGY,KAAZ;AACAX,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAE,IAAAA,UAAU,GAAGA,UAAU,KAAK,GAAf,GAAqB,EAArB,GAA0B,GAAvC;AACAC,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAL,IAAAA,IAAI;AACP;;AAED,WAAS4D,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B7F,IAAAA,QAAQ,GAAGqF,QAAQ,CAACQ,IAAD,CAAnB;AACA5F,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAgC,IAAAA,IAAI;AACP;;AAED,WAAS8D,UAAT,CAAoBC,OAApB,EAA6B;AACzB7F,IAAAA,IAAI,GAAGmF,QAAQ,CAACU,OAAD,CAAf;AACA5F,IAAAA,OAAO,CAACD,IAAD,CAAP;AACA8B,IAAAA,IAAI;AACP;;AAED,QAAM,CAACgE,cAAD,EAAiBC,iBAAjB,IAAsCnI,QAAQ,CAAC,EAAD,CAApD;;AAEA,iBAAeoI,eAAf,CAA+BC,UAA/B,EAA2C;AACvCV,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AAEA,QAAIU,MAAM,GAAG;AACTC,MAAAA,MAAM,EAAEF;AADC,KAAb;;AAIA,QAAIrH,OAAO,CAACkF,GAAR,CAAY,UAAZ,CAAJ,EAA6B;AACzBoC,MAAAA,MAAM,CAAClC,QAAP,GAAkBpF,OAAO,CAACkF,GAAR,CAAY,UAAZ,CAAlB;AACH;;AAED,QAAIsC,WAAW,GAAG/D,yBAAyB,CAAC6D,MAAD,CAA3C;;AACA,QAAIE,WAAW,KAAK,EAApB,EAAwB;AACpBA,MAAAA,WAAW,GAAI,IAAGA,WAAY,EAA9B;AACH;;AAED,UAAM1C,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAEjF,OAAO,CAACkF,GAAR,CAAY,cAAZ;AAFV;AAFU,KAAvB;AAQA,QAAIC,MAAM,GAAG,gFAAb;AACA,QAAIkB,MAAM,GAAG,MAAMZ,KAAK,CACnB,eAAcN,MAAO,GAAEqC,WAAY,EADhB,EAEpB1C,cAFoB,CAAxB;AAIA,QAAIgB,IAAI,GAAG,MAAMO,MAAM,CAACN,IAAP,EAAjB;AAEAoB,IAAAA,iBAAiB,CAACrB,IAAI,CAACO,MAAN,CAAjB;AACH;;AAED,MAAI,CAACoB,uBAAD,EAA0BC,0BAA1B,IAAwD1I,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAAC2I,eAAD,EAAkBC,kBAAlB,IAAwC5I,QAAQ,CAAC,EAAD,CAAtD;;AAEA,WAAS6I,wBAAT,CAAkClD,EAAlC,EAAsC;AAGlCgC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAM9B,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBhF,OAAO,CAACkF,GAAR,CAAY,cAAZ;AAFZ;AAFU,KAAvB;AAQAO,IAAAA,KAAK,CAAC,iBAAiBd,EAAlB,EAAsBG,cAAtB,CAAL,CACKY,IADL,CACU,MAAMC,QAAN,IAAkB;AAAA;;AAEpB,YAAMC,MAAM,6BAAGD,QAAQ,CAACX,OAAT,CAAiBE,GAAjB,CAAqB,cAArB,CAAH,2DAAG,uBAAsCW,QAAtC,CAA+C,kBAA/C,CAAf;AACA,YAAMC,IAAI,GAAGF,MAAM,KAAI,MAAMD,QAAQ,CAACI,IAAT,EAAV,CAAnB,CAHoB,CAKpB;;AACA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,MAA5B;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH;;AAEDU,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ,EAZoB,CAcpB;;AAEA8B,MAAAA,kBAAkB,CAAC9B,IAAI,CAACO,MAAN,CAAlB;AACAoB,MAAAA,uBAAuB,GAAG,IAA1B;AACAC,MAAAA,0BAA0B,CAAC,IAAD,CAA1B,CAlBoB,CAqBpB;AACH,KAvBL,EAwBKhB,KAxBL,CAwBWT,KAAK,IAAI,CACZ;AACH,KA1BL;AA2BH;;AAED,QAAM6B,sBAAsB,GAAG5I,MAAM,EAArC;;AACA,WAAS6I,8BAAT,GAA0C;AACtCN,IAAAA,uBAAuB,GAAG,KAA1B;AACAC,IAAAA,0BAA0B,CAAC,KAAD,CAA1B,CAFsC,CAGtC;AACH;;AAED,sBACI;AAAA,4BAuBI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCAMI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,0BACKlG,UAAU,KAAK,CAAf,iBACG;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,yCACI;AAAG,oBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,sBADJ,eAQI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAqB,gBAAA,KAAK,EAAE;AAAEwG,kBAAAA,QAAQ,EAAE;AAAZ,iBAA5B;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,gBAAf;AAAgC,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,MAAM,EAAE;AAAV,mBAAvC;AAAA,yCACI,QAAC,MAAD;AACI,oBAAA,OAAO,EAAE,MAAM;AACXxF,sBAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAS,sBAAAA,IAAI;AACP,qBAJL;AAKI,oBAAA,OAAO,EAAC,SALZ;AAMI,oBAAA,QAAQ,EAAEV,kBANd;AAAA,+BAQKA,kBAAkB,gBACf,QAAC,OAAD;AACI,sBAAA,EAAE,EAAC,MADP;AAEI,sBAAA,SAAS,EAAC,UAFd;AAGI,sBAAA,IAAI,EAAC,IAHT;AAII,sBAAA,IAAI,EAAC,QAJT;AAKI,qCAAa;AALjB;AAAA;AAAA;AAAA;AAAA,4BADe,gBASf;AAAG,sBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,4BAjBR,eAmBI;AAAM,sBAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAwBI;AAAK,kBAAA,SAAS,EAAC,iBAAf;AAAA,4BACKF,aAAa,iBACV,QAAC,OAAD;AAAS,oBAAA,SAAS,EAAC,MAAnB;AAA0B,oBAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,wBAxBJ,eA6BI;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,4BACKd,UAAU,GAAG,CAAb,iBACG;AAAA,4CACI;AAAO,sBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI;AACI,sBAAA,KAAK,EAAEN,QADX;AAEI,sBAAA,QAAQ,EAAGgH,CAAD,IAAO;AACbpB,wBAAAA,cAAc,CAACoB,CAAC,CAACC,MAAF,CAASjE,KAAV,CAAd;AACH,uBAJL;AAKI,sBAAA,SAAS,EAAC,yBALd;AAMI,sBAAA,KAAK,EAAE;AACH8D,wBAAAA,QAAQ,EAAE,WADP;AAEHI,wBAAAA,aAAa,EAAE,QAFZ;AAGHC,wBAAAA,KAAK,EAAE;AAHJ,uBANX;AAAA,8CAYI;AAAQ,wBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZJ,eAeI;AAAQ,wBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfJ,eAkBI;AAAQ,wBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAlBJ,eAmBI;AAAQ,wBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAnBJ,eAoBI;AAAQ,wBAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBJ,eAqBI;AAAQ,wBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArBJ,eAsBI;AAAQ,wBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAtBJ,eAuBI;AAAQ,wBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAvBJ,eAwBI;AAAQ,wBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAxBJ,eAyBI;AAAQ,wBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAzBJ,eA0BI;AAAQ,wBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,wBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eA0EI;AAAA;AAAA;AAAA;AAAA,sBA1EJ,eA2EI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAqB,kBAAA,KAAK,EAAE;AAAEL,oBAAAA,QAAQ,EAAE;AAAZ,mBAA5B;AAAA,4BACK1G,UAAU,gBAAG,QAAC,aAAD;AACV,oBAAA,UAAU,EAAC,KADD;AAEV,oBAAA,SAAS,EAAC,QAFA;AAGV,oBAAA,YAAY,EAAGgH,KAAD,IAAW;AACrBtB,sBAAAA,UAAU,CAACsB,KAAK,CAACC,QAAN,GAAiB,CAAlB,CAAV;AACH,qBALS;AAMV,oBAAA,kBAAkB,EAAE,CANV;AAOV,oBAAA,SAAS,EAAEjH,UAPD;AAQV,oBAAA,aAAa,EAAC,YARJ;AASV,oBAAA,qBAAqB,EAAE,IATb;AAUV,oBAAA,SAAS,EAAC,uBAVA;AAWV,oBAAA,aAAa,EAAC,WAXJ;AAYV,oBAAA,iBAAiB,EAAC,WAZR;AAaV,oBAAA,eAAe,EAAC,QAbN;AAcV,oBAAA,iBAAiB,EAAC,WAdR;AAeV,oBAAA,aAAa,EAAC,WAfJ;AAgBV,oBAAA,qBAAqB,EAAC,WAhBZ;AAiBV,oBAAA,iBAAiB,EAAC,WAjBR;AAkBV,oBAAA,SAAS,EAAEF,IAAI,GAAG;AAlBR;AAAA;AAAA;AAAA;AAAA,0BAAH,GAmBN;AApBT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA3EJ,eAmGI;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,0BACKI,UAAU,GAAG,CAAb,iBACG;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,2CACI;AAAG,sBAAA,SAAS,EAAC,YAAb;AAAA,6CACaI,MAAM,GAAG,CADtB,OAC0BA,MAAM,GAAGF,qBADnC,SAC6D,GAD7D,EAEKF,UAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAQI;AAAK,oBAAA,SAAS,EAAC,cAAf;AAAA,2CACI;AAAG,sBAAA,SAAS,EAAC,UAAb;AAAA,0CACUJ,IADV,UACoBE,UADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,sBAnGJ,eAqHI;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAkC,gBAAA,KAAK,EAAE;AAAEkH,kBAAAA,SAAS,EAAE;AAAb,iBAAzC;AAAA,uCACI;AAAO,kBAAA,SAAS,EAAC,6CAAjB;AAAA,0CACI;AAAA,2CACI;AAAI,sBAAA,SAAS,EAAC,aAAd;AAAA,8CAII;AAAA,+CACI;AACI,0BAAA,KAAK,EAAE;AACHC,4BAAAA,cAAc,EAAE,WADb;AAEHC,4BAAAA,MAAM,EAAE;AAFL,2BADX;AAKI,0BAAA,OAAO,EAAE,MAAM;AACX7B,4BAAAA,IAAI,CAAC,eAAD,CAAJ;AACH,2BAPL;AAAA,6CAUKxD,SAAS,KAAK,eAAd,IAAiCE,UAAU,KAAK,GAAhD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAZR,EAaKF,SAAS,KAAK,eAAd,IAAiCE,UAAU,KAAK,EAAhD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAJJ,eA2BI;AAAA,+CACI;AACI,0BAAA,KAAK,EAAE;AACHkF,4BAAAA,cAAc,EAAE,WADb;AAEHC,4BAAAA,MAAM,EAAE;AAFL,2BADX;AAKI,0BAAA,OAAO,EAAE,MAAM;AACX7B,4BAAAA,IAAI,CAAC,uBAAD,CAAJ;AACH,2BAPL;AAAA,gDAUKxD,SAAS,KAAK,uBAAd,IAAyCE,UAAU,KAAK,GAAxD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAZR,EAaKF,SAAS,KAAK,uBAAd,IAAyCE,UAAU,KAAK,EAAxD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BA3BJ,eA+CI;AAAA,+CACI;AACI,0BAAA,KAAK,EAAE;AACHkF,4BAAAA,cAAc,EAAE,WADb;AAEHC,4BAAAA,MAAM,EAAE;AAFL,2BADX;AAKI,0BAAA,OAAO,EAAE,MAAM;AACX7B,4BAAAA,IAAI,CAAC,gBAAD,CAAJ;AACH,2BAPL;AAAA,8CAUKxD,SAAS,KAAK,gBAAd,IAAkCE,UAAU,KAAK,GAAjD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAZR,EAaKF,SAAS,KAAK,gBAAd,IAAkCE,UAAU,KAAK,EAAjD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BA/CJ,eAmEI;AAAA,+CACI;AACI,0BAAA,KAAK,EAAE;AACHkF,4BAAAA,cAAc,EAAE,WADb;AAEHC,4BAAAA,MAAM,EAAE;AAFL,2BADX;AAKI,0BAAA,OAAO,EAAE,MAAM;AACX7B,4BAAAA,IAAI,CAAC,iBAAD,CAAJ;AACH,2BAPL;AAAA,+CAUKxD,SAAS,KAAK,iBAAd,IAAmCE,UAAU,KAAK,GAAlD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAZR,EAaKF,SAAS,KAAK,iBAAd,IAAmCE,UAAU,KAAK,EAAlD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAnEJ,eAsFI;AAAA,+CACI;AACI,0BAAA,KAAK,EAAE;AACHkF,4BAAAA,cAAc,EAAE,WADb;AAEHC,4BAAAA,MAAM,EAAE;AAFL,2BADX;AAKI,0BAAA,OAAO,EAAE,MAAM;AACX7B,4BAAAA,IAAI,CAAC,iBAAD,CAAJ;AACH,2BAPL;AAAA,6CAUKxD,SAAS,KAAK,iBAAd,IAAmCE,UAAU,KAAK,GAAlD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAZR,EAaKF,SAAS,KAAK,iBAAd,IAAmCE,UAAU,KAAK,EAAlD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAtFJ,eA0GI;AAAA,+CACI;AACI,0BAAA,KAAK,EAAE;AACHkF,4BAAAA,cAAc,EAAE,WADb;AAEHC,4BAAAA,MAAM,EAAE;AAFL,2BADX;AAKI,0BAAA,OAAO,EAAE,MAAM;AACX7B,4BAAAA,IAAI,CAAC,gBAAD,CAAJ;AACH,2BAPL;AAAA,2CAUKxD,SAAS,KAAK,gBAAd,IAAkCE,UAAU,KAAK,GAAjD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAZR,EAaKF,SAAS,KAAK,gBAAd,IAAkCE,UAAU,KAAK,EAAjD,gBACG;AAAG,4BAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kCADH,GAEG,IAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BA1GJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eA0JI;AAAA,2CACI;AAAI,sBAAA,SAAS,EAAC,aAAd;AAAA,8CAEI;AAAI,wBAAA,KAAK,EAAE;AAAE8E,0BAAAA,KAAK,EAAE;AAAT,yBAAX;AAAA,gDACI,QAAC,UAAD;AACI,0BAAA,EAAE,EAAC,UADP;AAEI,0BAAA,KAAK,EAAE3H,SAFX;AAGI,0BAAA,QAAQ,EAAEP,YAHd;AAII,0BAAA,SAAS,EAAC,cAJd;AAKI,0BAAA,UAAU,EAAC,aALf;AAMI,0BAAA,QAAQ,EAAGwI,IAAD,IAAU;AAChB,gCAAI,CAACA,IAAL,EAAW;AACPhI,8BAAAA,YAAY,CAAC,EAAD,CAAZ;AACAwD,8BAAAA,iBAAiB,CAAC,UAAD,EAAa,EAAb,CAAjB;AACA;AACH;;AACDA,4BAAAA,iBAAiB,CAAC,UAAD,EAAawE,IAAb,CAAjB;AACAxI,4BAAAA,YAAY,GAAGwI,IAAf;AACAvI,4BAAAA,eAAe,CAACuI,IAAD,CAAf;AACH;AAfL;AAAA;AAAA;AAAA;AAAA,gCADJ,eAkBI;AACI,0BAAA,KAAK,EAAE;AACHC,4BAAAA,KAAK,EAAE,MADJ;AAEHH,4BAAAA,cAAc,EAAE,WAFb;AAGHC,4BAAAA,MAAM,EAAE;AAHL,2BADX;AAMI,0BAAA,OAAO,EAAGR,CAAD,IAAOhI,gBAAgB,CAAC,CAACD,aAAF,CANpC;AAAA,oCAQKA,aAAa,GAAG,QAAH,GAAc;AARhC;AAAA;AAAA;AAAA;AAAA,gCAlBJ,eA4BI;AAAA;AAAA;AAAA;AAAA,gCA5BJ,EA8BKA,aAAa,gBACV;AAAM,0BAAA,SAAS,EAAC,WAAhB;AAAA,8CACU,GADV,eAEI,QAAC,UAAD;AACI,4BAAA,EAAE,EAAC,WADP;AAEI,4BAAA,KAAK,EAAEW,aAFX;AAGI,4BAAA,QAAQ,EAAEN,gBAHd;AAII,4BAAA,SAAS,EAAC,cAJd;AAKI,4BAAA,UAAU,EAAC,aALf;AAMI,4BAAA,QAAQ,EAAGqI,IAAD,IAAU;AAChB,kCAAI,CAACA,IAAL,EAAW;AACP9H,gCAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAsD,gCAAAA,iBAAiB,CAAC,WAAD,EAAc,EAAd,CAAjB;AACA;AACH;;AACDA,8BAAAA,iBAAiB,CAAC,WAAD,EAAcwE,IAAd,CAAjB;AACArI,8BAAAA,gBAAgB,GAAGqI,IAAnB;AACApI,8BAAAA,mBAAmB,CAACoI,IAAD,CAAnB;AACH;AAfL;AAAA;AAAA;AAAA;AAAA,kCAFJ,SAmBQ,GAnBR,eAoBI,QAAC,UAAD;AACI,4BAAA,EAAE,EAAC,SADP;AAEI,4BAAA,KAAK,EAAE7H,WAFX;AAGI,4BAAA,QAAQ,EAAEN,cAHd;AAII,4BAAA,SAAS,EAAC,cAJd;AAKI,4BAAA,UAAU,EAAC,aALf;AAMI,4BAAA,QAAQ,EAAGmI,IAAD,IAAU;AAChB,kCAAI,CAACA,IAAL,EAAW;AACP5H,gCAAAA,cAAc,CAAC,EAAD,CAAd;AACAoD,gCAAAA,iBAAiB,CAAC,SAAD,EAAY,EAAZ,CAAjB;AACA;AACH;;AACDA,8BAAAA,iBAAiB,CAAC,SAAD,EAAYwE,IAAZ,CAAjB;AACAnI,8BAAAA,cAAc,GAAGmI,IAAjB;AACAlI,8BAAAA,iBAAiB,CAACkI,IAAD,CAAjB;AACH;AAfL;AAAA;AAAA;AAAA;AAAA,kCApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCADU,GAuCV,IArER;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,eAyEI;AAAI,wBAAA,KAAK,EAAE;AAAEE,0BAAAA,QAAQ,EAAE;AAAZ,yBAAX;AAAA,+CACI,QAAC,SAAD;AACI,0BAAA,EAAE,EAAC,YADP;AAEI,0BAAA,QAAQ,EAAC,cAFb;AAGI,0BAAA,QAAQ,EAAGC,aAAD,IAAmB;AACzBtE,4BAAAA,2BAA2B,CACvB,YADuB,EAEvBsE,aAFuB,CAA3B;AAIH,2BARL;AASI,0BAAA,OAAO,EAAE5B,cATb;AAUI,0BAAA,WAAW,EAAC,sBAVhB;AAWI,0BAAA,QAAQ,EAAE5C,gBAXd;AAYI,0BAAA,mBAAmB,EAAE,IAZzB;AAaI,0BAAA,aAAa,EAAE,CAAC+C,UAAD,EAAaa,CAAb,KAAmB;AAC9Bd,4BAAAA,eAAe,CAACC,UAAD,CAAf;AACH,2BAfL;AAgBI,0BAAA,QAAQ;AAhBZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAzEJ,eA6FI;AAAI,wBAAA,KAAK,EAAE;AAAEwB,0BAAAA,QAAQ,EAAE;AAAZ,yBAAX;AAAA,+CACI;AACI,0BAAA,IAAI,EAAC,MADT;AAEI,0BAAA,EAAE,EAAC,OAFP;AAGI,0BAAA,QAAQ,EAAGX,CAAD,IACNlE,kBAAkB,CAAC,OAAD,EAAUkE,CAAC,CAACC,MAAF,CAASjE,KAAnB,CAJ1B;AAMI,0BAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BA7FJ,eAuGI;AAAI,wBAAA,KAAK,EAAE;AAAE2E,0BAAAA,QAAQ,EAAE;AAAZ,yBAAX;AAAA,+CACI;AACI,0BAAA,IAAI,EAAC,MADT;AAEI,0BAAA,EAAE,EAAC,QAFP;AAGI,0BAAA,QAAQ,EAAGX,CAAD,IACNlE,kBAAkB,CAAC,QAAD,EAAWkE,CAAC,CAACC,MAAF,CAASjE,KAApB,CAJ1B;AAMI,0BAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAvGJ,eAiHI;AAAA,+CACI;AAAQ,0BAAA,SAAS,EAAC,cAAlB;AAAiC,0BAAA,QAAQ,EAAGgE,CAAD,IACvClE,kBAAkB,CAAC,iBAAD,EAAoBkE,CAAC,CAACC,MAAF,CAASjE,KAA7B,CADtB;AAAA,kDAGI;AAAQ,4BAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHJ,eAII;AAAQ,4BAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,eAKI;AAAQ,4BAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALJ,eAMI;AAAQ,4BAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BAjHJ,eA4HI;AAAI,wBAAA,KAAK,EAAE;AAAEmE,0BAAAA,KAAK,EAAE;AAAT,yBAAX;AAAA,+CACI;AACI,0BAAA,IAAI,EAAC,MADT;AAEI,0BAAA,EAAE,EAAC,gBAFP;AAGI,0BAAA,QAAQ,EAAGH,CAAD,IACNlE,kBAAkB,CAAC,gBAAD,EAAmBkE,CAAC,CAACC,MAAF,CAASjE,KAA5B,CAJ1B;AAMI,0BAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,8BA5HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BA1JJ,eAyWI;AAAO,oBAAA,SAAS,EAAC,aAAjB;AAAA,8BACKlD,UAAU,IACPA,UAAU,CAAC6C,GAAX,CAAgBkF,MAAD,iBACX;AAAA,8CAWI;AAAI,wBAAA,OAAO,EAAE,CAAb;AAAA,kCACKA,MAAM,CAACC,QAAP,IACGD,MAAM,CAACC,QAAP,CAAgBnF,GAAhB,CAAqBoF,OAAD,iBAChB;AAAqB,0BAAA,KAAK,EAAE;AAAEhB,4BAAAA,MAAM,EAAE;AAAV,2BAA5B;AAAA,kDACI;AAAI,4BAAA,KAAK,EAAE;AAAEA,8BAAAA,MAAM,EAAE,WAAV;AAAuBY,8BAAAA,QAAQ,EAAE;AAAjC,6BAAX;AAAA,sCAAwDxJ,MAAM,CAAC,IAAIgB,IAAJ,CAAS4I,OAAO,CAACN,IAAjB,CAAD,EAAyB,mBAAzB;AAA9D;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAI,4BAAA,KAAK,EAAE;AAAEV,8BAAAA,MAAM,EAAE,WAAV;AAAuBY,8BAAAA,QAAQ,EAAE,OAAjC;AAA0CK,8BAAAA,QAAQ,EAAE,OAApD;AAA6DC,8BAAAA,SAAS,EAAE,MAAxE;AAAgFC,8BAAAA,WAAW,EAAEH,OAAO,CAACI,eAAR,IAA2B,QAA3B,GAAsC,MAAtC,GAA+C;AAA5I,6BAAX;AAAA,mDACI,QAAC,MAAD;AAAQ,8BAAA,OAAO,EAAC,MAAhB;AAAuB,8BAAA,OAAO,EAAE,MAAM;AAClCxB,gCAAAA,wBAAwB,CAACoB,OAAO,CAACK,UAAT,CAAxB;AACH,+BAFD;AAAA,wCAGKL,OAAO,CAACI,eAAR,IAA2B,QAA3B,GAAsC,aAAaJ,OAAO,CAACM,YAArB,GAAoC,QAApC,GAA6CN,OAAO,CAACO,cAArD,GAAoE,OAA1G,GAAoH,KAAKP,OAAO,CAACM,YAAb,GAA4B,QAA5B,GAAqCN,OAAO,CAACO,cAA7C,GAA4D;AAHrL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kCAFJ,eASI;AAAI,4BAAA,KAAK,EAAE;AAAEvB,8BAAAA,MAAM,EAAE,WAAV;AAAuBY,8BAAAA,QAAQ,EAAE,OAAjC;AAA0CK,8BAAAA,QAAQ,EAAE;AAApD,6BAAX;AAAA,sCAA2ED,OAAO,CAACI,eAAR,IAA2B,OAA3B,GAAqCJ,OAAO,CAACQ,KAA7C,GAAqD;AAAhI;AAAA;AAAA;AAAA;AAAA,kCATJ,eAUI;AAAI,4BAAA,KAAK,EAAE;AAAExB,8BAAAA,MAAM,EAAE,WAAV;AAAuBY,8BAAAA,QAAQ,EAAE,OAAjC;AAA0CK,8BAAAA,QAAQ,EAAE;AAApD,6BAAX;AAAA,sCAA2ED,OAAO,CAACI,eAAR,IAA2B,QAA3B,GAAsCJ,OAAO,CAACS,MAA9C,GAAuD;AAAlI;AAAA;AAAA;AAAA;AAAA,kCAVJ;AAAA,2BAAST,OAAO,CAACtE,EAAjB;AAAA;AAAA;AAAA;AAAA,gCADJ;AAFR;AAAA;AAAA;AAAA;AAAA,8BAXJ,eA6BI;AAAI,wBAAA,KAAK,EAAE;AAAEkE,0BAAAA,QAAQ,EAAE,OAAZ;AAAqBK,0BAAAA,QAAQ,EAAE;AAA/B,yBAAX;AAAA,kCAAuDH,MAAM,CAACY;AAA9D;AAAA;AAAA;AAAA;AAAA,8BA7BJ,eA8BI;AAAI,wBAAA,KAAK,EAAE;AAAEd,0BAAAA,QAAQ,EAAE,OAAZ;AAAqBK,0BAAAA,QAAQ,EAAE;AAA/B,yBAAX;AAAA,kCAAsDH,MAAM,CAACa;AAA7D;AAAA;AAAA;AAAA;AAAA,8BA9BJ;AAAA,uBAASb,MAAM,CAACpE,EAAhB;AAAA;AAAA;AAAA;AAAA,4BADJ;AAFR;AAAA;AAAA;AAAA;AAAA,0BAzWJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBArHJ,EAygBKrD,UAAU,gBAAG,QAAC,aAAD;AACV,gBAAA,UAAU,EAAC,KADD;AAEV,gBAAA,SAAS,EAAC,QAFA;AAGV,gBAAA,YAAY,EAAGgH,KAAD,IAAW;AACrBtB,kBAAAA,UAAU,CAACsB,KAAK,CAACC,QAAN,GAAiB,CAAlB,CAAV;AACH,iBALS;AAMV,gBAAA,kBAAkB,EAAE,CANV;AAOV,gBAAA,SAAS,EAAEjH,UAPD;AAQV,gBAAA,aAAa,EAAC,YARJ;AASV,gBAAA,qBAAqB,EAAE,IATb;AAUV,gBAAA,SAAS,EAAC,uBAVA;AAWV,gBAAA,aAAa,EAAC,WAXJ;AAYV,gBAAA,iBAAiB,EAAC,WAZR;AAaV,gBAAA,eAAe,EAAC,QAbN;AAcV,gBAAA,iBAAiB,EAAC,WAdR;AAeV,gBAAA,aAAa,EAAC,WAfJ;AAgBV,gBAAA,qBAAqB,EAAC,WAhBZ;AAiBV,gBAAA,iBAAiB,EAAC,WAjBR;AAkBV,gBAAA,SAAS,EAAEF,IAAI,GAAG;AAlBR;AAAA;AAAA;AAAA;AAAA,sBAAH,GAmBN,EA5hBT;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,eAykBI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEqG,uBAAb;AAAsC,MAAA,IAAI,EAAC,IAA3C;AAAgD,MAAA,MAAM,EAAEM,8BAAxD;AAAwF,MAAA,SAAS,EAAE,KAAnG;AAA0G,MAAA,UAAU,EAAE,IAAtH;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAA,gCACI,QAAC,KAAD,CAAO,KAAP;AAAA,0CAA+BJ,eAAe,CAACkC,IAAhB,GAAuB,SAAvB,GAAmClC,eAAe,CAACmC,MAAnD,GAA4D,GAA3F;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,iCACI;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,EAAC,WAFd;AAGI,YAAA,OAAO,EAAE/B,8BAHb;AAII,0BAAW;AAJf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,GAAG,EAAED,sBAAnB;AAA2C,UAAA,gBAAgB,EAAE/H,KAAK,CAACgK,gBAAnE;AAAqF,UAAA,OAAO,EAAEpC,eAA9F;AAA+G,UAAA,iBAAiB,EAAEzE;AAAlI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzkBJ;AAAA,kBADJ;AA8lBH;;GA/6BQpD,W;;KAAAA,W;AAi7BT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge,Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport PostingIndex from \"./../posting/index.js\";\n\nfunction LedgerIndex(props) {\n\n    const cookies = new Cookies();\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    //const selectedDate = new Date();\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    const [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //list\n    const [ledgerList, setLedgerList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Created By Expense Auto Suggestion\n    const [expenseOptions, setExpenseOptions] = useState([]);\n    const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]);\n\n    //Created By Expense Auto Suggestion\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortLedger, setSortLedger] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByExpenses(values);\n        } else if (field === \"category_id\") {\n            setSelectedExpenseCategories(values);\n        } else if (field === \"account_id\") {\n            setSelectedAccounts(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,store_id,reference_model,reference_code,journals,created_at\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/ledger?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortLedger +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setLedgerList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                //totalExpenses = data.meta.total;\n                //setTotalExpenses(totalExpenses);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortLedger = sortLedger === \"-\" ? \"\" : \"-\";\n        setSortLedger(sortLedger);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    const [accountOptions, setAccountOptions] = useState([]);\n\n    async function suggestAccounts(searchTerm) {\n        console.log(\"Inside handle suggestAccounts\");\n\n        var params = {\n            search: searchTerm,\n        };\n\n        if (cookies.get(\"store_id\")) {\n            params.store_id = cookies.get(\"store_id\");\n        }\n\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = `&${queryString}`;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,number,search_label,open,balance,debit_total,credit_total\";\n        let result = await fetch(\n            `/v1/account?${Select}${queryString}`,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setAccountOptions(data.result);\n    }\n\n    let [showAccountBalanceSheet, setShowAccountBalanceSheet] = useState(false);\n    const [selectedAccount, setSelectedAccount] = useState({});\n\n    function openBalanceSheetDialogue(id) {\n\n\n        console.log(\"inside get User\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/account/' + id, requestOptions)\n            .then(async response => {\n\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                // model = data.result;\n\n                setSelectedAccount(data.result);\n                showAccountBalanceSheet = true;\n                setShowAccountBalanceSheet(true);\n\n\n                //setModel({ ...model });\n            })\n            .catch(error => {\n                // setErrors(error);\n            });\n    }\n\n    const AccountBalanceSheetRef = useRef();\n    function handleAccountBalanceSheetClose() {\n        showAccountBalanceSheet = false;\n        setShowAccountBalanceSheet(false);\n        //list();\n    }\n\n    return (\n        <>\n            {/*\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    \n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Total: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalExpenses}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" SAR\"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n            </div>\n           */}\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">Ledger</h1>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No Expense to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ bexpense: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"bexpense\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        bexpense: \"solid 1px\",\n                                                        bexpenseColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\" >\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                    <option value=\"200\">200</option>\n                                                    <option value=\"300\">300</option>\n                                                    <option value=\"500\">500</option>\n                                                    <option value=\"1000\">1000</option>\n                                                    <option value=\"1500\">1500</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ bexpense: \"solid 0px\" }}>\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"journals.date\");\n                                                        }}\n                                                    >\n                                                        Date\n                                                        {sortField === \"journals.date\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"journals.date\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"journals.account_name\");\n                                                        }}\n                                                    >\n                                                        Account\n                                                        {sortField === \"journals.account_name\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"journals.account_name\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"journals.debit\");\n                                                        }}\n                                                    >\n                                                        Debit\n                                                        {sortField === \"journals.debit\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"journals.debit\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"journals.credit\");\n                                                        }}\n                                                    >\n                                                        Credit\n                                                        {sortField === \"journals.credit\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"journals.credit\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"reference_model\");\n                                                        }}\n                                                    >\n                                                        Type\n                                                        {sortField === \"reference_model\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"reference_model\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"reference_code\");\n                                                        }}\n                                                    >\n                                                        ID\n                                                        {sortField === \"reference_code\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"reference_code\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n                                                {/*\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortLedger === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortLedger === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                        */}\n\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n\n                                                <th style={{ width: \"190px\" }}>\n                                                    <DatePicker\n                                                        id=\"date_str\"\n                                                        value={dateValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setDateValue(\"\");\n                                                                searchByDateField(\"date_str\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"date_str\", date);\n                                                            selectedDate = date;\n                                                            setSelectedDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) => setShowDateRange(!showDateRange)}\n                                                    >\n                                                        {showDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"from_date\"\n                                                                value={fromDateValue}\n                                                                selected={selectedFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setFromDateValue(\"\");\n                                                                        searchByDateField(\"from_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"from_date\", date);\n                                                                    selectedFromDate = date;\n                                                                    setSelectedFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"to_date\"\n                                                                value={toDateValue}\n                                                                selected={selectedToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setToDateValue(\"\");\n                                                                        searchByDateField(\"to_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"to_date\", date);\n                                                                    selectedToDate = date;\n                                                                    setSelectedToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                <th style={{ minWidth: \"250px\" }}>\n                                                    <Typeahead\n                                                        id=\"account_id\"\n                                                        labelKey=\"search_label\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"account_id\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={accountOptions}\n                                                        placeholder=\"Name / mob / acc no.\"\n                                                        selected={selectedAccounts}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestAccounts(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th style={{ minWidth: \"130px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"debit\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"debit\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ minWidth: \"130px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"credit\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"credit\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th >\n                                                    <select className=\"form-control\" onChange={(e) =>\n                                                        searchByFieldValue(\"reference_model\", e.target.value)\n                                                    }>\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"sales\">Sales</option>\n                                                        <option value=\"customer_deposit\">Customer deposit</option>\n                                                        <option value=\"customer_withdrawal\">Customer withdrawl</option>\n                                                    </select>\n\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"reference_code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"reference_code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                {/*\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                            */}\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                            {ledgerList &&\n                                                ledgerList.map((ledger) => (\n                                                    <tr key={ledger.id}>\n\n                                                        {/*\n                                                          <td colSpan={4} style={{border:\"solid 1px\"}}>\n                                                            <tr style={{border:\"solid 1px\"}}>\n                                                            <td>1</td>\n                                                            <td>2</td>\n                                                            </tr>\n                                                          </td>\n                                                       */}\n\n                                                        <td colSpan={4}>\n                                                            {ledger.journals &&\n                                                                ledger.journals.map((journal) => (\n                                                                    <tr key={journal.id} style={{ border: \"solid 1px\" }}>\n                                                                        <td style={{ border: \"solid 1px\", minWidth: \"184px\" }}>{format(new Date(journal.date), \"MMM dd yyyy h:mma\")}</td>\n                                                                        <td style={{ border: \"solid 1px\", minWidth: \"250px\", maxWidth: \"250px\", textAlign: \"left\", paddingLeft: journal.debit_or_credit == \"credit\" ? \"60px\" : \"30px\" }}>\n                                                                            <Button variant=\"link\" onClick={() => {\n                                                                                openBalanceSheetDialogue(journal.account_id);\n                                                                            }}>\n                                                                                {journal.debit_or_credit == \"credit\" ? \"     To \" + journal.account_name + \" A/c #\"+journal.account_number+\"  Cr.\" : \"\" + journal.account_name + \" A/c #\"+journal.account_number+\" Dr.\"}\n                                                                            </Button>\n                                                                        </td>\n                                                                        <td style={{ border: \"solid 1px\", minWidth: \"135px\", maxWidth: \"135px\" }}>{journal.debit_or_credit == \"debit\" ? journal.debit : \"\"}</td>\n                                                                        <td style={{ border: \"solid 1px\", minWidth: \"130px\", maxWidth: \"130px\" }}>{journal.debit_or_credit == \"credit\" ? journal.credit : \"\"}</td>\n                                                                    </tr>))}\n\n\n                                                        </td>\n                                                        <td style={{ minWidth: \"155px\", maxWidth: \"155px\" }} >{ledger.reference_model}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{ledger.reference_code}</td>\n\n\n                                                    </tr>\n                                                ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Modal show={showAccountBalanceSheet} size=\"lg\" onHide={handleAccountBalanceSheetClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Balance sheet of {selectedAccount.name + \" A/c (#\" + selectedAccount.number + \")\"} </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleAccountBalanceSheetClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <PostingIndex ref={AccountBalanceSheetRef} showToastMessage={props.showToastMessage} account={selectedAccount} refreshLedgerList={list} />\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default LedgerIndex;\n"]},"metadata":{},"sourceType":"module"}