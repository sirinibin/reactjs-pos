{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/sales_return/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport SalesReturnPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport SalesReturnView from \"./view.js\";\nimport ProductView from \"./../product/view.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SalesReturnCreate = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  var _vatPrice, _netTotal;\n\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      formData = {\n        order_id: id,\n        vat_percent: 15.0,\n        discount: 0.0,\n        discountValue: 0.0,\n        discount_percent: 0.0,\n        is_discount_percent: false,\n        //  date_str: format(new Date(), \"MMM dd yyyy\"),\n        date_str: new Date(),\n        signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n        status: \"received\",\n        payment_status: \"\",\n        payment_method: \"\",\n        price_type: \"retail\"\n      };\n\n      if (cookies.get(\"user_id\")) {\n        selectedReceivedByUsers = [{\n          id: cookies.get(\"user_id\"),\n          name: cookies.get(\"user_name\")\n        }];\n        formData.received_by = cookies.get(\"user_id\");\n        setFormData({ ...formData\n        });\n        setSelectedReceivedByUsers([...selectedReceivedByUsers]);\n      }\n\n      setFormData({ ...formData\n      });\n\n      if (id) {\n        reCalculate();\n        getOrder(id);\n      }\n\n      setShow(true);\n    }\n\n  }));\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function.\"); // event.preventDefault();\n\n        var form = event.target.form;\n\n        if (form && event.target) {\n          var index = Array.prototype.indexOf.call(form, event.target);\n\n          if (form && form.elements[index + 1]) {\n            if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n              form.elements[index].focus();\n            } else {\n              form.elements[index + 1].focus();\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  function getOrder(id) {\n    console.log(\"inside get SalesReturn\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/order/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      let order = data.result;\n      let selectedProductsTemp = order.products;\n      selectedProducts = [];\n\n      for (let i = 0; i < selectedProductsTemp.length; i++) {\n        selectedProductsTemp[i].selected = false;\n        let soldQty = selectedProductsTemp[i].quantity - selectedProductsTemp[i].quantity_returned;\n        selectedProductsTemp[i].quantity = soldQty;\n\n        if (soldQty > 0) {\n          selectedProducts.push(selectedProductsTemp[i]);\n        }\n      } // selectedProducts = selectedProductsTemp\n\n\n      console.log(\"selectedProducts:\", selectedProducts);\n      setSelectedProducts([...selectedProducts]); //formData = order;\n\n      console.log(\"order.id:\", order.id);\n      formData.id = \"\";\n      formData.products = order.products; // formData.order_id = order.id;\n      //console.log(\"formData.order_id:\", formData.order_id);\n\n      formData.order_code = order.code;\n      formData.store_id = order.store_id;\n      /*\n      formData.received_by = order.delivered_by;\n      formData.received_by_signature_id = order.delivered_by_signature_id;\n      */\n\n      formData.customer_id = order.customer_id; // formData.is_discount_percent = order.is_discount_percent;\n\n      formData.is_discount_percent = true;\n      console.log(\"order.discount_percent:\", order.discount_percent);\n      formData.discount_percent = order.discount_percent; // formData.discount = (order.discount - order.return_discount);\n      // formData.discount_percent = order.discount_percent;\n\n      /*\n      if (formData.is_discount_percent) {\n          formData.discountValue = formData.discount_percent;\n      } else {\n          formData.discountValue = formData.discount;\n      }\n      */\n      // setFormData({ ...formData });\n\n      console.log(\"formData:\", formData);\n      selectedStores = [{\n        id: order.store_id,\n        name: order.store_name\n      }];\n      setSelectedStores(selectedStores);\n      console.log(\"selectedStores:\", selectedStores);\n      setFormData({ ...formData\n      });\n      reCalculate();\n      setFormData({ ...formData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n  /*\n  let [barcode, setBarcode] = useState(\"\");\n  let [barcodeEnded, setBarcodeEnded] = useState(false);\n  const keyPress = useCallback(\n      (e) => {\n          console.log(\"e.key:\", e.key);\n           if (!barcodeEnded && e.key != \"Enter\") {\n              console.log()\n              barcode += e.key;\n              setBarcode(barcode);\n          }\n           if (e.key === \"Enter\") {\n              document.removeEventListener(\"keydown\", keyPress);\n              console.log(\"barcode:\", barcode);\n              barcodeEnded = true;\n              setBarcodeEnded(true);\n          }\n       },\n      []\n  );\n   function addListener() {\n      //barcode = \"\";\n      //setBarcode(barcode);\n      document.addEventListener(\"keydown\", keyPress);\n      console.log(\"Listener added, barcode:\", barcode);\n  }\n  */\n\n  /*\n  useEffect(() => {\n      document.addEventListener(\"keydown\", keyPress);\n      return () => document.removeEventListener(\"keydown\", keyPress);\n  }, [keyPress]);\n  */\n\n  /*\n  useEffect(() => {\n      document.addEventListener('keydown', handleKeyDown);\n      return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  let [barcode, setBarcode] = useState(\"\");\n  function handleKeyDown(event) {\n      console.log(\"event.key:\", event.key);\n       /*\n      if (event.key == \"Enter\") {\n          barcode = \"\";\n          setBarcode(barcode);\n      }\n      else if (event.key == \"Shift\") {\n          console.log(\"barcode:\", barcode);\n      } else {\n          barcode += event.key;\n          setBarcode(barcode);\n      }\n      */\n\n  /*\n  if (event.keyCode === KEY_ESCAPE) {\n      /* do your action here */\n  // }  \n  // }\n\n\n  const selectedDate = new Date(); //const history = useHistory();\n\n  let [errors, setErrors] = useState({});\n  const [isProcessing, setProcessing] = useState(false);\n  const cookies = new Cookies(); //fields\n\n  let [formData, setFormData] = useState({\n    order_id: \"\",\n    vat_percent: 15.0,\n    discount: 0.0,\n    date_str: format(new Date(), \"MMM dd yyyy\"),\n    signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n    status: \"received\",\n    payment_status: \"\",\n    payment_method: \"\",\n    price_type: \"retail\"\n  });\n  let [selectedStores, setSelectedStores] = useState([]); //Product Auto Suggestion\n\n  let [selectedProducts, setSelectedProducts] = useState([]); //Received By Auto Suggestion\n\n  const [receivedByUserOptions, setReceivedByUserOptions] = useState([]);\n  let [selectedReceivedByUsers, setSelectedReceivedByUsers] = useState([]);\n  const [isReceivedByUsersLoading, setIsReceivedByUsersLoading] = useState(false); //Received By Signature Auto Suggestion\n\n  const [receivedBySignatureOptions, setReceivedBySignatureOptions] = useState([]);\n  const [selectedReceivedBySignatures, setSelectedReceivedBySignatures] = useState([]);\n  const [isReceivedBySignaturesLoading, setIsReceivedBySignaturesLoading] = useState(false);\n  const [show, setShow] = useState(false);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  useEffect(() => {\n    let at = cookies.get(\"access_token\");\n\n    if (!at) {\n      // history.push(\"/dashboard/salesreturns\");\n      window.location = \"/\";\n    }\n  });\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setReceivedByUserOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsReceivedByUsersLoading(true);\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setReceivedByUserOptions(data.result);\n    setIsReceivedByUsersLoading(false);\n  }\n\n  async function suggestSignatures(searchTerm) {\n    console.log(\"Inside handle suggestSignatures\");\n    setReceivedBySignatureOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsReceivedBySignaturesLoading(true);\n    let result = await fetch(\"/v1/signature?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setReceivedBySignatureOptions(data.result);\n    setIsReceivedBySignaturesLoading(false);\n  }\n\n  function handleCreate(event) {\n    event.preventDefault();\n    console.log(\"Inside handle Create\");\n    console.log(\"selectedProducts:\", selectedProducts);\n    console.log(\"formData.order_id:\", formData.order_id);\n    formData.products = [];\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (!selectedProducts[i].selected) {\n        continue;\n      }\n\n      formData.products.push({\n        product_id: selectedProducts[i].product_id,\n        quantity: parseFloat(selectedProducts[i].quantity),\n        unit_price: parseFloat(selectedProducts[i].unit_price),\n        unit: selectedProducts[i].unit\n      });\n    }\n\n    formData.discount = parseFloat(formData.discount);\n    formData.discount_percent = parseFloat(formData.discount_percent);\n    formData.vat_percent = parseFloat(formData.vat_percent);\n    formData.partial_payment_amount = parseFloat(formData.partial_payment_amount);\n    console.log(\"formData.discount:\", formData.discount);\n\n    if (formData.payment_status === \"paid_partially\" && !formData.partial_payment_amount && formData.partial_payment_amount !== 0) {\n      errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount <= 0) {\n      errors[\"partial_payment_amount\"] = \"Partial payment should be > 0 \";\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount >= netTotal) {\n      errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n      setErrors({ ...errors\n      });\n      return;\n    }\n\n    errors[\"payment_method\"] = \"\";\n    setErrors({ ...errors\n    });\n\n    if (!formData.id && formData.payment_status != \"not_paid\" && !formData.payment_method) {\n      errors[\"payment_method\"] = \"Payment method is required\";\n      setErrors({ ...errors\n      });\n      return;\n    }\n    /*\n    if (!formData.discountValue && formData.discountValue !== 0) {\n        errors[\"discount\"] = \"Invalid Discount\";\n        setErrors({ ...errors });\n        return;\n    }\n    */\n\n\n    let endPoint = \"/v1/sales-return\";\n    let method = \"POST\";\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(\"formData:\", formData);\n    setProcessing(true);\n    fetch(endPoint, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.errors; //const error = data.errors\n\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      setProcessing(false);\n      console.log(\"Response:\");\n      console.log(data);\n      props.showToastMessage(\"SalesReturn Created Successfully!\", \"success\");\n\n      if (props.refreshList) {\n        props.refreshList();\n      }\n\n      handleClose();\n      openDetailsView(data.result.id);\n    }).catch(error => {\n      setProcessing(false);\n      console.log(\"Inside catch\");\n      console.log(error);\n      setErrors({ ...error\n      });\n      console.error(\"There was an error!\", error);\n      props.showToastMessage(\"Error Creating SalesReturn!\", \"danger\");\n    });\n  }\n\n  let [totalPrice, setTotalPrice] = useState(0.0);\n\n  function findTotalPrice() {\n    totalPrice = 0.00;\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (!selectedProducts[i].selected) {\n        continue;\n      }\n\n      totalPrice += parseFloat(selectedProducts[i].unit_price) * parseFloat(selectedProducts[i].quantity);\n    }\n\n    totalPrice = totalPrice.toFixed(2);\n    setTotalPrice(totalPrice);\n  }\n\n  let [vatPrice, setVatPrice] = useState(0.00);\n  /*\n  function findVatPrice() {\n      vatPrice = ((parseFloat(formData.vat_percent) / 100) * parseFloat(totalPrice - formData.discount)).toFixed(2);;\n      console.log(\"vatPrice:\", vatPrice);\n      setVatPrice(vatPrice);\n  }*/\n\n  function findVatPrice() {\n    vatPrice = 0.00;\n\n    if (totalPrice > 0) {\n      //+ parseFloat(formData.shipping_handling_fees)\n      vatPrice = parseFloat(parseFloat(formData.vat_percent) / 100) * (parseFloat(totalPrice) - parseFloat(formData.discount));\n      console.log(\"vatPrice:\", vatPrice);\n    }\n\n    setVatPrice(vatPrice);\n  }\n\n  let [netTotal, setNetTotal] = useState(0.00);\n\n  function findNetTotal() {\n    if (totalPrice > 0) {\n      netTotal = parseFloat(totalPrice) - parseFloat(formData.discount) + parseFloat(vatPrice);\n      setNetTotal(netTotal);\n    }\n  }\n\n  let [discountPercent, setDiscountPercent] = useState(0.00);\n  /*\n  function findDiscountPercent() {\n      if (formData.discount >= 0 && totalPrice > 0) {\n          discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n          setDiscountPercent(discountPercent);\n          formData.discount_percent = discountPercent;\n          setFormData({ ...formData });\n      }\n  }\n  */\n\n  /*\n  function findDiscountPercent() {\n      if (!formData.discountValue) {\n          formData.discount = 0.00;\n          formData.discount_percent = 0.00;\n          setFormData({ ...formData });\n          return;\n      }\n       formData.discount = formData.discountValue;\n       if (formData.discount > 0 && totalPrice > 0) {\n          discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100).toFixed(2);\n          setDiscountPercent(discountPercent);\n          formData.discount_percent = discountPercent;\n          setFormData({ ...formData });\n      }\n   }\n  */\n\n  /*\n  function findDiscount() {\n      if (!formData.discountValue) {\n          formData.discount = 0.00;\n          formData.discount_percent = 0.00;\n          setFormData({ ...formData });\n          return;\n      }\n       formData.discount_percent = formData.discountValue;\n       if (formData.discount_percent > 0 && totalPrice > 0) {\n          formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)).toFixed(2);\n      }\n      setFormData({ ...formData });\n  }\n  */\n\n  function findDiscount() {\n    if (formData.discount_percent >= 0 && totalPrice > 0) {\n      formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)); //formData.discount = Math.round(formData.discount * 100) / 100;\n      // formData.discount = parseFloat(formData.discount.toFixed(2));\n\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function findDiscountPercent() {\n    if (formData.discount >= 0 && totalPrice > 0) {\n      discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n      setDiscountPercent(discountPercent);\n      formData.discount_percent = discountPercent; //formData.discount_percent = Math.round(formData.discount_percent * 100) / 100;\n\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function reCalculate() {\n    findTotalPrice(); //findDiscount();\n    //findDiscountPercent();\n\n    if (formData.is_discount_percent) {\n      findDiscount();\n    } else {\n      findDiscountPercent();\n    }\n\n    findVatPrice();\n    findNetTotal();\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  }\n\n  const StoreCreateFormRef = useRef();\n  const CustomerCreateFormRef = useRef();\n  const ProductCreateFormRef = useRef();\n  const UserCreateFormRef = useRef();\n\n  function openUserCreateForm() {\n    UserCreateFormRef.current.open();\n  }\n\n  const SignatureCreateFormRef = useRef();\n\n  function openSignatureCreateForm() {\n    SignatureCreateFormRef.current.open();\n  }\n\n  const ProductDetailsViewRef = useRef();\n\n  function openProductDetailsView(id) {\n    ProductDetailsViewRef.current.open(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SalesReturnView, {\n      ref: DetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductView, {\n      ref: ProductDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StoreCreate, {\n      ref: StoreCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerCreate, {\n      ref: CustomerCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductCreate, {\n      ref: ProductCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserCreate, {\n      ref: UserCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignatureCreate, {\n      ref: SignatureCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      onHide: handleClose,\n      animation: false,\n      backdrop: \"static\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Create Sales Return for Sales Order #\" + formData.order_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [/*#__PURE__*/_jsxDEV(SalesReturnPreview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreate,\n            children: [isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 33\n            }, this) + \" Creating...\" : \"\", formData.id ? \"Update\" : \"Create\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [Object.keys(errors).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors && Object.keys(errors).map((key, index) => {\n              return errors[key] ? /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 59\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 25\n        }, this) : \"\", selectedProducts.length === 0 && \"Already Returned All sold products\", selectedProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 needs-validation\",\n          onSubmit: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            style: {\n              overflowX: \"auto\",\n              overflowY: \"scroll\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"SI No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Part No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 735,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: selectedProducts[index].selected,\n                      onChange: e => {\n                        console.log(\"e.target.value:\", e.target.value);\n                        selectedProducts[index].selected = !selectedProducts[index].selected;\n                        setSelectedProducts([...selectedProducts]);\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 746,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: product.part_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textDecoration: \"underline\",\n                      color: \"blue\",\n                      cursor: \"pointer\"\n                    },\n                    onClick: () => {\n                      openProductDetailsView(product.product_id);\n                    },\n                    children: product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"155px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.quantity,\n                        className: \"form-control\",\n                        placeholder: \"Quantity\",\n                        onChange: e => {\n                          errors[\"quantity_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                            selectedProducts[index].quantity = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (parseFloat(e.target.value) === 0) {\n                            errors[\"quantity_\" + index] = \"Quantity should be >0\";\n                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          product.quantity = parseFloat(e.target.value);\n                          selectedProducts[index].quantity = parseFloat(e.target.value);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 767,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 49\n                    }, this), errors[\"quantity_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 801,\n                        columnNumber: 57\n                      }, this), errors[\"quantity_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 800,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"180px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.unit_price,\n                        className: \"form-control\",\n                        placeholder: \"Unit Price\",\n                        onChange: e => {\n                          errors[\"unit_price_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                            selectedProducts[index].unit_price = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            errors[\"unit_price_\" + index] = \"Invalid Unit Price should be > 0\";\n                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          selectedProducts[index].unit_price = parseFloat(e.target.value);\n                          console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 809,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: \"SAR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 839,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 808,\n                      columnNumber: 49\n                    }, this), errors[\"unit_price_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 843,\n                        columnNumber: 57\n                      }, this), errors[\"unit_price_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 842,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (product.unit_price * product.quantity).toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 850,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            style: {\n              overflowX: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-center\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    style: {\n                      width: \"180px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: totalPrice,\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 873,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"6\",\n                    className: \"text-end\",\n                    children: [\"Discount  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"50px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount_percent,\n                      onChange: e => {\n                        formData.is_discount_percent = true;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          formData.discount = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount_percent = \"\";\n                          formData.discount = 0.00;\n                          errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount_percent\"] = \"\";\n                        errors[\"discount\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount_percent = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 885,\n                      columnNumber: 55\n                    }, this), \"%\", errors.discount_percent && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount_percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 924,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"150px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount,\n                      onChange: e => {\n                        formData.is_discount_percent = false;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          formData.discount_percent = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"Discount should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount = \"\";\n                          formData.discount_percent = 0.00;\n                          errors[\"discount\"] = \"Invalid Discount\";\n                          setFormData({ ...formData\n                          });\n                          reCalculate();\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount\"] = \"\";\n                        errors[\"discount_percent\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 933,\n                      columnNumber: 45\n                    }, this), \" SAR\", errors.discount && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 974,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 883,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"5\",\n                    className: \"text-end\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 991,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: [\" VAT: \", formData.vat_percent + \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 994,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_vatPrice = vatPrice) === null || _vatPrice === void 0 ? void 0 : _vatPrice.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 996,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 995,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1006,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: \"Net Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1007,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_netTotal = netTotal) === null || _netTotal === void 0 ? void 0 : _netTotal.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1009,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1008,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                id: \"date_str\",\n                selected: formData.date_str ? new Date(formData.date_str) : null,\n                value: formData.date_str ? format(new Date(formData.date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                className: \"form-control\",\n                dateFormat: \"MMMM d, yyyy h:mm aa\",\n                showTimeSelect: true,\n                timeIntervals: \"1\",\n                onChange: value => {\n                  console.log(\"Value\", value);\n                  formData.date_str = value; // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n\n                  setFormData({ ...formData\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 29\n            }, this), errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 37\n              }, this), errors.date_str]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 33\n            }, this), formData.date_str && !errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"green\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-check-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 37\n              }, this), \"Looks good!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Payment method*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.payment_method,\n                disabled: formData.payment_status == \"not_paid\" ? \"disabled\" : \"\",\n                onChange: e => {\n                  console.log(\"Inside onchange payment method\");\n\n                  if (!e.target.value) {\n                    errors[\"status\"] = \"Payment method is required\";\n                    formData.payment_method = \"\";\n                    setFormData({ ...formData\n                    });\n                    setErrors({ ...errors\n                    });\n                    return;\n                  }\n\n                  errors[\"payment_method\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.payment_method = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cash\",\n                  children: \"Cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bank_account\",\n                  children: \"Bank Account / Debit / Credit Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1156,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 33\n              }, this), errors.payment_method && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.payment_method\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 37\n              }, this), formData.payment_method && !errors.payment_method && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1165,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Payment Status*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.payment_status,\n                onChange: e => {\n                  console.log(\"Inside onchange payment Status\");\n\n                  if (!e.target.value) {\n                    errors[\"status\"] = \"Payment status is required\";\n                    setErrors({ ...errors\n                    });\n                    formData.payment_status = \"\";\n                    setFormData({ ...formData\n                    });\n                    return;\n                  }\n\n                  errors[\"payment_status\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.payment_status = e.target.value;\n\n                  if (formData.payment_status !== \"paid_partially\") {\n                    formData.partial_payment_amount = 0.00;\n                  }\n\n                  setFormData({ ...formData\n                  });\n\n                  if (formData.payment_status == \"not_paid\") {\n                    formData.payment_method = \"\";\n                    setFormData({ ...formData\n                    });\n                  }\n\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"paid\",\n                  children: \"Paid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"not_paid\",\n                  children: \"Not Paid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1208,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"paid_partially\",\n                  children: \"Paid Partially\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1209,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 33\n              }, this), errors.payment_status && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1213,\n                  columnNumber: 41\n                }, this), errors.payment_status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1212,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 25\n          }, this), formData.payment_status === \"paid_partially\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Patial Payment Amount*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: formData.partial_payment_amount,\n                onChange: e => {\n                  console.log(\"Inside onchange vat discount\");\n\n                  if (!e.target.value) {\n                    formData.partial_payment_amount = e.target.value;\n                    errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n                    setErrors({ ...errors\n                    });\n                    return;\n                  }\n\n                  formData.partial_payment_amount = parseFloat(e.target.value);\n                  errors[\"partial_payment_amount\"] = \"\";\n\n                  if (formData.partial_payment_amount >= netTotal) {\n                    errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n                    setErrors({ ...errors\n                    });\n                    return;\n                  }\n\n                  setErrors({ ...errors\n                  });\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"validationCustom02\",\n                placeholder: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 33\n              }, this), errors.partial_payment_amount && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1254,\n                  columnNumber: 41\n                }, this), errors.partial_payment_amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1253,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 73\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleCreate,\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"bsalesreturn\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1269,\n                columnNumber: 37\n              }, this) + \" Creating...\" : formData.id ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1267,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"6zsDjdoo9h38on5e0EyqnX5wVl8=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = SalesReturnCreate;\nexport default SalesReturnCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SalesReturnCreate$forwardRef\");\n$RefreshReg$(_c2, \"SalesReturnCreate\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/sales_return/create.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","SalesReturnPreview","Modal","Button","Form","StoreCreate","CustomerCreate","ProductCreate","UserCreate","SignatureCreate","Cookies","Typeahead","NumberFormat","DatePicker","format","Spinner","SalesReturnView","ProductView","SalesReturnCreate","props","ref","open","id","formData","order_id","vat_percent","discount","discountValue","discount_percent","is_discount_percent","date_str","Date","signature_date_str","status","payment_status","payment_method","price_type","cookies","get","selectedReceivedByUsers","name","received_by","setFormData","setSelectedReceivedByUsers","reCalculate","getOrder","setShow","listener","event","code","console","log","form","target","index","Array","prototype","indexOf","call","elements","getAttribute","includes","focus","preventDefault","document","addEventListener","removeEventListener","requestOptions","method","headers","fetch","then","response","isJson","data","json","ok","error","errors","Promise","reject","setErrors","order","result","selectedProductsTemp","products","selectedProducts","i","length","selected","soldQty","quantity","quantity_returned","push","setSelectedProducts","order_code","store_id","customer_id","selectedStores","store_name","setSelectedStores","catch","setProcessing","selectedDate","isProcessing","receivedByUserOptions","setReceivedByUserOptions","isReceivedByUsersLoading","setIsReceivedByUsersLoading","receivedBySignatureOptions","setReceivedBySignatureOptions","selectedReceivedBySignatures","setSelectedReceivedBySignatures","isReceivedBySignaturesLoading","setIsReceivedBySignaturesLoading","show","handleClose","at","window","location","ObjectToSearchQueryParams","object","Object","keys","map","key","join","suggestUsers","searchTerm","params","queryString","Authorization","Select","suggestSignatures","handleCreate","product_id","parseFloat","unit_price","unit","partial_payment_amount","netTotal","endPoint","body","JSON","stringify","showToastMessage","refreshList","openDetailsView","totalPrice","setTotalPrice","findTotalPrice","toFixed","vatPrice","setVatPrice","findVatPrice","setNetTotal","findNetTotal","discountPercent","setDiscountPercent","findDiscount","findDiscountPercent","DetailsViewRef","current","StoreCreateFormRef","CustomerCreateFormRef","ProductCreateFormRef","UserCreateFormRef","openUserCreateForm","SignatureCreateFormRef","openSignatureCreateForm","ProductDetailsViewRef","openProductDetailsView","color","overflowX","overflowY","product","e","value","part_number","textDecoration","cursor","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport SalesReturnPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport SalesReturnView from \"./view.js\";\nimport ProductView from \"./../product/view.js\";\n\nconst SalesReturnCreate = forwardRef((props, ref) => {\n\n    useImperativeHandle(ref, () => ({\n        open(id) {\n\n            formData = {\n                order_id: id,\n                vat_percent: 15.0,\n                discount: 0.0,\n                discountValue: 0.0,\n                discount_percent: 0.0,\n                is_discount_percent: false,\n                //  date_str: format(new Date(), \"MMM dd yyyy\"),\n                date_str: new Date(),\n                signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n                status: \"received\",\n                payment_status: \"\",\n                payment_method: \"\",\n                price_type: \"retail\"\n            };\n            if (cookies.get(\"user_id\")) {\n                selectedReceivedByUsers = [{\n                    id: cookies.get(\"user_id\"),\n                    name: cookies.get(\"user_name\"),\n                }];\n                formData.received_by = cookies.get(\"user_id\");\n                setFormData({ ...formData });\n                setSelectedReceivedByUsers([...selectedReceivedByUsers]);\n            }\n            setFormData({ ...formData });\n            if (id) {\n                reCalculate();\n                getOrder(id);\n            }\n            setShow(true);\n\n        },\n\n    }));\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                console.log(\"Enter key was pressed. Run your function.\");\n                // event.preventDefault();\n\n                var form = event.target.form;\n                if (form && event.target) {\n                    var index = Array.prototype.indexOf.call(form, event.target);\n                    if (form && form.elements[index + 1]) {\n                        if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n                            form.elements[index].focus();\n                        } else {\n                            form.elements[index + 1].focus();\n                        }\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n    function getOrder(id) {\n        console.log(\"inside get SalesReturn\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/order/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                let order = data.result;\n\n                let selectedProductsTemp = order.products;\n                selectedProducts = [];\n                for (let i = 0; i < selectedProductsTemp.length; i++) {\n                    selectedProductsTemp[i].selected = false;\n                    let soldQty = selectedProductsTemp[i].quantity - selectedProductsTemp[i].quantity_returned;\n                    selectedProductsTemp[i].quantity = soldQty;\n\n                    if (soldQty > 0) {\n                        selectedProducts.push(selectedProductsTemp[i]);\n                    }\n                }\n\n                // selectedProducts = selectedProductsTemp\n\n                console.log(\"selectedProducts:\", selectedProducts);\n                setSelectedProducts([...selectedProducts]);\n\n\n\n                //formData = order;\n                console.log(\"order.id:\", order.id);\n                formData.id = \"\";\n                formData.products = order.products;\n                // formData.order_id = order.id;\n                //console.log(\"formData.order_id:\", formData.order_id);\n                formData.order_code = order.code;\n                formData.store_id = order.store_id;\n                /*\n                formData.received_by = order.delivered_by;\n                formData.received_by_signature_id = order.delivered_by_signature_id;\n                */\n                formData.customer_id = order.customer_id;\n\n                // formData.is_discount_percent = order.is_discount_percent;\n                formData.is_discount_percent = true;\n                console.log(\"order.discount_percent:\",order.discount_percent);\n                formData.discount_percent = order.discount_percent;\n                // formData.discount = (order.discount - order.return_discount);\n\n                // formData.discount_percent = order.discount_percent;\n\n                /*\n                if (formData.is_discount_percent) {\n                    formData.discountValue = formData.discount_percent;\n                } else {\n                    formData.discountValue = formData.discount;\n                }\n                */\n\n                // setFormData({ ...formData });\n                console.log(\"formData:\", formData);\n\n\n                selectedStores = [\n                    {\n                        id: order.store_id,\n                        name: order.store_name,\n                    }\n                ];\n\n                setSelectedStores(selectedStores);\n                console.log(\"selectedStores:\", selectedStores);\n\n                setFormData({ ...formData });\n                reCalculate();\n                setFormData({ ...formData });\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n    /*\n    let [barcode, setBarcode] = useState(\"\");\n    let [barcodeEnded, setBarcodeEnded] = useState(false);\n    const keyPress = useCallback(\n        (e) => {\n            console.log(\"e.key:\", e.key);\n\n            if (!barcodeEnded && e.key != \"Enter\") {\n                console.log()\n                barcode += e.key;\n                setBarcode(barcode);\n            }\n\n            if (e.key === \"Enter\") {\n                document.removeEventListener(\"keydown\", keyPress);\n                console.log(\"barcode:\", barcode);\n                barcodeEnded = true;\n                setBarcodeEnded(true);\n            }\n\n        },\n        []\n    );\n\n    function addListener() {\n        //barcode = \"\";\n        //setBarcode(barcode);\n        document.addEventListener(\"keydown\", keyPress);\n        console.log(\"Listener added, barcode:\", barcode);\n    }\n    */\n    /*\n    useEffect(() => {\n        document.addEventListener(\"keydown\", keyPress);\n        return () => document.removeEventListener(\"keydown\", keyPress);\n    }, [keyPress]);\n    */\n    /*\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    });\n    let [barcode, setBarcode] = useState(\"\");\n    function handleKeyDown(event) {\n        console.log(\"event.key:\", event.key);\n\n        /*\n        if (event.key == \"Enter\") {\n            barcode = \"\";\n            setBarcode(barcode);\n        }\n        else if (event.key == \"Shift\") {\n            console.log(\"barcode:\", barcode);\n        } else {\n            barcode += event.key;\n            setBarcode(barcode);\n        }\n        */\n\n    /*\n    if (event.keyCode === KEY_ESCAPE) {\n        /* do your action here */\n    // }  \n    // }\n\n    const selectedDate = new Date();\n\n    //const history = useHistory();\n    let [errors, setErrors] = useState({});\n    const [isProcessing, setProcessing] = useState(false);\n    const cookies = new Cookies();\n\n    //fields\n    let [formData, setFormData] = useState({\n        order_id: \"\",\n        vat_percent: 15.0,\n        discount: 0.0,\n        date_str: format(new Date(), \"MMM dd yyyy\"),\n        signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n        status: \"received\",\n        payment_status: \"\",\n        payment_method: \"\",\n        price_type: \"retail\",\n    });\n\n    let [selectedStores, setSelectedStores] = useState([]);\n\n\n\n\n    //Product Auto Suggestion\n    let [selectedProducts, setSelectedProducts] = useState([]);\n\n    //Received By Auto Suggestion\n    const [receivedByUserOptions, setReceivedByUserOptions] = useState([]);\n    let [selectedReceivedByUsers, setSelectedReceivedByUsers] = useState([]);\n    const [isReceivedByUsersLoading, setIsReceivedByUsersLoading] =\n        useState(false);\n\n    //Received By Signature Auto Suggestion\n    const [receivedBySignatureOptions, setReceivedBySignatureOptions] =\n        useState([]);\n    const [selectedReceivedBySignatures, setSelectedReceivedBySignatures] =\n        useState([]);\n    const [isReceivedBySignaturesLoading, setIsReceivedBySignaturesLoading] =\n        useState(false);\n\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    useEffect(() => {\n        let at = cookies.get(\"access_token\");\n        if (!at) {\n            // history.push(\"/dashboard/salesreturns\");\n            window.location = \"/\";\n        }\n    });\n\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setReceivedByUserOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsReceivedByUsersLoading(true);\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setReceivedByUserOptions(data.result);\n        setIsReceivedByUsersLoading(false);\n    }\n\n    async function suggestSignatures(searchTerm) {\n        console.log(\"Inside handle suggestSignatures\");\n        setReceivedBySignatureOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsReceivedBySignaturesLoading(true);\n        let result = await fetch(\n            \"/v1/signature?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setReceivedBySignatureOptions(data.result);\n        setIsReceivedBySignaturesLoading(false);\n    }\n\n    function handleCreate(event) {\n        event.preventDefault();\n        console.log(\"Inside handle Create\");\n        console.log(\"selectedProducts:\", selectedProducts);\n        console.log(\"formData.order_id:\", formData.order_id);\n\n        formData.products = [];\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (!selectedProducts[i].selected) {\n                continue;\n            }\n\n            formData.products.push({\n                product_id: selectedProducts[i].product_id,\n                quantity: parseFloat(selectedProducts[i].quantity),\n                unit_price: parseFloat(selectedProducts[i].unit_price),\n                unit: selectedProducts[i].unit,\n            });\n        }\n\n        formData.discount = parseFloat(formData.discount);\n        formData.discount_percent = parseFloat(formData.discount_percent);\n\n        formData.vat_percent = parseFloat(formData.vat_percent);\n        formData.partial_payment_amount = parseFloat(formData.partial_payment_amount);\n        console.log(\"formData.discount:\", formData.discount);\n\n\n        if (formData.payment_status === \"paid_partially\" && !formData.partial_payment_amount && formData.partial_payment_amount !== 0) {\n            errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount <= 0) {\n            errors[\"partial_payment_amount\"] = \"Partial payment should be > 0 \";\n            setErrors({ ...errors });\n            return;\n        }\n\n        if (formData.payment_status === \"paid_partially\" && formData.partial_payment_amount >= netTotal) {\n            errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n            setErrors({ ...errors });\n            return;\n        }\n\n        errors[\"payment_method\"] = \"\";\n        setErrors({ ...errors });\n        if (!formData.id && formData.payment_status != \"not_paid\" && !formData.payment_method) {\n            errors[\"payment_method\"] = \"Payment method is required\";\n            setErrors({ ...errors });\n            return;\n        }\n\n\n        /*\n        if (!formData.discountValue && formData.discountValue !== 0) {\n            errors[\"discount\"] = \"Invalid Discount\";\n            setErrors({ ...errors });\n            return;\n        }\n        */\n\n        let endPoint = \"/v1/sales-return\";\n        let method = \"POST\";\n\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n            body: JSON.stringify(formData),\n        };\n\n        console.log(\"formData:\", formData);\n\n        setProcessing(true);\n        fetch(endPoint, requestOptions)\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = data && data.errors;\n                    //const error = data.errors\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n                setProcessing(false);\n\n                console.log(\"Response:\");\n                console.log(data);\n                props.showToastMessage(\"SalesReturn Created Successfully!\", \"success\");\n                if (props.refreshList) {\n                    props.refreshList();\n                }\n                handleClose();\n\n                openDetailsView(data.result.id);\n            })\n            .catch((error) => {\n                setProcessing(false);\n                console.log(\"Inside catch\");\n                console.log(error);\n                setErrors({ ...error });\n                console.error(\"There was an error!\", error);\n                props.showToastMessage(\"Error Creating SalesReturn!\", \"danger\");\n            });\n    }\n\n\n    let [totalPrice, setTotalPrice] = useState(0.0);\n\n    function findTotalPrice() {\n        totalPrice = 0.00;\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (!selectedProducts[i].selected) {\n                continue;\n            }\n            totalPrice +=\n                parseFloat(selectedProducts[i].unit_price) *\n                parseFloat(selectedProducts[i].quantity);\n        }\n        totalPrice = totalPrice.toFixed(2);\n        setTotalPrice(totalPrice);\n    }\n\n    let [vatPrice, setVatPrice] = useState(0.00);\n\n    /*\n    function findVatPrice() {\n        vatPrice = ((parseFloat(formData.vat_percent) / 100) * parseFloat(totalPrice - formData.discount)).toFixed(2);;\n        console.log(\"vatPrice:\", vatPrice);\n        setVatPrice(vatPrice);\n    }*/\n\n    function findVatPrice() {\n        vatPrice = 0.00;\n        if (totalPrice > 0) {\n            //+ parseFloat(formData.shipping_handling_fees)\n            vatPrice = (parseFloat((parseFloat(formData.vat_percent) / 100)) * (parseFloat(totalPrice) - parseFloat(formData.discount)));\n            console.log(\"vatPrice:\", vatPrice);\n        }\n        setVatPrice(vatPrice);\n    }\n\n\n\n    let [netTotal, setNetTotal] = useState(0.00);\n\n    function findNetTotal() {\n        if (totalPrice > 0) {\n            netTotal = (parseFloat(totalPrice) - parseFloat(formData.discount) + parseFloat(vatPrice));\n            setNetTotal(netTotal);\n        }\n\n    }\n\n    let [discountPercent, setDiscountPercent] = useState(0.00);\n\n    /*\n    function findDiscountPercent() {\n        if (formData.discount >= 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            setFormData({ ...formData });\n        }\n    }\n    */\n\n\n\n    /*\n    function findDiscountPercent() {\n        if (!formData.discountValue) {\n            formData.discount = 0.00;\n            formData.discount_percent = 0.00;\n            setFormData({ ...formData });\n            return;\n        }\n\n        formData.discount = formData.discountValue;\n\n        if (formData.discount > 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100).toFixed(2);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            setFormData({ ...formData });\n        }\n\n    }\n    */\n\n    /*\n    function findDiscount() {\n        if (!formData.discountValue) {\n            formData.discount = 0.00;\n            formData.discount_percent = 0.00;\n            setFormData({ ...formData });\n            return;\n        }\n\n        formData.discount_percent = formData.discountValue;\n\n        if (formData.discount_percent > 0 && totalPrice > 0) {\n            formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)).toFixed(2);\n        }\n        setFormData({ ...formData });\n    }\n    */\n\n    function findDiscount() {\n        if (formData.discount_percent >= 0 && totalPrice > 0) {\n            formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100));\n            //formData.discount = Math.round(formData.discount * 100) / 100;\n           // formData.discount = parseFloat(formData.discount.toFixed(2));\n            setFormData({ ...formData });\n        }\n    }\n\n    function findDiscountPercent() {\n        if (formData.discount >= 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            //formData.discount_percent = Math.round(formData.discount_percent * 100) / 100;\n            setFormData({ ...formData });\n        }\n    }\n\n    function reCalculate() {\n        findTotalPrice();\n        //findDiscount();\n        //findDiscountPercent();\n\n        if (formData.is_discount_percent) {\n            findDiscount();\n        } else {\n            findDiscountPercent();\n        }\n        findVatPrice();\n        findNetTotal();\n    }\n\n\n\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n    const StoreCreateFormRef = useRef();\n\n    const CustomerCreateFormRef = useRef();\n    const ProductCreateFormRef = useRef();\n\n\n\n    const UserCreateFormRef = useRef();\n    function openUserCreateForm() {\n        UserCreateFormRef.current.open();\n    }\n\n\n    const SignatureCreateFormRef = useRef();\n    function openSignatureCreateForm() {\n        SignatureCreateFormRef.current.open();\n    }\n\n\n    const ProductDetailsViewRef = useRef();\n    function openProductDetailsView(id) {\n        ProductDetailsViewRef.current.open(id);\n    }\n\n\n    return (\n        <>\n            <SalesReturnView ref={DetailsViewRef} />\n            <ProductView ref={ProductDetailsViewRef} />\n            <StoreCreate ref={StoreCreateFormRef} showToastMessage={props.showToastMessage} />\n            <CustomerCreate ref={CustomerCreateFormRef} showToastMessage={props.showToastMessage} />\n            <ProductCreate ref={ProductCreateFormRef} showToastMessage={props.showToastMessage} />\n            <UserCreate ref={UserCreateFormRef} showToastMessage={props.showToastMessage} />\n            <SignatureCreate ref={SignatureCreateFormRef} showToastMessage={props.showToastMessage} />\n\n\n            <Modal show={show} size=\"xl\" onHide={handleClose} animation={false} backdrop=\"static\" scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>\n                        {\"Create Sales Return for Sales Order #\" + formData.order_code}\n                    </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <SalesReturnPreview />\n                        <Button variant=\"primary\" onClick={handleCreate} >\n                            {isProcessing ?\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden={true}\n                                /> + \" Creating...\"\n\n                                : \"\"\n                            }\n                            {formData.id ? \"Update\" : \"Create\"}\n\n                        </Button>\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    {Object.keys(errors).length > 0 ?\n                        <div>\n                            <ul>\n\n                                {errors && Object.keys(errors).map((key, index) => {\n                                    return (errors[key] ? <li style={{ color: \"red\" }}>{errors[key]}</li> : \"\");\n                                })}\n                            </ul></div> : \"\"}\n                    {selectedProducts.length === 0 && \"Already Returned All sold products\"}\n                    {selectedProducts.length > 0 && <form className=\"row g-3 needs-validation\" onSubmit={handleCreate}>\n                        <h2>Select Products</h2>\n                        <div className=\"table-responsive\" style={{ overflowX: \"auto\", overflowY: \"scroll\" }}>\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <thead>\n                                    <tr className=\"text-center\">\n                                        <th>Select</th>\n                                        <th>SI No.</th>\n                                        <th>Part No.</th>\n                                        <th>Name</th>\n                                        <th>Qty</th>\n                                        <th>Unit Price</th>\n                                        <th>Price</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedProducts.map((product, index) => (\n                                        <tr key={index} className=\"text-center\">\n                                            <td>\n                                                <input type=\"checkbox\" checked={selectedProducts[index].selected} onChange={(e) => {\n                                                    console.log(\"e.target.value:\", e.target.value)\n                                                    selectedProducts[index].selected = !selectedProducts[index].selected;\n                                                    setSelectedProducts([...selectedProducts]);\n                                                    reCalculate();\n                                                }} />\n                                            </td>\n                                            <td>{index + 1}</td>\n                                            <td>{product.part_number}</td>\n                                            <td style={{\n                                                textDecoration: \"underline\",\n                                                color: \"blue\",\n                                                cursor: \"pointer\",\n                                            }}\n                                                onClick={() => {\n                                                    openProductDetailsView(product.product_id);\n                                                }}>{product.name}\n                                            </td>\n                                            <td style={{ width: \"155px\" }}>\n\n                                                <div class=\"input-group mb-3\">\n                                                    <input type=\"number\" value={(product.quantity)} className=\"form-control\"\n\n                                                        placeholder=\"Quantity\" onChange={(e) => {\n                                                            errors[\"quantity_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                                                                selectedProducts[index].quantity = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (parseFloat(e.target.value) === 0) {\n                                                                errors[\"quantity_\" + index] = \"Quantity should be >0\";\n                                                                selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            product.quantity = parseFloat(e.target.value);\n                                                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span class=\"input-group-text\" id=\"basic-addon2\">{selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"}</span>\n                                                </div>\n                                                {errors[\"quantity_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"quantity_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td style={{ width: \"180px\" }}>\n                                                <div class=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.unit_price} className=\"form-control\"\n\n                                                        placeholder=\"Unit Price\" onChange={(e) => {\n                                                            errors[\"unit_price_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                                                                selectedProducts[index].unit_price = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (e.target.value === 0) {\n                                                                errors[\"unit_price_\" + index] = \"Invalid Unit Price should be > 0\";\n                                                                selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                            console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span class=\"input-group-text\" id=\"basic-addon2\">SAR</span>\n                                                </div>\n                                                {errors[\"unit_price_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"unit_price_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td>\n                                                <NumberFormat\n                                                    value={(product.unit_price * product.quantity).toFixed(2)}\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    suffix={\" SAR\"}\n                                                    renderText={(value, props) => value}\n                                                />\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <tbody>\n                                    <tr>\n                                        <td colSpan=\"4\"></td>\n                                        <td className=\"text-center\">\n\n                                        </td>\n                                        <th className=\"text-end\">Total</th>\n                                        <td className=\"text-end\" style={{ width: \"180px\" }}>\n                                            <NumberFormat\n                                                value={totalPrice}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <th colSpan=\"6\" className=\"text-end\">\n                                            Discount  <input type=\"number\" style={{ width: \"50px\" }} className=\"text-start\" value={formData.discount_percent} onChange={(e) => {\n                                                formData.is_discount_percent = true;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    formData.discount = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount_percent = \"\";\n                                                    formData.discount = 0.00;\n                                                    errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                                                    setFormData({ ...formData });\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount_percent\"] = \"\";\n                                                errors[\"discount\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount_percent = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />{\"%\"}\n                                            {errors.discount_percent && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount_percent}\n                                                </div>\n                                            )}\n                                            {/*\n                                            Discount(  {formData.discount_percent + \"%\"})\n                                                */}\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <input type=\"number\" style={{ width: \"150px\" }} className=\"text-start\" value={formData.discount} onChange={(e) => {\n                                                formData.is_discount_percent = false;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    formData.discount_percent = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"Discount should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount = \"\";\n                                                    formData.discount_percent = 0.00;\n                                                    errors[\"discount\"] = \"Invalid Discount\";\n                                                    setFormData({ ...formData });\n                                                    reCalculate();\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount\"] = \"\";\n                                                errors[\"discount_percent\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />\n                                            {\" SAR\"}\n                                            {errors.discount && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount}\n                                                </div>\n                                            )}\n\n                                            {/*\n                                            <NumberFormat\n                                                value={formData.discount}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                            */}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th colSpan=\"5\" className=\"text-end\">\n\n                                        </th>\n                                        <th className=\"text-end\"> VAT: {formData.vat_percent + \"%\"}</th>\n                                        <td className=\"text-end\">\n                                            <NumberFormat\n                                                value={vatPrice?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"5\"></td>\n                                        <th className=\"text-end\">Net Total</th>\n                                        <th className=\"text-end\">\n                                            <NumberFormat\n                                                value={netTotal?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </th>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <div className=\"col-md-3\">\n                            <label className=\"form-label\">Date*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"date_str\"\n                                    selected={formData.date_str ? new Date(formData.date_str) : null}\n                                    value={formData.date_str ? format(\n                                        new Date(formData.date_str),\n                                        \"MMMM d, yyyy h:mm aa\"\n                                    ) : null}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                    showTimeSelect\n                                    timeIntervals=\"1\"\n                                    onChange={(value) => {\n                                        console.log(\"Value\", value);\n                                        formData.date_str = value;\n                                        // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n                            </div>\n                            {errors.date_str && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.date_str}\n                                </div>\n                            )}\n                            {formData.date_str && !errors.date_str && (\n                                <div style={{ color: \"green\" }}>\n                                    <i className=\"bi bi-check-lg\"> </i>\n                                    Looks good!\n                                </div>\n                            )}\n                        </div>\n\n\n                        {/*\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Discount*</label>\n\n                            <div className=\"input-group mb-3\" >\n                                <input\n                                    value={formData.discountValue}\n                                    style={{ marginRight: \"10px\" }}\n                                    type='number'\n                                    onChange={(e) => {\n                                        if (parseFloat(e.target.value) === 0) {\n                                            formData.discountValue = parseFloat(e.target.value);\n                                            setFormData({ ...formData });\n                                            errors[\"discount\"] = \"\";\n                                            setErrors({ ...errors });\n                                            reCalculate();\n                                            return;\n                                        }\n\n                                        if (!e.target.value) {\n                                            formData.discountValue = \"\";\n                                            errors[\"discount\"] = \"Invalid Discount\";\n                                            setFormData({ ...formData });\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"discount\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.discountValue = e.target.value;\n                                        setFormData({ ...formData });\n                                        reCalculate();\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"validationCustom02\"\n                                    placeholder=\"Discount\"\n                                />\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"custom-switch\"\n                                    label=\"%\"\n                                    value={formData.is_discount_percent}\n                                    checked={formData.is_discount_percent ? \"checked\" : null}\n                                    onChange={(e) => {\n                                        formData.is_discount_percent = !formData.is_discount_percent;\n                                        console.log(\"e.target.value:\", formData.is_discount_percent);\n                                        setFormData({ ...formData });\n                                        reCalculate();\n                                    }}\n                                />\n\n                            </div>\n                            {errors.discount && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.discount}\n                                </div>\n                            )}\n                            {!errors.discount && (\n                                <div style={{ color: \"green\" }}>\n                                    <i className=\"bi bi-check-lg\"> </i>\n                                    Looks good!\n                                </div>\n                            )}\n                        </div>\n                            */}\n\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Payment method*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <select\n                                    value={formData.payment_method}\n                                    disabled={formData.payment_status == \"not_paid\" ? \"disabled\" : \"\"}\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange payment method\");\n                                        if (!e.target.value) {\n                                            errors[\"status\"] = \"Payment method is required\";\n                                            formData.payment_method = \"\";\n                                            setFormData({ ...formData });\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"payment_method\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.payment_method = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                >\n                                    <option value=\"\">Select</option>\n                                    <option value=\"cash\">Cash</option>\n                                    <option value=\"bank_account\">Bank Account / Debit / Credit Card</option>\n                                </select>\n                                {errors.payment_method && (\n                                    <div style={{ color: \"red\" }}>\n                                        {errors.payment_method}\n                                    </div>\n                                )}\n                                {formData.payment_method && !errors.payment_method && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Payment Status*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <select\n                                    value={formData.payment_status}\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange payment Status\");\n                                        if (!e.target.value) {\n                                            errors[\"status\"] = \"Payment status is required\";\n                                            setErrors({ ...errors });\n                                            formData.payment_status = \"\";\n                                            setFormData({ ...formData });\n                                            return;\n                                        }\n\n                                        errors[\"payment_status\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.payment_status = e.target.value;\n                                        if (formData.payment_status !== \"paid_partially\") {\n                                            formData.partial_payment_amount = 0.00;\n                                        }\n                                        setFormData({ ...formData });\n\n                                        if (formData.payment_status == \"not_paid\") {\n                                            formData.payment_method = \"\";\n                                            setFormData({ ...formData });\n                                        }\n\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                >\n                                    <option value=\"\">Select</option>\n                                    <option value=\"paid\">Paid</option>\n                                    <option value=\"not_paid\">Not Paid</option>\n                                    <option value=\"paid_partially\">Paid Partially</option>\n                                </select>\n                                {errors.payment_status && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.payment_status}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n\n                        {formData.payment_status === \"paid_partially\" ? <div className=\"col-md-3\">\n                            <label className=\"form-label\">Patial Payment Amount*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type='number'\n                                    value={formData.partial_payment_amount}\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange vat discount\");\n                                        if (!e.target.value) {\n                                            formData.partial_payment_amount = e.target.value;\n                                            errors[\"partial_payment_amount\"] = \"Invalid partial payment amount\";\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n                                        formData.partial_payment_amount = parseFloat(e.target.value);\n                                        errors[\"partial_payment_amount\"] = \"\";\n\n                                        if (formData.partial_payment_amount >= netTotal) {\n                                            errors[\"partial_payment_amount\"] = \"Partial payment cannot be >= \" + netTotal;\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n                                        setErrors({ ...errors });\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"validationCustom02\"\n                                    placeholder=\"Amount\"\n                                />\n                                {errors.partial_payment_amount && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.partial_payment_amount}\n                                    </div>\n                                )}\n                            </div>\n                        </div> : \"\"}\n\n\n\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleCreate} >\n                                {isProcessing ?\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"bsalesreturn\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden={true}\n                                    /> + \" Creating...\"\n\n                                    : formData.id ? \"Update\" : \"Create\"\n                                }\n                            </Button>\n                        </Modal.Footer>\n                    </form>}\n                </Modal.Body>\n\n            </Modal>\n\n\n        </>\n    );\n});\n\nexport default SalesReturnCreate;\n"]},"metadata":{},"sourceType":"module"}