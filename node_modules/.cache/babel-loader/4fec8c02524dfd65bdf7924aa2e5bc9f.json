{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/customer/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport { Spinner } from \"react-bootstrap\";\nimport CustomerView from \"./view.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerCreate = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      formData = {};\n      setFormData({ ...formData\n      });\n\n      if (id) {\n        getCustomer(id);\n      }\n\n      SetShow(true);\n    }\n\n  }));\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function-customer.\"); // event.preventDefault();\n\n        var form = event.target.form;\n\n        if (form && event.target) {\n          var index = Array.prototype.indexOf.call(form, event.target);\n\n          if (form && form.elements[index + 1]) {\n            if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n              form.elements[index].focus();\n            } else {\n              form.elements[index + 1].focus();\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  let [errors, setErrors] = useState({});\n  const [isProcessing, setProcessing] = useState(false);\n  const cookies = new Cookies(); //fields\n\n  let [formData, setFormData] = useState({});\n  const [show, SetShow] = useState(false);\n\n  function handleClose() {\n    SetShow(false);\n  }\n\n  useEffect(() => {\n    let at = cookies.get(\"access_token\");\n\n    if (!at) {\n      window.location = \"/\";\n    }\n  });\n\n  function getCustomer(id) {\n    console.log(\"inside get Order\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/customer/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      let customerData = data.result;\n      customerData.logo = \"\";\n      setFormData({ ...customerData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n\n  function handleCreate(event) {\n    event.preventDefault();\n    console.log(\"Inside handle Create\");\n\n    if (formData.vat_percent) {\n      formData.vat_percent = parseFloat(formData.vat_percent);\n    } else {\n      formData.vat_percent = null;\n    }\n\n    formData.phone_in_arabic = convertToPersianNumber(formData.phone);\n    formData.vat_no_in_arabic = convertToPersianNumber(formData.vat_no);\n    let endPoint = \"/v1/customer\";\n    let method = \"POST\";\n\n    if (formData.id) {\n      endPoint = \"/v1/customer/\" + formData.id;\n      method = \"PUT\";\n    }\n\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(\"formData:\", formData);\n    setProcessing(true);\n    fetch(endPoint, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.errors; //const error = data.errors\n\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      setProcessing(false);\n      console.log(\"Response:\");\n      console.log(data);\n      props.showToastMessage(\"Customer Created Successfully!\", \"success\");\n\n      if (props.refreshList) {\n        props.refreshList();\n      }\n\n      handleClose();\n      props.openDetailsView(data.result.id);\n    }).catch(error => {\n      setProcessing(false);\n      console.log(\"Inside catch\");\n      console.log(error);\n      setErrors({ ...error\n      });\n      console.error(\"There was an error!\", error);\n      props.showToastMessage(\"Error Creating Customer!\", \"danger\");\n    });\n  }\n\n  let persianDigits = \"۰۱۲۳٤۵٦۷۸۹\";\n  let persianMap = persianDigits.split(\"\");\n\n  function convertToPersianNumber(input) {\n    if (!input) {\n      return \"\";\n    }\n\n    return input.replace(/\\d/g, function (m) {\n      return persianMap[parseInt(m)];\n    });\n  }\n  /*\n   const DetailsViewRef = useRef();\n  function openDetailsView(id) {\n      console.log(\"id:\", id);\n      DetailsViewRef.current.open(id);\n  }\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"lg\",\n      onHide: handleClose,\n      animation: false,\n      backdrop: \"static\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: formData.id ? \"Update Customer #\" + formData.name : \"Create New Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [formData.id ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              handleClose();\n              props.openDetailsView(formData.id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), \" View Detail\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 40\n          }, this) : \"\", \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreate,\n            children: [isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this) + \" Creating...\" : \"\", formData.id ? \"Update\" : \"Create\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 needs-validation\",\n          onSubmit: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Name*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: formData.name ? formData.name : \"\",\n                type: \"string\",\n                onChange: e => {\n                  errors[\"name\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.name = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"name\",\n                placeholder: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this), errors.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), formData.name && !errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Name In Arabic (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: formData.name_in_arabic ? formData.name_in_arabic : \"\",\n                type: \"string\",\n                onChange: e => {\n                  errors[\"name_in_arabic\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.name_in_arabic = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"name_in_arabic\",\n                placeholder: \"Name In Arabic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this), errors.name_in_arabic && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this), errors.name_in_arabic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 37\n              }, this), formData.name_in_arabic && !errors.name_in_arabic && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Phone*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: formData.phone ? formData.phone : \"\",\n                type: \"string\",\n                onChange: e => {\n                  errors[\"phone\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.phone = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"phone\",\n                placeholder: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 41\n                }, this), errors.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 37\n              }, this), formData.phone && !errors.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Address(Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: formData.address,\n                type: \"string\",\n                onChange: e => {\n                  errors[\"address\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.address = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"address\",\n                placeholder: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }, this), errors.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this), formData.address && !errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Address In Arabic(Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: formData.address_in_arabic,\n                type: \"string\",\n                onChange: e => {\n                  errors[\"address_in_arabic\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.address_in_arabic = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"address_in_arabic\",\n                placeholder: \"Address In Arabic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this), errors.address_in_arabic && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 41\n                }, this), errors.address_in_arabic]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 37\n              }, this), formData.address_in_arabic && !errors.address_in_arabic && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"VAT NO.(Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: formData.vat_no ? formData.vat_no : \"\",\n                type: \"string\",\n                onChange: e => {\n                  errors[\"vat_no\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.vat_no = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"vat_no\",\n                placeholder: \"VAT NO.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 33\n              }, this), errors.vat_no && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 41\n                }, this), errors.vat_no]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 37\n              }, this), formData.vat_no && !errors.vat_no && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Email (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: formData.email ? formData.email : \"\",\n                type: \"string\",\n                onChange: e => {\n                  errors[\"email\"] = \"\";\n                  formData.email = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"email\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 33\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 41\n                }, this), errors.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 37\n              }, this), formData.email && !errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleCreate,\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"bcustomer\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 37\n              }, this) + \" Processing...\" : formData.id ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"z/Bn6gGmGVOKozAuMqSzu1MezLw=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = CustomerCreate;\nexport default CustomerCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomerCreate$forwardRef\");\n$RefreshReg$(_c2, \"CustomerCreate\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/customer/create.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Modal","Button","Cookies","Spinner","CustomerView","CustomerCreate","props","ref","open","id","formData","setFormData","getCustomer","SetShow","listener","event","code","console","log","form","target","index","Array","prototype","indexOf","call","elements","getAttribute","includes","focus","preventDefault","document","addEventListener","removeEventListener","errors","setErrors","isProcessing","setProcessing","cookies","show","handleClose","at","get","window","location","requestOptions","method","headers","fetch","then","response","isJson","data","json","ok","error","Promise","reject","customerData","result","logo","catch","handleCreate","vat_percent","parseFloat","phone_in_arabic","convertToPersianNumber","phone","vat_no_in_arabic","vat_no","endPoint","Authorization","body","JSON","stringify","showToastMessage","refreshList","openDetailsView","persianDigits","persianMap","split","input","replace","m","parseInt","name","e","value","color","name_in_arabic","address","address_in_arabic","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport { Spinner } from \"react-bootstrap\";\nimport CustomerView from \"./view.js\";\n\n\nconst CustomerCreate = forwardRef((props, ref) => {\n\n    useImperativeHandle(ref, () => ({\n        open(id) {\n            formData = {};\n            setFormData({ ...formData });\n            if (id) {\n                getCustomer(id);\n            }\n            SetShow(true);\n\n        },\n\n    }));\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                console.log(\"Enter key was pressed. Run your function-customer.\");\n                // event.preventDefault();\n\n                var form = event.target.form;\n                if (form && event.target) {\n                    var index = Array.prototype.indexOf.call(form, event.target);\n                    if (form && form.elements[index + 1]) {\n                        if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n                            form.elements[index].focus();\n                        } else {\n                            form.elements[index + 1].focus();\n                        }\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n\n    let [errors, setErrors] = useState({});\n    const [isProcessing, setProcessing] = useState(false);\n    const cookies = new Cookies();\n\n    //fields\n    let [formData, setFormData] = useState({});\n\n    const [show, SetShow] = useState(false);\n\n    function handleClose() {\n        SetShow(false);\n    }\n\n    useEffect(() => {\n        let at = cookies.get(\"access_token\");\n        if (!at) {\n            window.location = \"/\";\n        }\n    });\n\n\n    function getCustomer(id) {\n        console.log(\"inside get Order\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/customer/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n                let customerData = data.result;\n                customerData.logo = \"\";\n                setFormData({ ...customerData });\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n\n    function handleCreate(event) {\n        event.preventDefault();\n        console.log(\"Inside handle Create\");\n\n\n        if (formData.vat_percent) {\n            formData.vat_percent = parseFloat(formData.vat_percent);\n        } else {\n            formData.vat_percent = null;\n        }\n\n        formData.phone_in_arabic = convertToPersianNumber(formData.phone);\n        formData.vat_no_in_arabic = convertToPersianNumber(formData.vat_no);\n\n        let endPoint = \"/v1/customer\";\n        let method = \"POST\";\n        if (formData.id) {\n            endPoint = \"/v1/customer/\" + formData.id;\n            method = \"PUT\";\n        }\n\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n            body: JSON.stringify(formData),\n        };\n\n        console.log(\"formData:\", formData);\n\n        setProcessing(true);\n        fetch(endPoint, requestOptions)\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = data && data.errors;\n                    //const error = data.errors\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n                setProcessing(false);\n\n                console.log(\"Response:\");\n                console.log(data);\n                props.showToastMessage(\"Customer Created Successfully!\", \"success\");\n                if (props.refreshList) {\n                    props.refreshList();\n                }\n                handleClose();\n                props.openDetailsView(data.result.id);\n            })\n            .catch((error) => {\n                setProcessing(false);\n                console.log(\"Inside catch\");\n                console.log(error);\n                setErrors({ ...error });\n                console.error(\"There was an error!\", error);\n                props.showToastMessage(\"Error Creating Customer!\", \"danger\");\n            });\n    }\n\n    let persianDigits = \"۰۱۲۳٤۵٦۷۸۹\";\n    let persianMap = persianDigits.split(\"\");\n\n\n    function convertToPersianNumber(input) {\n        if (!input) {\n            return \"\";\n        }\n        return input.replace(/\\d/g, function (m) {\n            return persianMap[parseInt(m)];\n        });\n    }\n\n    /*\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        console.log(\"id:\", id);\n        DetailsViewRef.current.open(id);\n    }\n    */\n\n    return (\n        <>\n            {/*  <CustomerView ref={DetailsViewRef} />*/}\n            <Modal show={show} size=\"lg\" onHide={handleClose} animation={false} backdrop=\"static\" scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>\n                        {formData.id ? \"Update Customer #\" + formData.name : \"Create New Customer\"}\n                    </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        {formData.id ? <Button variant=\"primary\" onClick={() => {\n                            handleClose();\n                            props.openDetailsView(formData.id);\n                        }}>\n                            <i className=\"bi bi-eye\"></i> View Detail\n                        </Button> : \"\"}\n                        &nbsp;&nbsp;\n                        <Button variant=\"primary\" onClick={handleCreate} >\n                            {isProcessing ?\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden={true}\n                                /> + \" Creating...\"\n\n                                : \"\"\n                            }\n                            {formData.id ? \"Update\" : \"Create\"}\n\n                        </Button>\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"row g-3 needs-validation\" onSubmit={handleCreate}>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Name*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.name ? formData.name : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"name\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.name = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"name\"\n                                    placeholder=\"Name\"\n                                />\n                                {errors.name && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.name}\n                                    </div>\n                                )}\n                                {formData.name && !errors.name && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Name In Arabic (Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.name_in_arabic ? formData.name_in_arabic : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"name_in_arabic\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.name_in_arabic = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"name_in_arabic\"\n                                    placeholder=\"Name In Arabic\"\n                                />\n                                {errors.name_in_arabic && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.name_in_arabic}\n                                    </div>\n                                )}\n                                {formData.name_in_arabic && !errors.name_in_arabic && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Phone*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.phone ? formData.phone : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"phone\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.phone = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"phone\"\n                                    placeholder=\"Phone\"\n                                />\n                                {errors.phone && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.phone}\n                                    </div>\n                                )}\n                                {formData.phone && !errors.phone && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Address(Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <textarea\n                                    value={formData.address}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"address\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.address = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"address\"\n                                    placeholder=\"Address\"\n                                />\n                                {errors.address && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.address}\n                                    </div>\n                                )}\n                                {formData.address && !errors.address && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Address In Arabic(Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <textarea\n                                    value={formData.address_in_arabic}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"address_in_arabic\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.address_in_arabic = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"address_in_arabic\"\n                                    placeholder=\"Address In Arabic\"\n                                />\n                                {errors.address_in_arabic && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.address_in_arabic}\n                                    </div>\n                                )}\n                                {formData.address_in_arabic && !errors.address_in_arabic && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">VAT NO.(Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.vat_no ? formData.vat_no : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"vat_no\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.vat_no = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"vat_no\"\n                                    placeholder=\"VAT NO.\"\n                                />\n                                {errors.vat_no && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.vat_no}\n                                    </div>\n                                )}\n                                {formData.vat_no && !errors.vat_no && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Email (Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.email ? formData.email : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"email\"] = \"\";\n\n                                        formData.email = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"email\"\n                                    placeholder=\"Email\"\n                                />\n\n                                {errors.email && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.email}\n                                    </div>\n                                )}\n                                {formData.email && !errors.email && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleCreate} >\n                                {isProcessing ?\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"bcustomer\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden={true}\n                                    /> + \" Processing...\"\n\n                                    : formData.id ? \"Update\" : \"Create\"\n                                }\n                            </Button>\n                        </Modal.Footer>\n                    </form>\n                </Modal.Body>\n\n            </Modal>\n\n\n        </>\n    );\n});\n\nexport default CustomerCreate;\n"]},"metadata":{},"sourceType":"module"}