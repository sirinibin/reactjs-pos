{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"allowNew\", \"delay\", \"emptyLabel\", \"isLoading\", \"minLength\", \"onInputChange\", \"onSearch\", \"options\", \"promptText\", \"searchText\", \"useCache\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef, useCallback, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport { optionType } from '../propTypes';\nimport { getDisplayName, isFunction } from '../utils';\nvar propTypes = {\n  /**\n   * Delay, in milliseconds, before performing search.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Whether or not a request is currently pending. Necessary for the\n   * container to know when new results are available.\n   */\n  isLoading: PropTypes.bool.isRequired,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Callback to perform when the search is executed.\n   */\n  onSearch: PropTypes.func.isRequired,\n\n  /**\n   * Options to be passed to the typeahead. Will typically be the query\n   * results, but can also be initial default options.\n   */\n  options: PropTypes.arrayOf(optionType),\n\n  /**\n   * Message displayed in the menu when there is no user input.\n   */\n  promptText: PropTypes.node,\n\n  /**\n   * Message displayed in the menu while the request is pending.\n   */\n  searchText: PropTypes.node,\n\n  /**\n   * Whether or not the component should cache query results.\n   */\n  useCache: PropTypes.bool\n};\n/**\n * Logic that encapsulates common behavior and functionality around\n * asynchronous searches, including:\n *\n *  - Debouncing user input\n *  - Optional query caching\n *  - Search prompt and empty results behaviors\n */\n\nexport function useAsync(props) {\n  var allowNew = props.allowNew,\n      _props$delay = props.delay,\n      delay = _props$delay === void 0 ? 200 : _props$delay,\n      emptyLabel = props.emptyLabel,\n      isLoading = props.isLoading,\n      _props$minLength = props.minLength,\n      minLength = _props$minLength === void 0 ? 2 : _props$minLength,\n      onInputChange = props.onInputChange,\n      onSearch = props.onSearch,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      _props$promptText = props.promptText,\n      promptText = _props$promptText === void 0 ? 'Type to search...' : _props$promptText,\n      _props$searchText = props.searchText,\n      searchText = _props$searchText === void 0 ? 'Searching...' : _props$searchText,\n      _props$useCache = props.useCache,\n      useCache = _props$useCache === void 0 ? true : _props$useCache,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var cacheRef = useRef({});\n  var handleSearchDebouncedRef = useRef(null);\n  var queryRef = useRef(props.defaultInputValue || '');\n  var forceUpdate = useForceUpdate();\n  var prevProps = usePrevious(props);\n  var handleSearch = useCallback(function (query) {\n    queryRef.current = query;\n\n    if (!query || minLength && query.length < minLength) {\n      return;\n    } // Use cached results, if applicable.\n\n\n    if (useCache && cacheRef.current[query]) {\n      // Re-render the component with the cached results.\n      forceUpdate();\n      return;\n    } // Perform the search.\n\n\n    onSearch(query);\n  }, [forceUpdate, minLength, onSearch, useCache]); // Set the debounced search function.\n\n  useEffect(function () {\n    handleSearchDebouncedRef.current = debounce(handleSearch, delay);\n    return function () {\n      handleSearchDebouncedRef.current && handleSearchDebouncedRef.current.cancel();\n    };\n  }, [delay, handleSearch]);\n  useEffect(function () {\n    // Ensure that we've gone from a loading to a completed state. Otherwise\n    // an empty response could get cached if the component updates during the\n    // request (eg: if the parent re-renders for some reason).\n    if (!isLoading && prevProps && prevProps.isLoading && useCache) {\n      cacheRef.current[queryRef.current] = options;\n    }\n  });\n\n  var getEmptyLabel = function getEmptyLabel() {\n    if (!queryRef.current.length) {\n      return promptText;\n    }\n\n    if (isLoading) {\n      return searchText;\n    }\n\n    return emptyLabel;\n  };\n\n  var handleInputChange = useCallback(function (query, e) {\n    onInputChange && onInputChange(query, e);\n    handleSearchDebouncedRef.current && handleSearchDebouncedRef.current(query);\n  }, [onInputChange]);\n  var cachedQuery = cacheRef.current[queryRef.current];\n  return _objectSpread(_objectSpread({}, otherProps), {}, {\n    // Disable custom selections during a search if `allowNew` isn't a function.\n    allowNew: isFunction(allowNew) ? allowNew : allowNew && !isLoading,\n    emptyLabel: getEmptyLabel(),\n    isLoading: isLoading,\n    minLength: minLength,\n    onInputChange: handleInputChange,\n    options: useCache && cachedQuery ? cachedQuery : options\n  });\n}\nexport function withAsync(Component) {\n  var AsyncTypeahead = /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, useAsync(props), {\n      ref: ref\n    }));\n  });\n  AsyncTypeahead.displayName = \"withAsync(\".concat(getDisplayName(Component), \")\"); // @ts-ignore\n\n  AsyncTypeahead.propTypes = propTypes;\n  return AsyncTypeahead;\n}","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/react-bootstrap-typeahead/es/behaviors/async.js"],"names":["_extends","_defineProperty","_objectWithoutProperties","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","debounce","PropTypes","React","forwardRef","useCallback","useEffect","useRef","useForceUpdate","usePrevious","optionType","getDisplayName","isFunction","propTypes","delay","number","isLoading","bool","isRequired","minLength","onSearch","func","options","arrayOf","promptText","node","searchText","useCache","useAsync","props","allowNew","_props$delay","emptyLabel","_props$minLength","onInputChange","_props$options","_props$promptText","_props$searchText","_props$useCache","otherProps","cacheRef","handleSearchDebouncedRef","queryRef","defaultInputValue","forceUpdate","prevProps","handleSearch","query","current","cancel","getEmptyLabel","handleInputChange","e","cachedQuery","withAsync","Component","AsyncTypeahead","ref","createElement","displayName","concat"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"allowNew\", \"delay\", \"emptyLabel\", \"isLoading\", \"minLength\", \"onInputChange\", \"onSearch\", \"options\", \"promptText\", \"searchText\", \"useCache\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef, useCallback, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport { optionType } from '../propTypes';\nimport { getDisplayName, isFunction } from '../utils';\nvar propTypes = {\n  /**\n   * Delay, in milliseconds, before performing search.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Whether or not a request is currently pending. Necessary for the\n   * container to know when new results are available.\n   */\n  isLoading: PropTypes.bool.isRequired,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Callback to perform when the search is executed.\n   */\n  onSearch: PropTypes.func.isRequired,\n\n  /**\n   * Options to be passed to the typeahead. Will typically be the query\n   * results, but can also be initial default options.\n   */\n  options: PropTypes.arrayOf(optionType),\n\n  /**\n   * Message displayed in the menu when there is no user input.\n   */\n  promptText: PropTypes.node,\n\n  /**\n   * Message displayed in the menu while the request is pending.\n   */\n  searchText: PropTypes.node,\n\n  /**\n   * Whether or not the component should cache query results.\n   */\n  useCache: PropTypes.bool\n};\n\n/**\n * Logic that encapsulates common behavior and functionality around\n * asynchronous searches, including:\n *\n *  - Debouncing user input\n *  - Optional query caching\n *  - Search prompt and empty results behaviors\n */\nexport function useAsync(props) {\n  var allowNew = props.allowNew,\n      _props$delay = props.delay,\n      delay = _props$delay === void 0 ? 200 : _props$delay,\n      emptyLabel = props.emptyLabel,\n      isLoading = props.isLoading,\n      _props$minLength = props.minLength,\n      minLength = _props$minLength === void 0 ? 2 : _props$minLength,\n      onInputChange = props.onInputChange,\n      onSearch = props.onSearch,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      _props$promptText = props.promptText,\n      promptText = _props$promptText === void 0 ? 'Type to search...' : _props$promptText,\n      _props$searchText = props.searchText,\n      searchText = _props$searchText === void 0 ? 'Searching...' : _props$searchText,\n      _props$useCache = props.useCache,\n      useCache = _props$useCache === void 0 ? true : _props$useCache,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var cacheRef = useRef({});\n  var handleSearchDebouncedRef = useRef(null);\n  var queryRef = useRef(props.defaultInputValue || '');\n  var forceUpdate = useForceUpdate();\n  var prevProps = usePrevious(props);\n  var handleSearch = useCallback(function (query) {\n    queryRef.current = query;\n\n    if (!query || minLength && query.length < minLength) {\n      return;\n    } // Use cached results, if applicable.\n\n\n    if (useCache && cacheRef.current[query]) {\n      // Re-render the component with the cached results.\n      forceUpdate();\n      return;\n    } // Perform the search.\n\n\n    onSearch(query);\n  }, [forceUpdate, minLength, onSearch, useCache]); // Set the debounced search function.\n\n  useEffect(function () {\n    handleSearchDebouncedRef.current = debounce(handleSearch, delay);\n    return function () {\n      handleSearchDebouncedRef.current && handleSearchDebouncedRef.current.cancel();\n    };\n  }, [delay, handleSearch]);\n  useEffect(function () {\n    // Ensure that we've gone from a loading to a completed state. Otherwise\n    // an empty response could get cached if the component updates during the\n    // request (eg: if the parent re-renders for some reason).\n    if (!isLoading && prevProps && prevProps.isLoading && useCache) {\n      cacheRef.current[queryRef.current] = options;\n    }\n  });\n\n  var getEmptyLabel = function getEmptyLabel() {\n    if (!queryRef.current.length) {\n      return promptText;\n    }\n\n    if (isLoading) {\n      return searchText;\n    }\n\n    return emptyLabel;\n  };\n\n  var handleInputChange = useCallback(function (query, e) {\n    onInputChange && onInputChange(query, e);\n    handleSearchDebouncedRef.current && handleSearchDebouncedRef.current(query);\n  }, [onInputChange]);\n  var cachedQuery = cacheRef.current[queryRef.current];\n  return _objectSpread(_objectSpread({}, otherProps), {}, {\n    // Disable custom selections during a search if `allowNew` isn't a function.\n    allowNew: isFunction(allowNew) ? allowNew : allowNew && !isLoading,\n    emptyLabel: getEmptyLabel(),\n    isLoading: isLoading,\n    minLength: minLength,\n    onInputChange: handleInputChange,\n    options: useCache && cachedQuery ? cachedQuery : options\n  });\n}\nexport function withAsync(Component) {\n  var AsyncTypeahead = /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, useAsync(props), {\n      ref: ref\n    }));\n  });\n  AsyncTypeahead.displayName = \"withAsync(\".concat(getDisplayName(Component), \")\"); // @ts-ignore\n\n  AsyncTypeahead.propTypes = propTypes;\n  return AsyncTypeahead;\n}"]},"metadata":{},"sourceType":"module"}