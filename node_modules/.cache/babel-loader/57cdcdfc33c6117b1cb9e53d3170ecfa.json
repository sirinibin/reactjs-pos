{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/customer_deposit/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport { Spinner } from \"react-bootstrap\";\nimport CustomerDepositView from \"./view.js\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport StoreCreate from \"../store/create.js\";\nimport Resizer from \"react-image-file-resizer\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport CustomerView from \"./../customer/view.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerDepositCreate = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  //Store Auto Suggestion\n  let [selectedStores, setSelectedStores] = useState([]);\n  const [isStoresLoading, setIsStoresLoading] = useState(false);\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      formData = {\n        images_content: []\n      };\n      setFormData({\n        formData\n      });\n\n      if (id) {\n        getCustomerDeposit(id);\n      }\n\n      SetShow(true);\n    }\n\n  }));\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function-customerdeposit.\"); // event.preventDefault();\n\n        var form = event.target.form;\n\n        if (form && event.target) {\n          var index = Array.prototype.indexOf.call(form, event.target);\n\n          if (form && form.elements[index + 1]) {\n            if (event.target.getAttribute(\"class\").includes(\"description\")) {\n              form.elements[index].focus();\n              form.elements[index].value += '\\r\\n';\n            } else {\n              form.elements[index + 1].focus();\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  function resizeFIle(file, w, h, cb) {\n    Resizer.imageFileResizer(file, w, h, \"JPEG\", 100, 0, uri => {\n      cb(uri);\n    }, \"base64\");\n  }\n\n  let [selectedImage, setSelectedImage] = useState(\"\");\n  let [storeOptions, setStoreOptions] = useState([]);\n  let [selectedCategories, setSelectedCategories] = useState([]);\n  let [categoryOptions, setCategoryOptions] = useState([]);\n  let [errors, setErrors] = useState({});\n  const [isProcessing, setProcessing] = useState(false);\n  const cookies = new Cookies(); //fields\n\n  let [formData, setFormData] = useState({\n    images_content: []\n  });\n  const [show, SetShow] = useState(false);\n\n  function handleClose() {\n    SetShow(false);\n  }\n\n  function getCustomerDeposit(id) {\n    console.log(\"inside get CustomerDeposit\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/customer-deposit/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      formData = data.result;\n      let selectedCustomers = [{\n        id: formData.customer_id,\n        name: formData.customer_name,\n        search_label: formData.customer_name\n      }];\n      setSelectedCustomers([...selectedCustomers]);\n      let selectedStores = [{\n        id: formData.store_id,\n        name: formData.store_name\n      }];\n      setSelectedStores([...selectedStores]);\n      formData.images_content = [];\n      setFormData({ ...formData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n\n  async function suggestStores(searchTerm) {\n    console.log(\"Inside handle suggest Stores\");\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    let result = await fetch(\"/v1/store?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setStoreOptions(data.result);\n  }\n\n  useEffect(() => {\n    let at = cookies.get(\"access_token\");\n\n    if (!at) {\n      window.location = \"/\";\n    }\n  });\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  } //Customer Auto Suggestion\n\n\n  const [customerOptions, setCustomerOptions] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [isCustomersLoading, setIsCustomersLoading] = useState(false);\n\n  async function suggestCustomers(searchTerm) {\n    console.log(\"Inside handle suggestCustomers\");\n    setCustomerOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n    setIsCustomersLoading(true);\n    let result = await fetch(\"/v1/customer?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setCustomerOptions(data.result);\n    setIsCustomersLoading(false);\n  }\n\n  function handleCreate(event) {\n    event.preventDefault();\n    console.log(\"Inside handle Create\");\n    formData.category_id = [];\n\n    for (var i = 0; i < selectedCategories.length; i++) {\n      formData.category_id.push(selectedCategories[i].id);\n    }\n\n    console.log(\"category_id:\", formData.category_id);\n\n    if (cookies.get(\"store_id\")) {\n      formData.store_id = cookies.get(\"store_id\");\n    }\n\n    let endPoint = \"/v1/customer-deposit\";\n    let method = \"POST\";\n\n    if (formData.id) {\n      endPoint = \"/v1/customer-deposit/\" + formData.id;\n      method = \"PUT\";\n    }\n\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(\"formData:\", formData);\n    setProcessing(true);\n    fetch(endPoint, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.errors; //const error = data.errors\n\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      setProcessing(false);\n      console.log(\"Response:\");\n      console.log(data);\n      props.showToastMessage(\"CustomerDeposit Created Successfully!\", \"success\");\n\n      if (props.refreshList) {\n        props.refreshList();\n      }\n\n      handleClose();\n      props.openDetailsView(data.result.id);\n    }).catch(error => {\n      setProcessing(false);\n      console.log(\"Inside catch\");\n      console.log(error);\n      setErrors({ ...error\n      });\n      console.error(\"There was an error!\", error);\n      props.showToastMessage(\"Error Creating CustomerDeposit!\", \"danger\");\n    });\n  }\n\n  function getTargetDimension(originaleWidth, originalHeight, targetWidth, targetHeight) {\n    let ratio = parseFloat(originaleWidth / originalHeight);\n    targetWidth = parseInt(targetHeight * ratio);\n    targetHeight = parseInt(targetWidth * ratio);\n    return {\n      targetWidth: targetWidth,\n      targetHeight: targetHeight\n    };\n  }\n  /*\n  const DetailsViewRef = useRef();\n  function openDetailsView(id) {\n      console.log(\"id:\", id);\n      DetailsViewRef.current.open(id);\n  }\n  */\n\n\n  const StoreCreateFormRef = useRef();\n\n  function openStoreCreateForm() {\n    StoreCreateFormRef.current.open();\n  }\n\n  const CustomerDepositCategoryDetailsViewRef = useRef();\n\n  function openCustomerDepositCategoryDetailsView(id) {\n    CustomerDepositCategoryDetailsViewRef.current.open(id);\n  }\n\n  const CustomerCreateFormRef = useRef();\n\n  function openCustomerCreateForm() {\n    CustomerCreateFormRef.current.open();\n  }\n\n  const CustomerDetailsViewRef = useRef();\n\n  function openCustomerDetailsView(id) {\n    CustomerDetailsViewRef.current.open(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StoreCreate, {\n      ref: StoreCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerCreate, {\n      ref: CustomerCreateFormRef,\n      openDetailsView: openCustomerDetailsView,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerView, {\n      ref: CustomerDetailsViewRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      onHide: handleClose,\n      animation: false,\n      backdrop: \"static\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: formData.id ? \"Update Customer Deposit #\" + formData.description : \"Create New Customer Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [formData.id ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => {\n              handleClose();\n              props.openDetailsView(formData.id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-eye\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this), \" View Detail\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 40\n          }, this) : \"\", \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreate,\n            children: [isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 33\n            }, this) + \" Creating...\" : \"\", formData.id ? \"Update\" : \"Create\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 needs-validation\",\n          onSubmit: handleCreate,\n          children: [!cookies.get('store_name') ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Store*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"store_id\",\n                labelKey: \"name\",\n                isLoading: isStoresLoading,\n                isInvalid: errors.store_id ? true : false,\n                onChange: selectedItems => {\n                  errors.store_id = \"\";\n                  errors[\"product_id\"] = \"\";\n                  setErrors(errors);\n\n                  if (selectedItems.length === 0) {\n                    errors.store_id = \"Invalid Store selected\";\n                    setErrors(errors);\n                    setFormData({ ...formData\n                    });\n                    setSelectedStores([]);\n                    return;\n                  }\n\n                  formData.store_id = selectedItems[0].id;\n                  setFormData({ ...formData\n                  });\n                  console.log(\"formData.store_id:\", formData.store_id);\n                  selectedStores = selectedItems;\n                  setSelectedStores([...selectedItems]);\n                },\n                options: storeOptions,\n                placeholder: \"Select Store\",\n                selected: selectedStores,\n                highlightOnlyResult: true,\n                onInputChange: (searchTerm, e) => {\n                  suggestStores(searchTerm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                hide: true.toString(),\n                onClick: openStoreCreateForm,\n                className: \"btn btn-outline-secondary btn-primary btn-sm\",\n                type: \"button\",\n                id: \"button-addon1\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 185\n                }, this), \" New\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 37\n                }, this), errors.store_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 55\n          }, this) : \"\", !cookies.get('store_name') ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Store*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"store_id\",\n                labelKey: \"name\",\n                isLoading: isStoresLoading,\n                isInvalid: errors.store_id ? true : false,\n                onChange: selectedItems => {\n                  errors.store_id = \"\";\n                  errors[\"product_id\"] = \"\";\n                  setErrors(errors);\n\n                  if (selectedItems.length === 0) {\n                    errors.store_id = \"Invalid Store selected\";\n                    setErrors(errors);\n                    setFormData({ ...formData\n                    });\n                    setSelectedStores([]);\n                    return;\n                  }\n\n                  formData.store_id = selectedItems[0].id;\n                  setFormData({ ...formData\n                  });\n                  console.log(\"formData.store_id:\", formData.store_id);\n                  selectedStores = selectedItems;\n                  setSelectedStores([...selectedItems]);\n                },\n                options: storeOptions,\n                placeholder: \"Select Store\",\n                selected: selectedStores,\n                highlightOnlyResult: true,\n                onInputChange: (searchTerm, e) => {\n                  suggestStores(searchTerm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                hide: true.toString(),\n                onClick: openStoreCreateForm,\n                className: \"btn btn-outline-secondary btn-primary btn-sm\",\n                type: \"button\",\n                id: \"button-addon1\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 185\n                }, this), \" New\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 37\n                }, this), errors.store_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 55\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Customer*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"customer_id\",\n                labelKey: \"search_label\",\n                isLoading: isCustomersLoading,\n                isInvalid: errors.customer_id ? true : false,\n                onChange: selectedItems => {\n                  errors.customer_id = \"\";\n                  setErrors(errors);\n\n                  if (selectedItems.length === 0) {\n                    errors.customer_id = \"Invalid Customer selected\";\n                    setErrors(errors);\n                    formData.customer_id = \"\";\n                    setFormData({ ...formData\n                    });\n                    setSelectedCustomers([]);\n                    return;\n                  }\n\n                  formData.customer_id = selectedItems[0].id;\n                  setFormData({ ...formData\n                  });\n                  setSelectedCustomers(selectedItems);\n                },\n                options: customerOptions,\n                placeholder: \"Select Customer\",\n                selected: selectedCustomers,\n                highlightOnlyResult: true,\n                onInputChange: (searchTerm, e) => {\n                  suggestCustomers(searchTerm);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                hide: true.toString(),\n                onClick: openCustomerCreateForm,\n                className: \"btn btn-outline-secondary btn-primary btn-sm\",\n                type: \"button\",\n                id: \"button-addon1\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-plus-lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 188\n                }, this), \" New\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 33\n              }, this), errors.customer_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 41\n                }, this), errors.customer_id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Amount*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: formData.amount ? formData.amount : \"\",\n                type: \"number\",\n                onChange: e => {\n                  errors[\"amount\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.amount = parseFloat(e.target.value);\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                id: \"amount\",\n                placeholder: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 33\n              }, this), errors.amount && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 41\n                }, this), errors.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 37\n              }, this), formData.amount && !errors.amount && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Description*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: formData.description ? formData.description : \"\",\n                type: \"string\",\n                onChange: e => {\n                  errors[\"description\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.description = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control description\",\n                id: \"description\",\n                placeholder: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 33\n              }, this), errors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 41\n                }, this), errors.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 37\n              }, this), formData.description && !errors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Date Time*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                id: \"date_str\",\n                selected: formData.date_str ? new Date(formData.date_str) : null,\n                value: formData.date_str ? format(new Date(formData.date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                className: \"form-control\",\n                dateFormat: \"MMMM d, yyyy h:mm aa\",\n                showTimeSelect: true,\n                timeIntervals: \"1\",\n                onChange: value => {\n                  console.log(\"Value\", value);\n                  formData.date_str = value; // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n\n                  setFormData({ ...formData\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 33\n              }, this), errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 41\n                }, this), errors.date_str]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Payment method*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.payment_method,\n                onChange: e => {\n                  console.log(\"Inside onchange payment method\");\n\n                  if (!e.target.value) {\n                    formData.payment_method = \"\";\n                    errors[\"status\"] = \"Invalid Payment Method\";\n                    setErrors({ ...errors\n                    });\n                    return;\n                  }\n\n                  errors[\"payment_method\"] = \"\";\n                  setErrors({ ...errors\n                  });\n                  formData.payment_method = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  console.log(formData);\n                },\n                className: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  SELECTED: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cash\",\n                  children: \"Cash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"bank_account\",\n                  children: \"Bank Account / Debit / Credit Card\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 33\n              }, this), errors.payment_method && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 41\n                }, this), errors.payment_method]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Image(Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: selectedImage ? selectedImage : \"\",\n                type: \"file\",\n                onChange: e => {\n                  errors[\"image\"] = \"\";\n                  setErrors({ ...errors\n                  });\n\n                  if (!e.target.value) {\n                    errors[\"image\"] = \"Invalid Image File\";\n                    setErrors({ ...errors\n                    });\n                    return;\n                  }\n\n                  selectedImage = e.target.value;\n                  setSelectedImage(selectedImage);\n                  let file = document.querySelector('#image').files[0];\n                  let targetHeight = 400;\n                  let targetWidth = 400;\n                  let url = URL.createObjectURL(file);\n                  let img = new Image();\n\n                  img.onload = function () {\n                    let originaleWidth = img.width;\n                    let originalHeight = img.height;\n                    let targetDimensions = getTargetDimension(originaleWidth, originalHeight, targetWidth, targetHeight);\n                    targetWidth = targetDimensions.targetWidth;\n                    targetHeight = targetDimensions.targetHeight;\n                    resizeFIle(file, targetWidth, targetHeight, result => {\n                      formData.images_content = [];\n                      formData.images_content[0] = result;\n                      setFormData({ ...formData\n                      });\n                      console.log(\"formData.images_content[0]:\", formData.images_content[0]);\n                    });\n                  };\n\n                  img.src = url;\n                  /*\n                  resizeFIle(file, (result) => {\n                      if (!formData.images_content) {\n                          formData.images_content = [];\n                      }\n                      formData.images_content[0] = result;\n                      setFormData({ ...formData });\n                           console.log(\"formData.images_content[0]:\", formData.images_content[0]);\n                  });\n                  */\n                },\n                className: \"form-control\",\n                id: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 33\n              }, this), errors.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-x-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 41\n                }, this), errors.image]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 37\n              }, this), formData.image && !errors.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"green\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-check-lg\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 41\n                }, this), \"Looks good!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleCreate,\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"bcustomerdeposit\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 37\n              }, this) + \" Processing...\" : formData.id ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"XImZ8TEluLQ4+luD2BcsuNJ7+H8=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = CustomerDepositCreate;\nexport default CustomerDepositCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomerDepositCreate$forwardRef\");\n$RefreshReg$(_c2, \"CustomerDepositCreate\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/customer_deposit/create.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Modal","Button","Cookies","Spinner","CustomerDepositView","Typeahead","StoreCreate","Resizer","DatePicker","format","CustomerCreate","CustomerView","CustomerDepositCreate","props","ref","selectedStores","setSelectedStores","isStoresLoading","setIsStoresLoading","open","id","formData","images_content","setFormData","getCustomerDeposit","SetShow","listener","event","code","console","log","form","target","index","Array","prototype","indexOf","call","elements","getAttribute","includes","focus","value","preventDefault","document","addEventListener","removeEventListener","resizeFIle","file","w","h","cb","imageFileResizer","uri","selectedImage","setSelectedImage","storeOptions","setStoreOptions","selectedCategories","setSelectedCategories","categoryOptions","setCategoryOptions","errors","setErrors","isProcessing","setProcessing","cookies","show","handleClose","requestOptions","method","headers","get","fetch","then","response","isJson","data","json","ok","error","Promise","reject","result","selectedCustomers","customer_id","name","customer_name","search_label","setSelectedCustomers","store_id","store_name","catch","suggestStores","searchTerm","params","queryString","ObjectToSearchQueryParams","Authorization","Select","at","window","location","object","Object","keys","map","key","join","customerOptions","setCustomerOptions","isCustomersLoading","setIsCustomersLoading","suggestCustomers","handleCreate","category_id","i","length","push","endPoint","body","JSON","stringify","showToastMessage","refreshList","openDetailsView","getTargetDimension","originaleWidth","originalHeight","targetWidth","targetHeight","ratio","parseFloat","parseInt","StoreCreateFormRef","openStoreCreateForm","current","CustomerDepositCategoryDetailsViewRef","openCustomerDepositCategoryDetailsView","CustomerCreateFormRef","openCustomerCreateForm","CustomerDetailsViewRef","openCustomerDetailsView","description","selectedItems","e","toString","color","amount","date_str","Date","payment_method","querySelector","files","url","URL","createObjectURL","img","Image","onload","width","height","targetDimensions","src","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Cookies from \"universal-cookie\";\nimport { Spinner } from \"react-bootstrap\";\nimport CustomerDepositView from \"./view.js\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport StoreCreate from \"../store/create.js\";\nimport Resizer from \"react-image-file-resizer\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport CustomerView from \"./../customer/view.js\";\n\n\nconst CustomerDepositCreate = forwardRef((props, ref) => {\n\n    //Store Auto Suggestion\n    let [selectedStores, setSelectedStores] = useState([]);\n    const [isStoresLoading, setIsStoresLoading] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        open(id) {\n            formData = {\n                images_content: [],\n            };\n            setFormData({ formData });\n\n            if (id) {\n                getCustomerDeposit(id);\n            }\n\n            SetShow(true);\n        },\n\n    }));\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                console.log(\"Enter key was pressed. Run your function-customerdeposit.\");\n                // event.preventDefault();\n\n                var form = event.target.form;\n                if (form && event.target) {\n                    var index = Array.prototype.indexOf.call(form, event.target);\n                    if (form && form.elements[index + 1]) {\n                        if (event.target.getAttribute(\"class\").includes(\"description\")) {\n                            form.elements[index].focus();\n                            form.elements[index].value += '\\r\\n';\n                        } else {\n                            form.elements[index + 1].focus();\n                        }\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n\n    function resizeFIle(file, w, h, cb) {\n        Resizer.imageFileResizer(\n            file,\n            w,\n            h,\n            \"JPEG\",\n            100,\n            0,\n            (uri) => {\n                cb(uri);\n            },\n            \"base64\"\n        );\n    }\n\n    let [selectedImage, setSelectedImage] = useState(\"\");\n\n\n    let [storeOptions, setStoreOptions] = useState([]);\n\n    let [selectedCategories, setSelectedCategories] = useState([]);\n    let [categoryOptions, setCategoryOptions] = useState([]);\n\n    let [errors, setErrors] = useState({});\n    const [isProcessing, setProcessing] = useState(false);\n    const cookies = new Cookies();\n\n    //fields\n    let [formData, setFormData] = useState({\n        images_content: [],\n    });\n\n    const [show, SetShow] = useState(false);\n\n    function handleClose() {\n        SetShow(false);\n    }\n\n\n    function getCustomerDeposit(id) {\n        console.log(\"inside get CustomerDeposit\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/customer-deposit/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                formData = data.result;\n\n                let selectedCustomers = [\n                    {\n                        id: formData.customer_id,\n                        name: formData.customer_name,\n                        search_label: formData.customer_name,\n                    }\n                ];\n\n                setSelectedCustomers([...selectedCustomers]);\n\n                let selectedStores = [\n                    {\n                        id: formData.store_id,\n                        name: formData.store_name,\n                    }\n                ];\n                setSelectedStores([...selectedStores]);\n\n                formData.images_content = [];\n                setFormData({ ...formData });\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n    async function suggestStores(searchTerm) {\n        console.log(\"Inside handle suggest Stores\");\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        let result = await fetch(\n            \"/v1/store?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setStoreOptions(data.result);\n    }\n\n    useEffect(() => {\n        let at = cookies.get(\"access_token\");\n        if (!at) {\n            window.location = \"/\";\n        }\n    });\n\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n    //Customer Auto Suggestion\n    const [customerOptions, setCustomerOptions] = useState([]);\n    const [selectedCustomers, setSelectedCustomers] = useState([]);\n    const [isCustomersLoading, setIsCustomersLoading] = useState(false);\n\n    async function suggestCustomers(searchTerm) {\n        console.log(\"Inside handle suggestCustomers\");\n        setCustomerOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n        setIsCustomersLoading(true);\n        let result = await fetch(\n            \"/v1/customer?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setCustomerOptions(data.result);\n        setIsCustomersLoading(false);\n    }\n\n    function handleCreate(event) {\n        event.preventDefault();\n        console.log(\"Inside handle Create\");\n\n        formData.category_id = [];\n        for (var i = 0; i < selectedCategories.length; i++) {\n            formData.category_id.push(selectedCategories[i].id);\n        }\n\n\n        console.log(\"category_id:\", formData.category_id);\n\n        if (cookies.get(\"store_id\")) {\n            formData.store_id = cookies.get(\"store_id\");\n        }\n\n\n        let endPoint = \"/v1/customer-deposit\";\n        let method = \"POST\";\n        if (formData.id) {\n            endPoint = \"/v1/customer-deposit/\" + formData.id;\n            method = \"PUT\";\n        }\n\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n            body: JSON.stringify(formData),\n        };\n\n        console.log(\"formData:\", formData);\n\n        setProcessing(true);\n        fetch(endPoint, requestOptions)\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = data && data.errors;\n                    //const error = data.errors\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n                setProcessing(false);\n\n                console.log(\"Response:\");\n                console.log(data);\n                props.showToastMessage(\"CustomerDeposit Created Successfully!\", \"success\");\n                if (props.refreshList) {\n                    props.refreshList();\n                }\n\n                handleClose();\n                props.openDetailsView(data.result.id);\n            })\n            .catch((error) => {\n                setProcessing(false);\n                console.log(\"Inside catch\");\n                console.log(error);\n                setErrors({ ...error });\n                console.error(\"There was an error!\", error);\n                props.showToastMessage(\"Error Creating CustomerDeposit!\", \"danger\");\n            });\n    }\n\n\n\n\n\n\n\n\n    function getTargetDimension(originaleWidth, originalHeight, targetWidth, targetHeight) {\n\n        let ratio = parseFloat(originaleWidth / originalHeight);\n\n        targetWidth = parseInt(targetHeight * ratio);\n        targetHeight = parseInt(targetWidth * ratio);\n\n        return { targetWidth: targetWidth, targetHeight: targetHeight };\n    }\n\n    /*\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        console.log(\"id:\", id);\n        DetailsViewRef.current.open(id);\n    }\n    */\n\n    const StoreCreateFormRef = useRef();\n    function openStoreCreateForm() {\n        StoreCreateFormRef.current.open();\n    }\n\n\n    const CustomerDepositCategoryDetailsViewRef = useRef();\n    function openCustomerDepositCategoryDetailsView(id) {\n        CustomerDepositCategoryDetailsViewRef.current.open(id);\n    }\n\n    const CustomerCreateFormRef = useRef();\n    function openCustomerCreateForm() {\n        CustomerCreateFormRef.current.open();\n    }\n\n    const CustomerDetailsViewRef = useRef();\n    function openCustomerDetailsView(id) {\n        CustomerDetailsViewRef.current.open(id);\n    }\n\n    return (\n        <>\n            <StoreCreate ref={StoreCreateFormRef} showToastMessage={props.showToastMessage} />\n            <CustomerCreate ref={CustomerCreateFormRef} openDetailsView={openCustomerDetailsView} showToastMessage={props.showToastMessage} />\n            <CustomerView ref={CustomerDetailsViewRef} showToastMessage={props.showToastMessage} />\n\n\n            <Modal show={show} size=\"xl\" onHide={handleClose} animation={false} backdrop=\"static\" scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>\n                        {formData.id ? \"Update Customer Deposit #\" + formData.description : \"Create New Customer Deposit\"}\n                    </Modal.Title>\n\n\n                    <div className=\"col align-self-end text-end\">\n                        {formData.id ? <Button variant=\"primary\" onClick={() => {\n                            handleClose();\n                            props.openDetailsView(formData.id);\n                        }}>\n                            <i className=\"bi bi-eye\"></i> View Detail\n                        </Button> : \"\"}\n                        &nbsp;&nbsp;\n                        <Button variant=\"primary\" onClick={handleCreate} >\n                            {isProcessing ?\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden={true}\n                                /> + \" Creating...\"\n\n                                : \"\"\n                            }\n                            {formData.id ? \"Update\" : \"Create\"}\n\n                        </Button>\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"row g-3 needs-validation\" onSubmit={handleCreate}>\n                        {!cookies.get('store_name') ? <div className=\"col-md-6\">\n                            <label className=\"form-label\">Store*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"store_id\"\n                                    labelKey=\"name\"\n                                    isLoading={isStoresLoading}\n                                    isInvalid={errors.store_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.store_id = \"\";\n                                        errors[\"product_id\"] = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.store_id = \"Invalid Store selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedStores([]);\n                                            return;\n                                        }\n                                        formData.store_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        console.log(\"formData.store_id:\", formData.store_id);\n                                        selectedStores = selectedItems;\n                                        setSelectedStores([...selectedItems]);\n                                    }\n                                    }\n                                    options={storeOptions}\n                                    placeholder=\"Select Store\"\n                                    selected={selectedStores}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestStores(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openStoreCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi x-lg\"> </i>\n                                    {errors.store_id}\n                                </div>\n                            </div>\n                        </div> : \"\"}\n\n                        {!cookies.get('store_name') ? <div className=\"col-md-6\">\n                            <label className=\"form-label\">Store*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"store_id\"\n                                    labelKey=\"name\"\n                                    isLoading={isStoresLoading}\n                                    isInvalid={errors.store_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.store_id = \"\";\n                                        errors[\"product_id\"] = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.store_id = \"Invalid Store selected\";\n                                            setErrors(errors);\n                                            setFormData({ ...formData });\n                                            setSelectedStores([]);\n                                            return;\n                                        }\n                                        formData.store_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        console.log(\"formData.store_id:\", formData.store_id);\n                                        selectedStores = selectedItems;\n                                        setSelectedStores([...selectedItems]);\n                                    }\n                                    }\n                                    options={storeOptions}\n                                    placeholder=\"Select Store\"\n                                    selected={selectedStores}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestStores(searchTerm);\n                                    }}\n                                />\n\n                                <Button hide={true.toString()} onClick={openStoreCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi x-lg\"> </i>\n                                    {errors.store_id}\n                                </div>\n                            </div>\n                        </div> : \"\"}\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Customer*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <Typeahead\n                                    id=\"customer_id\"\n                                    labelKey=\"search_label\"\n                                    isLoading={isCustomersLoading}\n                                    isInvalid={errors.customer_id ? true : false}\n                                    onChange={(selectedItems) => {\n                                        errors.customer_id = \"\";\n                                        setErrors(errors);\n                                        if (selectedItems.length === 0) {\n                                            errors.customer_id = \"Invalid Customer selected\";\n                                            setErrors(errors);\n                                            formData.customer_id = \"\";\n                                            setFormData({ ...formData });\n                                            setSelectedCustomers([]);\n                                            return;\n                                        }\n                                        formData.customer_id = selectedItems[0].id;\n                                        setFormData({ ...formData });\n                                        setSelectedCustomers(selectedItems);\n                                    }}\n                                    options={customerOptions}\n                                    placeholder=\"Select Customer\"\n                                    selected={selectedCustomers}\n                                    highlightOnlyResult={true}\n                                    onInputChange={(searchTerm, e) => {\n                                        suggestCustomers(searchTerm);\n                                    }}\n                                />\n                                <Button hide={true.toString()} onClick={openCustomerCreateForm} className=\"btn btn-outline-secondary btn-primary btn-sm\" type=\"button\" id=\"button-addon1\"> <i className=\"bi bi-plus-lg\"></i> New</Button>\n                                {errors.customer_id && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.customer_id}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Amount*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={formData.amount ? formData.amount : \"\"}\n                                    type='number'\n                                    onChange={(e) => {\n                                        errors[\"amount\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.amount = parseFloat(e.target.value);\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"amount\"\n                                    placeholder=\"Amount\"\n                                />\n                                {errors.amount && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.amount}\n                                    </div>\n                                )}\n                                {formData.amount && !errors.amount && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Description*</label>\n                            <div className=\"input-group mb-3\">\n                                <textarea\n                                    value={formData.description ? formData.description : \"\"}\n                                    type='string'\n                                    onChange={(e) => {\n                                        errors[\"description\"] = \"\";\n                                        setErrors({ ...errors });\n                                        formData.description = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control description\"\n                                    id=\"description\"\n                                    placeholder=\"Description\"\n                                />\n                                {errors.description && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.description}\n                                    </div>\n                                )}\n                                {formData.description && !errors.description && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Date Time*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <DatePicker\n                                    id=\"date_str\"\n                                    selected={formData.date_str ? new Date(formData.date_str) : null}\n                                    value={formData.date_str ? format(\n                                        new Date(formData.date_str),\n                                        \"MMMM d, yyyy h:mm aa\"\n                                    ) : null}\n                                    className=\"form-control\"\n                                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                    showTimeSelect\n                                    timeIntervals=\"1\"\n                                    onChange={(value) => {\n                                        console.log(\"Value\", value);\n                                        formData.date_str = value;\n                                        // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n                                        setFormData({ ...formData });\n                                    }}\n                                />\n\n                                {errors.date_str && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.date_str}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Payment method*</label>\n\n                            <div className=\"input-group mb-3\">\n                                <select\n                                    value={formData.payment_method}\n                                    onChange={(e) => {\n                                        console.log(\"Inside onchange payment method\");\n                                        if (!e.target.value) {\n                                            formData.payment_method = \"\";\n                                            errors[\"status\"] = \"Invalid Payment Method\";\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"payment_method\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.payment_method = e.target.value;\n                                        setFormData({ ...formData });\n                                        console.log(formData);\n                                    }}\n                                    className=\"form-control\"\n                                >\n                                    <option value=\"\" SELECTED></option>\n                                    <option value=\"cash\">Cash</option>\n                                    <option value=\"bank_account\">Bank Account / Debit / Credit Card</option>\n                                </select>\n                                {errors.payment_method && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.payment_method}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"col-md-6\">\n                            <label className=\"form-label\">Image(Optional)</label>\n\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    value={selectedImage ? selectedImage : \"\"}\n                                    type='file'\n                                    onChange={(e) => {\n                                        errors[\"image\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        if (!e.target.value) {\n                                            errors[\"image\"] = \"Invalid Image File\";\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        selectedImage = e.target.value;\n                                        setSelectedImage(selectedImage);\n\n                                        let file = document.querySelector('#image').files[0];\n\n\n                                        let targetHeight = 400;\n                                        let targetWidth = 400;\n\n\n                                        let url = URL.createObjectURL(file);\n                                        let img = new Image();\n\n                                        img.onload = function () {\n                                            let originaleWidth = img.width;\n                                            let originalHeight = img.height;\n\n                                            let targetDimensions = getTargetDimension(originaleWidth, originalHeight, targetWidth, targetHeight);\n                                            targetWidth = targetDimensions.targetWidth;\n                                            targetHeight = targetDimensions.targetHeight;\n\n                                            resizeFIle(file, targetWidth, targetHeight, (result) => {\n                                                formData.images_content = [];\n                                                formData.images_content[0] = result;\n                                                setFormData({ ...formData });\n\n                                                console.log(\"formData.images_content[0]:\", formData.images_content[0]);\n                                            });\n                                        };\n                                        img.src = url;\n\n\n                                        /*\n                                        resizeFIle(file, (result) => {\n                                            if (!formData.images_content) {\n                                                formData.images_content = [];\n                                            }\n                                            formData.images_content[0] = result;\n                                            setFormData({ ...formData });\n    \n                                            console.log(\"formData.images_content[0]:\", formData.images_content[0]);\n                                        });\n                                        */\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"image\"\n                                />\n                                {errors.image && (\n                                    <div style={{ color: \"red\" }}>\n                                        <i className=\"bi bi-x-lg\"> </i>\n                                        {errors.image}\n                                    </div>\n                                )}\n                                {formData.image && !errors.image && (\n                                    <div style={{ color: \"green\" }}>\n                                        <i className=\"bi bi-check-lg\"> </i>\n                                        Looks good!\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n\n\n\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleCreate} >\n                                {isProcessing ?\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"bcustomerdeposit\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden={true}\n                                    /> + \" Processing...\"\n\n                                    : formData.id ? \"Update\" : \"Create\"\n                                }\n                            </Button>\n                        </Modal.Footer>\n                    </form>\n                </Modal.Body>\n\n            </Modal>\n\n\n        </>\n    );\n});\n\nexport default CustomerDepositCreate;\n"]},"metadata":{},"sourceType":"module"}