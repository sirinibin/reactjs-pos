{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/analytics/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport AllSales from \"./sales/allSales\";\nimport HourlySales from \"./sales/hourlySales\";\nimport DailySales from \"./sales/dailySales\";\nimport MonthlySales from \"./sales/monthlySales\";\nimport YearlySales from \"./sales/yearlySales\";\nimport Calendar from \"./sales/calendar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Analytics = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const cookies = new Cookies();\n  let [allOrders, setAllOrders] = useState([]);\n  let [allExpenses, setAllExpenses] = useState([]);\n  let [allPurchases, setAllPurchases] = useState([]);\n  let [allSalesReturns, setAllSalesReturns] = useState([]);\n  let [allPurchaseReturns, setAllPurchaseReturns] = useState([]);\n  const [searchParams, setSearchParams] = useState({});\n  let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortOrder, setSortOrder] = useState(\"-\");\n  const [isListLoading, setIsListLoading] = useState(false);\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  }\n\n  async function getAllRecords(model, fields) {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = fields;\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    console.log(\"Timezone:\", parseFloat(diff / 60));\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    let size = 1000;\n    let records = [];\n    var pageNo = 1;\n\n    for (; true;) {\n      fettingAllRecordsInProgress = true;\n      setFettingAllRecordsInProgress(true);\n      let res = await fetch(\"/v1/\" + model + \"?\" + Select + queryParams + \"&sort=\" + sortOrder + sortField + \"&page=\" + pageNo + \"&limit=\" + size, requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          const error = data && data.errors;\n          return Promise.reject(error);\n        }\n\n        setIsListLoading(false);\n\n        if (!data.result || data.result.length === 0) {\n          return [];\n        }\n\n        return data.result;\n      }).catch(error => {\n        console.log(error);\n        return []; //break;\n      });\n\n      if (res.length === 0) {\n        break;\n      }\n\n      records = records.concat(res);\n      pageNo++;\n    }\n\n    fettingAllRecordsInProgress = false;\n    setFettingAllRecordsInProgress(false);\n    return records;\n  }\n\n  useEffect(async () => {\n    let fields = \"select=id,code,date,total,net_total,payment_status,net_profit,loss,shipping_handling_fees,discount_percent,discount,products,customer_name,created_at,vat_price,customer_id,customer.id,customer.vat_no\";\n    let orders = await getAllRecords(\"order\", fields);\n    fields = \"select=id,code,date,amount,description,category_name,created_by_name,created_at\";\n    let expenses = await getAllRecords(\"expense\", fields);\n    fields = \"select=id,code,date,net_total,discount,vat_price,total,store_id,created_by_name,vendor_name,vendor_invoice_no,status,created_at,updated_at,net_retail_profit,net_wholesale_profit\";\n    let purchases = await getAllRecords(\"purchase\", fields);\n    fields = \"select=id,code,date,net_total,created_by_name,customer_name,status,created_at,net_profit,loss,order_code\";\n    let salesReturns = await getAllRecords(\"sales-return\", fields);\n    fields = \"select=id,code,purchase_code,purchase_id,date,net_total,created_by_name,vendor_name,vendor_invoice_no,status,created_at\";\n    let purchaseReturns = await getAllRecords(\"purchase-return\", fields);\n    allOrders = orders;\n    setAllOrders(orders); // console.log(\"allOrders:\", allOrders);\n\n    allExpenses = expenses;\n    setAllExpenses(expenses); // console.log(\"allExpenses:\", allExpenses);\n\n    allPurchases = purchases;\n    setAllPurchases(purchases); // console.log(\"allPurchases:\", allPurchases);\n\n    allSalesReturns = salesReturns;\n    setAllSalesReturns(salesReturns);\n    console.log(\"allSalesReturns:\", allSalesReturns);\n    allPurchaseReturns = purchaseReturns;\n    setAllPurchaseReturns(purchaseReturns);\n    console.log(\"allPurchaseReturns:\", allPurchaseReturns);\n    initAllGraph();\n    initHourlyGraph();\n    initDailyGraph();\n    initMonthlyGraph();\n    initYearlyGraph(); //initCalendarGraph();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const AllGraphRef = useRef();\n\n  async function initAllGraph() {\n    if (AllGraphRef.current) {\n      AllGraphRef.current.init();\n    }\n  }\n\n  const HourlyGraphRef = useRef();\n\n  async function initHourlyGraph() {\n    if (HourlyGraphRef.current) {\n      HourlyGraphRef.current.init();\n    }\n  }\n\n  const DailyGraphRef = useRef();\n\n  async function initDailyGraph() {\n    if (DailyGraphRef.current) {\n      DailyGraphRef.current.init();\n    }\n  }\n\n  const MonthlyGraphRef = useRef();\n\n  async function initMonthlyGraph() {\n    if (MonthlyGraphRef.current) {\n      MonthlyGraphRef.current.init();\n    }\n  }\n\n  const YearlyGraphRef = useRef();\n\n  async function initYearlyGraph() {\n    if (YearlyGraphRef.current) {\n      YearlyGraphRef.current.init();\n    }\n  }\n\n  const CalendarRef = useRef();\n\n  async function initCalendarGraph() {\n    if (CalendarRef.current) {\n      CalendarRef.current.init();\n    }\n  }\n\n  let [columns, setColumns] = useState({\n    all: {\n      sales: true,\n      salesProfit: false,\n      paidSales: false,\n      unpaidSales: false,\n      expense: false,\n      purchase: false,\n      salesReturn: false,\n      salesReturnProfit: false,\n      salesReturnLoss: false,\n      purchaseReturn: false,\n      loss: false\n    },\n    hourly: {\n      sales: true,\n      salesProfit: false,\n      paidSales: false,\n      unpaidSales: false,\n      expense: false,\n      purchase: false,\n      salesReturn: false,\n      salesReturnProfit: false,\n      salesReturnLoss: false,\n      purchaseReturn: false,\n      loss: false\n    },\n    daily: {\n      sales: true,\n      salesProfit: false,\n      paidSales: false,\n      unpaidSales: false,\n      expense: false,\n      purchase: false,\n      salesReturn: false,\n      salesReturnProfit: false,\n      salesReturnLoss: false,\n      purchaseReturn: false,\n      loss: false\n    },\n    monthly: {\n      sales: true,\n      salesProfit: false,\n      paidSales: false,\n      unpaidSales: false,\n      expense: false,\n      purchase: false,\n      salesReturn: false,\n      salesReturnProfit: false,\n      salesReturnLoss: false,\n      purchaseReturn: false,\n      loss: false\n    },\n    yearly: {\n      sales: true,\n      salesProfit: false,\n      paidSales: false,\n      unpaidSales: false,\n      expense: false,\n      purchase: false,\n      salesReturn: false,\n      salesReturnProfit: false,\n      salesReturnLoss: false,\n      purchaseReturn: false,\n      loss: false\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.sales,\n        onChange: e => {\n          columns.all.sales = !columns.all.sales;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), \"Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.salesProfit,\n        onChange: e => {\n          columns.all.salesProfit = !columns.all.salesProfit;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), \"Sales Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.paidSales,\n        onChange: e => {\n          columns.all.paidSales = !columns.all.paidSales;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 20\n      }, this), \"Paid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.unpaidSales,\n        onChange: e => {\n          columns.all.unpaidSales = !columns.all.unpaidSales;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }, this), \"UnPaid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.expense,\n        onChange: e => {\n          columns.all.expense = !columns.all.expense;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), \"Expense vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.purchase,\n        onChange: e => {\n          columns.all.purchase = !columns.all.purchase;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), \"Purchase vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.salesReturn,\n        onChange: e => {\n          columns.all.salesReturn = !columns.all.salesReturn;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), \"Sales Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.salesReturnProfit,\n        onChange: e => {\n          columns.all.salesReturnProfit = !columns.all.salesReturnProfit;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }, this), \"Sales Return Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.salesReturnLoss,\n        onChange: e => {\n          columns.all.salesReturnLoss = !columns.all.salesReturnLoss;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 20\n      }, this), \"Sales Return Loss vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.purchaseReturn,\n        onChange: e => {\n          columns.all.purchaseReturn = !columns.all.purchaseReturn;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), \"Purchase Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.all.loss,\n        onChange: e => {\n          columns.all.loss = !columns.all.loss;\n          setColumns({ ...columns\n          });\n          initAllGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), \"Sales Loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AllSales, {\n      ref: AllGraphRef,\n      allOrders: allOrders,\n      allExpenses: allExpenses,\n      allPurchases: allPurchases,\n      allSalesReturns: allSalesReturns,\n      allPurchaseReturns: allPurchaseReturns,\n      columns: columns.all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Hourly \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.sales,\n        onChange: e => {\n          columns.hourly.sales = !columns.hourly.sales;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), \"Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.salesProfit,\n        onChange: e => {\n          columns.hourly.salesProfit = !columns.hourly.salesProfit;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), \"Sales Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.paidSales,\n        onChange: e => {\n          columns.hourly.paidSales = !columns.hourly.paidSales;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }, this), \"Paid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.unpaidSales,\n        onChange: e => {\n          columns.hourly.unpaidSales = !columns.hourly.unpaidSales;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }, this), \"UnPaid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.expense,\n        onChange: e => {\n          columns.hourly.expense = !columns.hourly.expense;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), \"Expense vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.purchase,\n        onChange: e => {\n          columns.hourly.purchase = !columns.hourly.purchase;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), \"Purchase vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.salesReturn,\n        onChange: e => {\n          columns.hourly.salesReturn = !columns.hourly.salesReturn;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), \"Sales Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.salesReturnProfit,\n        onChange: e => {\n          columns.hourly.salesReturnProfit = !columns.hourly.salesReturnProfit;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), \"Sales Return Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.salesReturnLoss,\n        onChange: e => {\n          columns.hourly.salesReturnLoss = !columns.hourly.salesReturnLoss;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), \"Sales Return Loss vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.purchaseReturn,\n        onChange: e => {\n          columns.hourly.purchaseReturn = !columns.hourly.purchaseReturn;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), \"Purchase Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.hourly.loss,\n        onChange: e => {\n          columns.hourly.loss = !columns.hourly.loss;\n          setColumns({ ...columns\n          });\n          initHourlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), \"Sales Loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HourlySales, {\n      ref: HourlyGraphRef,\n      allOrders: allOrders,\n      allExpenses: allExpenses,\n      allPurchases: allPurchases,\n      allSalesReturns: allSalesReturns,\n      allPurchaseReturns: allPurchaseReturns,\n      columns: columns.hourly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Daily \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.sales,\n        onChange: e => {\n          columns.daily.sales = !columns.daily.sales;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }, this), \"Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.salesProfit,\n        onChange: e => {\n          columns.daily.salesProfit = !columns.daily.salesProfit;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), \"Sales Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.paidSales,\n        onChange: e => {\n          columns.daily.paidSales = !columns.daily.paidSales;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }, this), \"Paid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.unpaidSales,\n        onChange: e => {\n          columns.daily.unpaidSales = !columns.daily.unpaidSales;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 23\n      }, this), \"UnPaid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.expense,\n        onChange: e => {\n          columns.daily.expense = !columns.daily.expense;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), \"Expense vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.purchase,\n        onChange: e => {\n          columns.daily.purchase = !columns.daily.purchase;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this), \"Purchase vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.salesReturn,\n        onChange: e => {\n          columns.daily.salesReturn = !columns.daily.salesReturn;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this), \"Sales Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.salesReturnProfit,\n        onChange: e => {\n          columns.daily.salesReturnProfit = !columns.daily.salesReturnProfit;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 18\n      }, this), \"Sales Return Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.salesReturnLoss,\n        onChange: e => {\n          columns.daily.salesReturnLoss = !columns.daily.salesReturnLoss;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }, this), \"Sales Return Loss vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.purchaseReturn,\n        onChange: e => {\n          columns.daily.purchaseReturn = !columns.daily.purchaseReturn;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this), \"Purchase Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.daily.loss,\n        onChange: e => {\n          columns.daily.loss = !columns.daily.loss;\n          setColumns({ ...columns\n          });\n          initDailyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }, this), \"Sales Loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DailySales, {\n      ref: DailyGraphRef,\n      allOrders: allOrders,\n      allExpenses: allExpenses,\n      allPurchases: allPurchases,\n      allSalesReturns: allSalesReturns,\n      allPurchaseReturns: allPurchaseReturns,\n      columns: columns.daily\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Monthly \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.sales,\n        onChange: e => {\n          columns.monthly.sales = !columns.monthly.sales;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }, this), \"Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.salesProfit,\n        onChange: e => {\n          columns.monthly.salesProfit = !columns.monthly.salesProfit;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this), \"Sales Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.paidSales,\n        onChange: e => {\n          columns.monthly.paidSales = !columns.monthly.paidSales;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 19\n      }, this), \"Paid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.unpaidSales,\n        onChange: e => {\n          columns.monthly.unpaidSales = !columns.monthly.unpaidSales;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 23\n      }, this), \"UnPaid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.expense,\n        onChange: e => {\n          columns.monthly.expense = !columns.monthly.expense;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }, this), \"Expense vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.purchase,\n        onChange: e => {\n          columns.monthly.purchase = !columns.monthly.purchase;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 17\n      }, this), \"Purchase vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.salesReturn,\n        onChange: e => {\n          columns.monthly.salesReturn = !columns.monthly.salesReturn;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this), \"Sales Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.salesReturnProfit,\n        onChange: e => {\n          columns.monthly.salesReturnProfit = !columns.monthly.salesReturnProfit;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }, this), \"Sales Return Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.salesReturnLoss,\n        onChange: e => {\n          columns.monthly.salesReturnLoss = !columns.monthly.salesReturnLoss;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }, this), \"Sales Return Loss vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.purchaseReturn,\n        onChange: e => {\n          columns.monthly.purchaseReturn = !columns.monthly.purchaseReturn;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }, this), \"Purchase Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.monthly.loss,\n        onChange: e => {\n          columns.monthly.loss = !columns.monthly.loss;\n          setColumns({ ...columns\n          });\n          initMonthlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }, this), \"Sales Loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MonthlySales, {\n      ref: MonthlyGraphRef,\n      allOrders: allOrders,\n      allExpenses: allExpenses,\n      allPurchases: allPurchases,\n      allSalesReturns: allSalesReturns,\n      allPurchaseReturns: allPurchaseReturns,\n      columns: columns.monthly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Yearly \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.sales,\n        onChange: e => {\n          columns.yearly.sales = !columns.yearly.sales;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }, this), \"Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.salesProfit,\n        onChange: e => {\n          columns.yearly.salesProfit = !columns.yearly.salesProfit;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }, this), \"Sales Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.paidSales,\n        onChange: e => {\n          columns.yearly.paidSales = !columns.yearly.paidSales;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 19\n      }, this), \"Paid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.unpaidSales,\n        onChange: e => {\n          columns.yearly.unpaidSales = !columns.yearly.unpaidSales;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 23\n      }, this), \"UnPaid Sales vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.expense,\n        onChange: e => {\n          columns.yearly.expense = !columns.yearly.expense;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }, this), \"Expense vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.purchase,\n        onChange: e => {\n          columns.yearly.purchase = !columns.yearly.purchase;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }, this), \"Purchase vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.salesReturn,\n        onChange: e => {\n          columns.yearly.salesReturn = !columns.yearly.salesReturn;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }, this), \"Sales Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.salesReturnProfit,\n        onChange: e => {\n          columns.yearly.salesReturnProfit = !columns.yearly.salesReturnProfit;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 17\n      }, this), \"Sales Return Profit vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.salesReturnLoss,\n        onChange: e => {\n          columns.yearly.salesReturnLoss = !columns.yearly.salesReturnLoss;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }, this), \"Sales Return Loss vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.purchaseReturn,\n        onChange: e => {\n          columns.yearly.purchaseReturn = !columns.yearly.purchaseReturn;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 17\n      }, this), \"Purchase Return vs \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: columns.yearly.loss,\n        onChange: e => {\n          columns.yearly.loss = !columns.yearly.loss;\n          setColumns({ ...columns\n          });\n          initYearlyGraph();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 17\n      }, this), \"Sales Loss\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YearlySales, {\n      ref: YearlyGraphRef,\n      allOrders: allOrders,\n      allExpenses: allExpenses,\n      allPurchases: allPurchases,\n      allSalesReturns: allSalesReturns,\n      allPurchaseReturns: allPurchaseReturns,\n      columns: columns.yearly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"PHyEwiSLXxnv4TpQQs22/j3CA4w=\"));\n_c2 = Analytics;\nexport default Analytics;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Analytics$forwardRef\");\n$RefreshReg$(_c2, \"Analytics\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/analytics/index.js"],"names":["React","useState","useEffect","useRef","forwardRef","Cookies","AllSales","HourlySales","DailySales","MonthlySales","YearlySales","Calendar","Analytics","props","ref","cookies","allOrders","setAllOrders","allExpenses","setAllExpenses","allPurchases","setAllPurchases","allSalesReturns","setAllSalesReturns","allPurchaseReturns","setAllPurchaseReturns","searchParams","setSearchParams","fettingAllRecordsInProgress","setFettingAllRecordsInProgress","sortField","setSortField","sortOrder","setSortOrder","isListLoading","setIsListLoading","ObjectToSearchQueryParams","object","Object","keys","map","key","join","getAllRecords","model","fields","requestOptions","method","headers","Authorization","get","Select","store_id","d","Date","diff","getTimezoneOffset","console","log","parseFloat","queryParams","size","records","pageNo","res","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","length","catch","concat","orders","expenses","purchases","salesReturns","purchaseReturns","initAllGraph","initHourlyGraph","initDailyGraph","initMonthlyGraph","initYearlyGraph","AllGraphRef","current","init","HourlyGraphRef","DailyGraphRef","MonthlyGraphRef","YearlyGraphRef","CalendarRef","initCalendarGraph","columns","setColumns","all","sales","salesProfit","paidSales","unpaidSales","expense","purchase","salesReturn","salesReturnProfit","salesReturnLoss","purchaseReturn","loss","hourly","daily","monthly","yearly","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport AllSales from \"./sales/allSales\";\nimport HourlySales from \"./sales/hourlySales\";\nimport DailySales from \"./sales/dailySales\";\nimport MonthlySales from \"./sales/monthlySales\";\nimport YearlySales from \"./sales/yearlySales\";\nimport Calendar from \"./sales/calendar\";\n\n\n\nconst Analytics = forwardRef((props, ref) => {\n    const cookies = new Cookies();\n    let [allOrders, setAllOrders] = useState([]);\n    let [allExpenses, setAllExpenses] = useState([]);\n    let [allPurchases, setAllPurchases] = useState([]);\n    let [allSalesReturns, setAllSalesReturns] = useState([]);\n    let [allPurchaseReturns, setAllPurchaseReturns] = useState([]);\n\n\n    const [searchParams, setSearchParams] = useState({});\n    let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortOrder, setSortOrder] = useState(\"-\");\n    const [isListLoading, setIsListLoading] = useState(false);\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n\n    async function getAllRecords(model, fields) {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select = fields;\n\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        console.log(\"Timezone:\", parseFloat(diff / 60));\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        let size = 1000;\n\n        let records = [];\n        var pageNo = 1;\n\n        for (; true;) {\n            fettingAllRecordsInProgress = true;\n            setFettingAllRecordsInProgress(true);\n            let res = await fetch(\n                \"/v1/\" + model + \"?\" +\n                Select +\n                queryParams +\n                \"&sort=\" +\n                sortOrder +\n                sortField +\n                \"&page=\" +\n                pageNo +\n                \"&limit=\" +\n                size,\n                requestOptions\n            )\n                .then(async (response) => {\n                    const isJson = response.headers\n                        .get(\"content-type\")\n                        ?.includes(\"application/json\");\n                    const data = isJson && (await response.json());\n\n                    // check for error response\n                    if (!response.ok) {\n                        const error = data && data.errors;\n                        return Promise.reject(error);\n                    }\n\n                    setIsListLoading(false);\n                    if (!data.result || data.result.length === 0) {\n                        return [];\n                    }\n\n                    return data.result;\n                })\n                .catch((error) => {\n                    console.log(error);\n                    return [];\n                    //break;\n\n                });\n            if (res.length === 0) {\n                break;\n            }\n            records = records.concat(res);\n            pageNo++;\n        }\n        fettingAllRecordsInProgress = false;\n        setFettingAllRecordsInProgress(false);\n\n        return records;\n    }\n\n    useEffect(async () => {\n        let fields = \"select=id,code,date,total,net_total,payment_status,net_profit,loss,shipping_handling_fees,discount_percent,discount,products,customer_name,created_at,vat_price,customer_id,customer.id,customer.vat_no\";\n        let orders = await getAllRecords(\"order\", fields);\n        fields = \"select=id,code,date,amount,description,category_name,created_by_name,created_at\";\n        let expenses = await getAllRecords(\"expense\", fields);\n\n        fields = \"select=id,code,date,net_total,discount,vat_price,total,store_id,created_by_name,vendor_name,vendor_invoice_no,status,created_at,updated_at,net_retail_profit,net_wholesale_profit\";\n        let purchases = await getAllRecords(\"purchase\", fields);\n\n        fields = \"select=id,code,date,net_total,created_by_name,customer_name,status,created_at,net_profit,loss,order_code\";\n        let salesReturns = await getAllRecords(\"sales-return\", fields);\n\n        fields = \"select=id,code,purchase_code,purchase_id,date,net_total,created_by_name,vendor_name,vendor_invoice_no,status,created_at\";\n        let purchaseReturns = await getAllRecords(\"purchase-return\", fields);\n\n\n        allOrders = orders;\n        setAllOrders(orders);\n        // console.log(\"allOrders:\", allOrders);\n\n        allExpenses = expenses;\n        setAllExpenses(expenses);\n        // console.log(\"allExpenses:\", allExpenses);\n\n        allPurchases = purchases;\n        setAllPurchases(purchases);\n        // console.log(\"allPurchases:\", allPurchases);\n\n        allSalesReturns = salesReturns;\n        setAllSalesReturns(salesReturns);\n        console.log(\"allSalesReturns:\", allSalesReturns);\n\n        allPurchaseReturns = purchaseReturns;\n        setAllPurchaseReturns(purchaseReturns);\n        console.log(\"allPurchaseReturns:\", allPurchaseReturns);\n\n        initAllGraph();\n        initHourlyGraph();\n        initDailyGraph();\n        initMonthlyGraph();\n        initYearlyGraph();\n        //initCalendarGraph();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n\n\n    const AllGraphRef = useRef();\n    async function initAllGraph() {\n        if (AllGraphRef.current) {\n            AllGraphRef.current.init();\n        }\n    }\n\n    const HourlyGraphRef = useRef();\n    async function initHourlyGraph() {\n        if (HourlyGraphRef.current) {\n            HourlyGraphRef.current.init();\n        }\n\n    }\n\n    const DailyGraphRef = useRef();\n    async function initDailyGraph() {\n        if (DailyGraphRef.current) {\n            DailyGraphRef.current.init();\n        }\n\n    }\n\n    const MonthlyGraphRef = useRef();\n    async function initMonthlyGraph() {\n        if (MonthlyGraphRef.current) {\n            MonthlyGraphRef.current.init();\n        }\n    }\n\n    const YearlyGraphRef = useRef();\n    async function initYearlyGraph() {\n        if (YearlyGraphRef.current) {\n            YearlyGraphRef.current.init();\n        }\n    }\n\n    const CalendarRef = useRef();\n    async function initCalendarGraph() {\n        if (CalendarRef.current) {\n            CalendarRef.current.init();\n        }\n    }\n\n    let [columns, setColumns] = useState({\n        all: { sales: true, salesProfit: false,paidSales:false,unpaidSales:false, expense: false, purchase: false, salesReturn: false,salesReturnProfit: false,salesReturnLoss: false, purchaseReturn: false, loss: false },\n        hourly: { sales: true, salesProfit: false,paidSales:false,unpaidSales:false, expense: false, purchase: false, salesReturn: false,salesReturnProfit: false,salesReturnLoss: false, purchaseReturn: false, loss: false },\n        daily: { sales: true, salesProfit: false,paidSales:false,unpaidSales:false, expense: false, purchase: false, salesReturn: false,salesReturnProfit: false,salesReturnLoss: false, purchaseReturn: false, loss: false },\n        monthly: { sales: true, salesProfit: false,paidSales:false,unpaidSales:false, expense: false, purchase: false, salesReturn: false,salesReturnProfit: false,salesReturnLoss: false, purchaseReturn: false, loss: false },\n        yearly: { sales: true, salesProfit: false,paidSales:false,unpaidSales:false, expense: false, purchase: false, salesReturn: false, salesReturnProfit: false,salesReturnLoss: false,purchaseReturn: false, loss: false },\n    });\n\n\n    return (\n        <>\n            <h2>\n                <input type=\"checkbox\" checked={columns.all.sales} onChange={(e) => {\n                    columns.all.sales = !columns.all.sales;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.all.salesProfit} onChange={(e) => {\n                    columns.all.salesProfit = !columns.all.salesProfit;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Sales Profit vs &nbsp;\n                   <input type=\"checkbox\" checked={columns.all.paidSales} onChange={(e) => {\n                    columns.all.paidSales = !columns.all.paidSales;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Paid Sales vs &nbsp;\n                      <input type=\"checkbox\" checked={columns.all.unpaidSales} onChange={(e) => {\n                    columns.all.unpaidSales = !columns.all.unpaidSales;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />UnPaid Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.all.expense} onChange={(e) => {\n                    columns.all.expense = !columns.all.expense;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Expense vs &nbsp;\n                <input type=\"checkbox\" checked={columns.all.purchase} onChange={(e) => {\n                    columns.all.purchase = !columns.all.purchase;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Purchase vs &nbsp;\n                <input type=\"checkbox\" checked={columns.all.salesReturn} onChange={(e) => {\n                    columns.all.salesReturn = !columns.all.salesReturn;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Sales Return vs &nbsp;\n                  <input type=\"checkbox\" checked={columns.all.salesReturnProfit} onChange={(e) => {\n                    columns.all.salesReturnProfit = !columns.all.salesReturnProfit;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Sales Return Profit vs &nbsp;\n                   <input type=\"checkbox\" checked={columns.all.salesReturnLoss} onChange={(e) => {\n                    columns.all.salesReturnLoss = !columns.all.salesReturnLoss;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Sales Return Loss vs &nbsp;\n                <input type=\"checkbox\" checked={columns.all.purchaseReturn} onChange={(e) => {\n                    columns.all.purchaseReturn = !columns.all.purchaseReturn;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Purchase Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.all.loss} onChange={(e) => {\n                    columns.all.loss = !columns.all.loss;\n                    setColumns({ ...columns });\n                    initAllGraph();\n\n                }} />Sales Loss\n            </h2>\n            <AllSales ref={AllGraphRef}\n                allOrders={allOrders}\n                allExpenses={allExpenses}\n                allPurchases={allPurchases}\n                allSalesReturns={allSalesReturns}\n                allPurchaseReturns={allPurchaseReturns}\n                columns={columns.all}\n            />\n            <hr />\n            <h2>Hourly &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.sales} onChange={(e) => {\n                    columns.hourly.sales = !columns.hourly.sales;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.salesProfit} onChange={(e) => {\n                    columns.hourly.salesProfit = !columns.hourly.salesProfit;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Sales Profit vs &nbsp;\n                  <input type=\"checkbox\" checked={columns.hourly.paidSales} onChange={(e) => {\n                    columns.hourly.paidSales = !columns.hourly.paidSales;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Paid Sales vs &nbsp;\n                      <input type=\"checkbox\" checked={columns.hourly.unpaidSales} onChange={(e) => {\n                    columns.hourly.unpaidSales = !columns.hourly.unpaidSales;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />UnPaid Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.expense} onChange={(e) => {\n                    columns.hourly.expense = !columns.hourly.expense;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Expense vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.purchase} onChange={(e) => {\n                    columns.hourly.purchase = !columns.hourly.purchase;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Purchase vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.salesReturn} onChange={(e) => {\n                    columns.hourly.salesReturn = !columns.hourly.salesReturn;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Sales Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.salesReturnProfit} onChange={(e) => {\n                    columns.hourly.salesReturnProfit = !columns.hourly.salesReturnProfit;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Sales Return Profit vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.salesReturnLoss} onChange={(e) => {\n                    columns.hourly.salesReturnLoss = !columns.hourly.salesReturnLoss;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Sales Return Loss vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.purchaseReturn} onChange={(e) => {\n                    columns.hourly.purchaseReturn = !columns.hourly.purchaseReturn;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Purchase Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.hourly.loss} onChange={(e) => {\n                    columns.hourly.loss = !columns.hourly.loss;\n                    setColumns({ ...columns });\n                    initHourlyGraph();\n\n                }} />Sales Loss\n            </h2>\n            <HourlySales ref={HourlyGraphRef}\n                allOrders={allOrders}\n                allExpenses={allExpenses}\n                allPurchases={allPurchases}\n                allSalesReturns={allSalesReturns}\n                allPurchaseReturns={allPurchaseReturns}\n                columns={columns.hourly}\n            />\n            <hr />\n            <h2>Daily &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.sales} onChange={(e) => {\n                    columns.daily.sales = !columns.daily.sales;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.salesProfit} onChange={(e) => {\n                    columns.daily.salesProfit = !columns.daily.salesProfit;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Sales Profit vs &nbsp;\n                  <input type=\"checkbox\" checked={columns.daily.paidSales} onChange={(e) => {\n                    columns.daily.paidSales = !columns.daily.paidSales;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Paid Sales vs &nbsp;\n                      <input type=\"checkbox\" checked={columns.daily.unpaidSales} onChange={(e) => {\n                    columns.daily.unpaidSales = !columns.daily.unpaidSales;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />UnPaid Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.expense} onChange={(e) => {\n                    columns.daily.expense = !columns.daily.expense;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Expense vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.purchase} onChange={(e) => {\n                    columns.daily.purchase = !columns.daily.purchase;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Purchase vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.salesReturn} onChange={(e) => {\n                    columns.daily.salesReturn = !columns.daily.salesReturn;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Sales Return vs &nbsp;\n                 <input type=\"checkbox\" checked={columns.daily.salesReturnProfit} onChange={(e) => {\n                    columns.daily.salesReturnProfit = !columns.daily.salesReturnProfit;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Sales Return Profit vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.salesReturnLoss} onChange={(e) => {\n                    columns.daily.salesReturnLoss = !columns.daily.salesReturnLoss;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Sales Return Loss vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.purchaseReturn} onChange={(e) => {\n                    columns.daily.purchaseReturn = !columns.daily.purchaseReturn;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Purchase Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.daily.loss} onChange={(e) => {\n                    columns.daily.loss = !columns.daily.loss;\n                    setColumns({ ...columns });\n                    initDailyGraph();\n\n                }} />Sales Loss\n            </h2>\n            <DailySales ref={DailyGraphRef}\n                allOrders={allOrders}\n                allExpenses={allExpenses}\n                allPurchases={allPurchases}\n                allSalesReturns={allSalesReturns}\n                allPurchaseReturns={allPurchaseReturns}\n                columns={columns.daily}\n            />\n            <hr />\n            <h2>Monthly &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.sales} onChange={(e) => {\n                    columns.monthly.sales = !columns.monthly.sales;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.salesProfit} onChange={(e) => {\n                    columns.monthly.salesProfit = !columns.monthly.salesProfit;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Sales Profit vs &nbsp;\n                  <input type=\"checkbox\" checked={columns.monthly.paidSales} onChange={(e) => {\n                    columns.monthly.paidSales = !columns.monthly.paidSales;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Paid Sales vs &nbsp;\n                      <input type=\"checkbox\" checked={columns.monthly.unpaidSales} onChange={(e) => {\n                    columns.monthly.unpaidSales = !columns.monthly.unpaidSales;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />UnPaid Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.expense} onChange={(e) => {\n                    columns.monthly.expense = !columns.monthly.expense;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Expense vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.purchase} onChange={(e) => {\n                    columns.monthly.purchase = !columns.monthly.purchase;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Purchase vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.salesReturn} onChange={(e) => {\n                    columns.monthly.salesReturn = !columns.monthly.salesReturn;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Sales Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.salesReturnProfit} onChange={(e) => {\n                    columns.monthly.salesReturnProfit = !columns.monthly.salesReturnProfit;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Sales Return Profit vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.salesReturnLoss} onChange={(e) => {\n                    columns.monthly.salesReturnLoss = !columns.monthly.salesReturnLoss;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Sales Return Loss vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.purchaseReturn} onChange={(e) => {\n                    columns.monthly.purchaseReturn = !columns.monthly.purchaseReturn;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Purchase Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.monthly.loss} onChange={(e) => {\n                    columns.monthly.loss = !columns.monthly.loss;\n                    setColumns({ ...columns });\n                    initMonthlyGraph();\n\n                }} />Sales Loss\n\n            </h2>\n            <MonthlySales ref={MonthlyGraphRef}\n                allOrders={allOrders}\n                allExpenses={allExpenses}\n                allPurchases={allPurchases}\n                allSalesReturns={allSalesReturns}\n                allPurchaseReturns={allPurchaseReturns}\n                columns={columns.monthly}\n            />\n            <hr />\n            <h2>Yearly &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.sales} onChange={(e) => {\n                    columns.yearly.sales = !columns.yearly.sales;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.salesProfit} onChange={(e) => {\n                    columns.yearly.salesProfit = !columns.yearly.salesProfit;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Sales Profit vs &nbsp;\n                  <input type=\"checkbox\" checked={columns.yearly.paidSales} onChange={(e) => {\n                    columns.yearly.paidSales = !columns.yearly.paidSales;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Paid Sales vs &nbsp;\n                      <input type=\"checkbox\" checked={columns.yearly.unpaidSales} onChange={(e) => {\n                    columns.yearly.unpaidSales = !columns.yearly.unpaidSales;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />UnPaid Sales vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.expense} onChange={(e) => {\n                    columns.yearly.expense = !columns.yearly.expense;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Expense vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.purchase} onChange={(e) => {\n                    columns.yearly.purchase = !columns.yearly.purchase;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Purchase vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.salesReturn} onChange={(e) => {\n                    columns.yearly.salesReturn = !columns.yearly.salesReturn;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Sales Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.salesReturnProfit} onChange={(e) => {\n                    columns.yearly.salesReturnProfit = !columns.yearly.salesReturnProfit;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Sales Return Profit vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.salesReturnLoss} onChange={(e) => {\n                    columns.yearly.salesReturnLoss = !columns.yearly.salesReturnLoss;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Sales Return Loss vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.purchaseReturn} onChange={(e) => {\n                    columns.yearly.purchaseReturn = !columns.yearly.purchaseReturn;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Purchase Return vs &nbsp;\n                <input type=\"checkbox\" checked={columns.yearly.loss} onChange={(e) => {\n                    columns.yearly.loss = !columns.yearly.loss;\n                    setColumns({ ...columns });\n                    initYearlyGraph();\n\n                }} />Sales Loss\n            </h2>\n            <YearlySales ref={YearlyGraphRef}\n                allOrders={allOrders}\n                allExpenses={allExpenses}\n                allPurchases={allPurchases}\n                allSalesReturns={allSalesReturns}\n                allPurchaseReturns={allPurchaseReturns}\n                columns={columns.yearly}\n            />\n            <hr />\n            {/*\n            <Calendar ref={CalendarRef}\n                allOrders={allOrders}\n                allExpenses={allExpenses}\n                allPurchases={allPurchases}\n                allSalesReturns={allSalesReturns}\n                allPurchaseReturns={allPurchaseReturns}\n            />\n            */}\n        </>\n    );\n});\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}