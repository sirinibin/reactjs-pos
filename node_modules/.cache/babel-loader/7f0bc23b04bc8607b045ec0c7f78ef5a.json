{"ast":null,"code":"var encodeUtf8 = require('encode-utf8');\n\nvar Mode = require('./mode');\n\nfunction ByteData(data) {\n  this.mode = Mode.BYTE;\n  this.data = new Uint8Array(encodeUtf8(data));\n}\n\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\n\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\n\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\n\nmodule.exports = ByteData;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/qrcode/lib/core/byte-data.js"],"names":["encodeUtf8","require","Mode","ByteData","data","mode","BYTE","Uint8Array","getBitsLength","length","prototype","getLength","write","bitBuffer","i","l","put","module","exports"],"mappings":"AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AAEA,SAASE,QAAT,CAAmBC,IAAnB,EAAyB;AACvB,OAAKC,IAAL,GAAYH,IAAI,CAACI,IAAjB;AACA,OAAKF,IAAL,GAAY,IAAIG,UAAJ,CAAeP,UAAU,CAACI,IAAD,CAAzB,CAAZ;AACD;;AAEDD,QAAQ,CAACK,aAAT,GAAyB,SAASA,aAAT,CAAwBC,MAAxB,EAAgC;AACvD,SAAOA,MAAM,GAAG,CAAhB;AACD,CAFD;;AAIAN,QAAQ,CAACO,SAAT,CAAmBC,SAAnB,GAA+B,SAASA,SAAT,GAAsB;AACnD,SAAO,KAAKP,IAAL,CAAUK,MAAjB;AACD,CAFD;;AAIAN,QAAQ,CAACO,SAAT,CAAmBF,aAAnB,GAAmC,SAASA,aAAT,GAA0B;AAC3D,SAAOL,QAAQ,CAACK,aAAT,CAAuB,KAAKJ,IAAL,CAAUK,MAAjC,CAAP;AACD,CAFD;;AAIAN,QAAQ,CAACO,SAAT,CAAmBE,KAAnB,GAA2B,UAAUC,SAAV,EAAqB;AAC9C,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,KAAKX,IAAL,CAAUK,MAA9B,EAAsCK,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAkD;AAChDD,IAAAA,SAAS,CAACG,GAAV,CAAc,KAAKZ,IAAL,CAAUU,CAAV,CAAd,EAA4B,CAA5B;AACD;AACF,CAJD;;AAMAG,MAAM,CAACC,OAAP,GAAiBf,QAAjB","sourcesContent":["const encodeUtf8 = require('encode-utf8')\nconst Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Uint8Array(encodeUtf8(data))\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n"]},"metadata":{},"sourceType":"script"}