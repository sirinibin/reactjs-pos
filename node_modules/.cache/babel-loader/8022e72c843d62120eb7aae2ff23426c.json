{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef,forwardRef,useImperativeHandle}from\"react\";import Cookies from\"universal-cookie\";import{Chart}from\"react-google-charts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var HourlySales=/*#__PURE__*/forwardRef(function(props,ref){var cookies=new Cookies();useImperativeHandle(ref,function(){return{init:function init(){makeDateOptions();if(props.allOrders.length>0){makeHourlySalesData();}}};});var _useState=useState([{label:\"2023\",value:2023},{label:\"2022\",value:2022},{label:\"2021\",value:2021},{label:\"2020\",value:2020}]),_useState2=_slicedToArray(_useState,2),yearOptions=_useState2[0],setYearOptions=_useState2[1];var _useState3=useState([{label:\"JAN\",value:1},{label:\"FEB\",value:2},{label:\"MAR\",value:3},{label:\"APR\",value:4},{label:\"MAY\",value:5},{label:\"JUN\",value:6},{label:\"JULY\",value:7},{label:\"AUG\",value:8},{label:\"SEP\",value:9},{label:\"OCT\",value:10},{label:\"NOV\",value:11},{label:\"DEC\",value:12}]),_useState4=_slicedToArray(_useState3,2),monthOptions=_useState4[0],setMonthOptions=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),dateOptions=_useState6[0],setDateOptions=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),hourlySales=_useState8[0],setHourlySales=_useState8[1];var _useState9=useState(new Date().getDate()),_useState10=_slicedToArray(_useState9,2),hourlySalesSelectedDate=_useState10[0],setHourlySalesSelectedDate=_useState10[1];var _useState11=useState(new Date().getMonth()+1),_useState12=_slicedToArray(_useState11,2),hourlySalesSelectedMonth=_useState12[0],setHourlySalesSelectedMonth=_useState12[1];var _useState13=useState(new Date().getFullYear()),_useState14=_slicedToArray(_useState13,2),hourlySalesSelectedYear=_useState14[0],setHourlySalesSelectedYear=_useState14[1];function daysInMonth(month,year){return new Date(year,month,0).getDate();}function makeDateOptions(){var days=daysInMonth(hourlySalesSelectedMonth,hourlySalesSelectedYear);var options=[];for(var i=1;i<=days;i++){options.push({label:i,value:i});}dateOptions=options;setDateOptions(options);}function makeHourlySalesData(){var columns=[{type:\"datetime\",label:\"Time\"}];if(props.columns.sales){columns.push({type:\"number\",label:\"Sales\"});}if(props.columns.salesProfit){columns.push({type:\"number\",label:\"Sales Profit\"});}if(props.columns.paidSales){columns.push({type:\"number\",label:\"Paid Sales\"});}if(props.columns.unpaidSales){columns.push({type:\"number\",label:\"UnPaid Sales\"});}if(props.columns.expense){columns.push({type:\"number\",label:\"Expense\"});}if(props.columns.purchase){columns.push({type:\"number\",label:\"Purchase\"});}if(props.columns.salesReturn){columns.push({type:\"number\",label:\"Sales Return\"});}if(props.columns.salesReturnProfit){columns.push({type:\"number\",label:\"Sales Return profit\"});}if(props.columns.salesReturnLoss){columns.push({type:\"number\",label:\"Sales Return Loss\"});}if(props.columns.purchaseReturn){columns.push({type:\"number\",label:\"Purchase Return\"});}if(props.columns.loss){columns.push({type:\"number\",label:\"Sales Loss\"});}var data=[];if(columns.length>1){data.push(columns);}if(props.columns.sales||props.columns.salesProfit||props.columns.loss||props.columns.paidSales||props.columns.unpaidSales){var _iterator=_createForOfIteratorHelper(props.allOrders),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var sale=_step.value;// console.log(\"Sale Month:\", new Date(sale.date).getMonth() + 1);\n// console.log(\"Sale Year:\", new Date(sale.date).getFullYear());\nif(new Date(sale.date).getMonth()+1==hourlySalesSelectedMonth&&new Date(sale.date).getFullYear()==hourlySalesSelectedYear&&new Date(sale.date).getDate()==hourlySalesSelectedDate// && new Date(sale.date).getHours() == hour\n){var row=[new Date(sale.date)];if(props.columns.sales){row.push(parseFloat(sale.net_total.toFixed(2)));}if(props.columns.salesProfit){row.push(parseFloat(sale.net_profit.toFixed(2)));}if(props.columns.paidSales){row.push(parseFloat(sale.total_payment_received.toFixed(2)));/*\n                        if(sale.payment_status==\"paid\"){\n                            row.push(parseFloat(sale.net_total.toFixed(2)));\n                        }else {\n                            row.push(0.00);\n                        }\n                        */}if(props.columns.unpaidSales){row.push(parseFloat(sale.balance_amount.toFixed(2)));/*\n                        if(sale.payment_status==\"not_paid\"){\n                            row.push(parseFloat(sale.net_total.toFixed(2)));\n                        }else {\n                            row.push(0.00);\n                        }\n                        */}if(props.columns.expense){row.push(undefined);}if(props.columns.purchase){row.push(undefined);}if(props.columns.salesReturn){row.push(undefined);}if(props.columns.salesReturnProfit){row.push(undefined);}if(props.columns.salesReturnLoss){row.push(undefined);}if(props.columns.purchaseReturn){row.push(undefined);}if(props.columns.loss){row.push(parseFloat(sale.loss.toFixed(2)));}data.push(row);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}if(props.columns.expense){var _iterator2=_createForOfIteratorHelper(props.allExpenses),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var expense=_step2.value;if(new Date(expense.date).getMonth()+1==hourlySalesSelectedMonth&&new Date(expense.date).getFullYear()==hourlySalesSelectedYear&&new Date(expense.date).getDate()==hourlySalesSelectedDate){var _row=[new Date(expense.date)];if(props.columns.sales){_row.push(undefined);}if(props.columns.salesProfit){_row.push(undefined);}if(props.columns.sales){_row.push(undefined);}if(props.columns.salesProfit){_row.push(undefined);}if(props.columns.expense){_row.push(parseFloat(expense.amount.toFixed(2)));}if(props.columns.purchase){_row.push(undefined);}if(props.columns.salesReturn){_row.push(undefined);}if(props.columns.salesReturnProfit){_row.push(undefined);}if(props.columns.salesReturnLoss){_row.push(undefined);}if(props.columns.purchaseReturn){_row.push(undefined);}if(props.columns.loss){_row.push(undefined);}data.push(_row);}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}if(props.columns.purchase){var _iterator3=_createForOfIteratorHelper(props.allPurchases),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var purchase=_step3.value;if(new Date(purchase.date).getMonth()+1==hourlySalesSelectedMonth&&new Date(purchase.date).getFullYear()==hourlySalesSelectedYear&&new Date(purchase.date).getDate()==hourlySalesSelectedDate){var _row2=[new Date(purchase.date)];if(props.columns.sales){_row2.push(undefined);}if(props.columns.salesProfit){_row2.push(undefined);}if(props.columns.sales){_row2.push(undefined);}if(props.columns.salesProfit){_row2.push(undefined);}if(props.columns.expense){_row2.push(undefined);}if(props.columns.purchase){_row2.push(parseFloat(purchase.net_total.toFixed(2)));}if(props.columns.salesReturn){_row2.push(undefined);}if(props.columns.salesReturnProfit){_row2.push(undefined);}if(props.columns.salesReturnLoss){_row2.push(undefined);}if(props.columns.purchaseReturn){_row2.push(undefined);}if(props.columns.loss){_row2.push(undefined);}data.push(_row2);}}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}if(props.columns.salesReturn||props.columns.salesReturnProfit||props.columns.salesReturnLoss){var _iterator4=_createForOfIteratorHelper(props.allSalesReturns),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var salesReturn=_step4.value;if(new Date(salesReturn.date).getMonth()+1==hourlySalesSelectedMonth&&new Date(salesReturn.date).getFullYear()==hourlySalesSelectedYear&&new Date(salesReturn.date).getDate()==hourlySalesSelectedDate){var _row3=[new Date(salesReturn.date)];if(props.columns.sales){_row3.push(undefined);}if(props.columns.salesProfit){_row3.push(undefined);}if(props.columns.sales){_row3.push(undefined);}if(props.columns.salesProfit){_row3.push(undefined);}if(props.columns.expense){_row3.push(undefined);}if(props.columns.purchase){_row3.push(undefined);}if(props.columns.salesReturn){_row3.push(parseFloat(salesReturn.net_total.toFixed(2)));}if(props.columns.salesReturnProfit){_row3.push(parseFloat(salesReturn.net_profit.toFixed(2)));}if(props.columns.salesReturnLoss){_row3.push(parseFloat(salesReturn.loss.toFixed(2)));}if(props.columns.purchaseReturn){_row3.push(undefined);}if(props.columns.loss){_row3.push(undefined);}data.push(_row3);}}}catch(err){_iterator4.e(err);}finally{_iterator4.f();}}if(props.columns.purchaseReturn){var _iterator5=_createForOfIteratorHelper(props.allPurchaseReturns),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var purchaseReturn=_step5.value;if(new Date(purchaseReturn.date).getMonth()+1==hourlySalesSelectedMonth&&new Date(purchaseReturn.date).getFullYear()==hourlySalesSelectedYear&&new Date(purchaseReturn.date).getDate()==hourlySalesSelectedDate){var _row4=[new Date(purchaseReturn.date)];if(props.columns.sales){_row4.push(undefined);}if(props.columns.salesProfit){_row4.push(undefined);}if(props.columns.sales){_row4.push(undefined);}if(props.columns.salesProfit){_row4.push(undefined);}if(props.columns.expense){_row4.push(undefined);}if(props.columns.purchase){_row4.push(undefined);}if(props.columns.salesReturn){_row4.push(undefined);}if(props.columns.salesReturnProfit){_row4.push(undefined);}if(props.columns.salesReturnLoss){_row4.push(undefined);}if(props.columns.purchaseReturn){_row4.push(parseFloat(purchaseReturn.net_total.toFixed(2)));}if(props.columns.loss){_row4.push(undefined);}data.push(_row4);}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}}hourlySales=data;setHourlySales(data);}var _useState15=useState({title:'',subtitle:'(SAR)',legend:{position:'right'},hAxis:{title:\"Time\"},vAxis:{title:\"Amount(SAR)\"},series:{// 0: { curveType: \"function\", axis: 'Temps' },\n// 1: { curveType: \"function\", axis: 'Daylight' },\n}}),_useState16=_slicedToArray(_useState15,2),options=_useState16[0],setOptions=_useState16[1];useEffect(function(){// getAllOrders();\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid p-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Year\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"select\",{value:hourlySalesSelectedYear,onChange:function onChange(e){if(!e.target.value){return;}hourlySalesSelectedYear=parseInt(e.target.value);setHourlySalesSelectedYear(parseInt(e.target.value));makeHourlySalesData();},className:\"form-control\",children:yearOptions.map(function(option){return/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label});})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Month\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"select\",{value:hourlySalesSelectedMonth,onChange:function onChange(e){if(!e.target.value){return;}hourlySalesSelectedMonth=parseInt(e.target.value);setHourlySalesSelectedMonth(parseInt(e.target.value));makeDateOptions();makeHourlySalesData();},className:\"form-control\",children:monthOptions.map(function(option){return/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label});})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Date\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-3\",children:/*#__PURE__*/_jsx(\"select\",{value:hourlySalesSelectedDate,onChange:function onChange(e){if(!e.target.value){return;}hourlySalesSelectedDate=parseInt(e.target.value);setHourlySalesSelectedDate(parseInt(e.target.value));makeHourlySalesData();},className:\"form-control\",children:dateOptions.map(function(option){return/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label});})})})]}),hourlySales&&hourlySales.length>0?/*#__PURE__*/_jsx(Chart,{chartType:\"LineChart\",width:\"100%\",height:\"400px\",data:hourlySales,options:options}):\"\"]})})});});export default HourlySales;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/analytics/sales/hourlySales.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Cookies","Chart","HourlySales","props","ref","cookies","init","makeDateOptions","allOrders","length","makeHourlySalesData","label","value","yearOptions","setYearOptions","monthOptions","setMonthOptions","dateOptions","setDateOptions","hourlySales","setHourlySales","Date","getDate","hourlySalesSelectedDate","setHourlySalesSelectedDate","getMonth","hourlySalesSelectedMonth","setHourlySalesSelectedMonth","getFullYear","hourlySalesSelectedYear","setHourlySalesSelectedYear","daysInMonth","month","year","days","options","i","push","columns","type","sales","salesProfit","paidSales","unpaidSales","expense","purchase","salesReturn","salesReturnProfit","salesReturnLoss","purchaseReturn","loss","data","sale","date","row","parseFloat","net_total","toFixed","net_profit","total_payment_received","balance_amount","undefined","allExpenses","amount","allPurchases","allSalesReturns","allPurchaseReturns","title","subtitle","legend","position","hAxis","vAxis","series","setOptions","e","target","parseInt","map","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Chart } from \"react-google-charts\";\n\n\n\nconst HourlySales = forwardRef((props, ref) => {\n    const cookies = new Cookies();\n    useImperativeHandle(ref, () => ({\n        init() {\n            makeDateOptions();\n            if (props.allOrders.length > 0) {\n                makeHourlySalesData();\n            }\n        }\n    }));\n\n    const [yearOptions, setYearOptions] = useState([\n        {\n            label: \"2023\",\n            value: 2023,\n        },\n        {\n            label: \"2022\",\n            value: 2022,\n        },\n        {\n            label: \"2021\",\n            value: 2021,\n        },\n        {\n            label: \"2020\",\n            value: 2020,\n        }\n    ]);\n    const [monthOptions, setMonthOptions] = useState([\n        {\n            label: \"JAN\",\n            value: 1,\n        },\n        {\n            label: \"FEB\",\n            value: 2,\n        },\n        {\n            label: \"MAR\",\n            value: 3,\n        },\n        {\n            label: \"APR\",\n            value: 4,\n        },\n        {\n            label: \"MAY\",\n            value: 5,\n        },\n        {\n            label: \"JUN\",\n            value: 6,\n        },\n        {\n            label: \"JULY\",\n            value: 7,\n        },\n        {\n            label: \"AUG\",\n            value: 8,\n        },\n        {\n            label: \"SEP\",\n            value: 9,\n        },\n        {\n            label: \"OCT\",\n            value: 10,\n        },\n        {\n            label: \"NOV\",\n            value: 11,\n        },\n        {\n            label: \"DEC\",\n            value: 12,\n        },\n    ]);\n\n    let [dateOptions, setDateOptions] = useState([]);\n\n\n\n    let [hourlySales, setHourlySales] = useState([]);\n    let [hourlySalesSelectedDate, setHourlySalesSelectedDate] = useState(new Date().getDate());\n    let [hourlySalesSelectedMonth, setHourlySalesSelectedMonth] = useState(new Date().getMonth() + 1);\n    let [hourlySalesSelectedYear, setHourlySalesSelectedYear] = useState(new Date().getFullYear());\n\n\n    function daysInMonth(month, year) {\n        return new Date(year, month, 0).getDate();\n    }\n\n    function makeDateOptions() {\n        let days = daysInMonth(hourlySalesSelectedMonth, hourlySalesSelectedYear);\n        let options = [];\n        for (let i = 1; i <= days; i++) {\n            options.push({\n                label: i,\n                value: i,\n            });\n        }\n\n        dateOptions = options;\n        setDateOptions(options);\n    }\n\n    function makeHourlySalesData() {\n        let columns = [\n            { type: \"datetime\", label: \"Time\" }\n        ];\n        if (props.columns.sales) {\n            columns.push({ type: \"number\", label: \"Sales\" });\n        }\n\n        if (props.columns.salesProfit) {\n            columns.push({ type: \"number\", label: \"Sales Profit\" });\n        }\n\n        if (props.columns.paidSales) {\n            columns.push({ type: \"number\", label: \"Paid Sales\" });\n        }\n\n        if (props.columns.unpaidSales) {\n            columns.push({ type: \"number\", label: \"UnPaid Sales\" });\n        }\n\n        if (props.columns.expense) {\n            columns.push({ type: \"number\", label: \"Expense\" });\n        }\n\n        if (props.columns.purchase) {\n            columns.push({ type: \"number\", label: \"Purchase\" });\n        }\n\n        if (props.columns.salesReturn) {\n            columns.push({ type: \"number\", label: \"Sales Return\" });\n        }\n\n        if (props.columns.salesReturnProfit) {\n            columns.push({ type: \"number\", label: \"Sales Return profit\" });\n        }\n\n        if (props.columns.salesReturnLoss) {\n            columns.push({ type: \"number\", label: \"Sales Return Loss\" });\n        }\n\n        if (props.columns.purchaseReturn) {\n            columns.push({ type: \"number\", label: \"Purchase Return\" });\n        }\n\n        if (props.columns.loss) {\n            columns.push({ type: \"number\", label: \"Sales Loss\" });\n        }\n\n        let data = [];\n\n\n        if (columns.length > 1) {\n            data.push(columns)\n        }\n\n\n\n        if (props.columns.sales || props.columns.salesProfit || props.columns.loss||props.columns.paidSales||props.columns.unpaidSales) {\n            for (const sale of props.allOrders) {\n                // console.log(\"Sale Month:\", new Date(sale.date).getMonth() + 1);\n                // console.log(\"Sale Year:\", new Date(sale.date).getFullYear());\n                if ((new Date(sale.date).getMonth() + 1) == hourlySalesSelectedMonth\n                    && new Date(sale.date).getFullYear() == hourlySalesSelectedYear\n                    && new Date(sale.date).getDate() == hourlySalesSelectedDate\n                    // && new Date(sale.date).getHours() == hour\n                ) {\n\n\n                    let row = [new Date(sale.date)];\n\n                    if (props.columns.sales) {\n                        row.push(parseFloat(sale.net_total.toFixed(2)));\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(parseFloat(sale.net_profit.toFixed(2)));\n                    }\n\n                    if (props.columns.paidSales) {\n                        row.push(parseFloat(sale.total_payment_received.toFixed(2)));\n                        /*\n                        if(sale.payment_status==\"paid\"){\n                            row.push(parseFloat(sale.net_total.toFixed(2)));\n                        }else {\n                            row.push(0.00);\n                        }\n                        */\n                    }\n\n                    if (props.columns.unpaidSales) {\n                        row.push(parseFloat(sale.balance_amount.toFixed(2)));\n                        /*\n                        if(sale.payment_status==\"not_paid\"){\n                            row.push(parseFloat(sale.net_total.toFixed(2)));\n                        }else {\n                            row.push(0.00);\n                        }\n                        */\n                    }    \n\n                    if (props.columns.expense) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchase) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnLoss) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchaseReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.loss) {\n                        row.push(parseFloat(sale.loss.toFixed(2)));\n                    }\n\n                    data.push(row);\n                }\n            }\n        }\n\n        if (props.columns.expense) {\n            for (const expense of props.allExpenses) {\n                if ((new Date(expense.date).getMonth() + 1) == hourlySalesSelectedMonth\n                    && new Date(expense.date).getFullYear() == hourlySalesSelectedYear\n                    && new Date(expense.date).getDate() == hourlySalesSelectedDate\n                ) {\n\n                    let row = [new Date(expense.date)];\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n                    \n                    if (props.columns.expense) {\n                        row.push(parseFloat(expense.amount.toFixed(2)));\n                    }\n\n                    if (props.columns.purchase) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnLoss) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchaseReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.loss) {\n                        row.push(undefined);\n                    }\n\n                    data.push(row);\n                }\n            }\n        }\n\n        if (props.columns.purchase) {\n            for (const purchase of props.allPurchases) {\n                if ((new Date(purchase.date).getMonth() + 1) == hourlySalesSelectedMonth\n                    && new Date(purchase.date).getFullYear() == hourlySalesSelectedYear\n                    && new Date(purchase.date).getDate() == hourlySalesSelectedDate\n                ) {\n                    let row = [new Date(purchase.date)];\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.expense) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchase) {\n                        row.push(parseFloat(purchase.net_total.toFixed(2)));\n                    }\n\n                    if (props.columns.salesReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnLoss) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchaseReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.loss) {\n                        row.push(undefined);\n                    }\n\n                    data.push(row);\n                }\n            }\n        }\n\n        if (props.columns.salesReturn || props.columns.salesReturnProfit || props.columns.salesReturnLoss) {\n            for (const salesReturn of props.allSalesReturns) {\n                if ((new Date(salesReturn.date).getMonth() + 1) == hourlySalesSelectedMonth\n                    && new Date(salesReturn.date).getFullYear() == hourlySalesSelectedYear\n                    && new Date(salesReturn.date).getDate() == hourlySalesSelectedDate\n                ) {\n\n                    let row = [new Date(salesReturn.date)];\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.expense) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchase) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturn) {\n                        row.push(parseFloat(salesReturn.net_total.toFixed(2)));\n                    }\n\n                    if (props.columns.salesReturnProfit) {\n                        row.push(parseFloat(salesReturn.net_profit.toFixed(2)));\n                    }\n\n                    if (props.columns.salesReturnLoss) {\n                        row.push(parseFloat(salesReturn.loss.toFixed(2)));\n                    }\n\n                    if (props.columns.purchaseReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.loss) {\n                        row.push(undefined);\n                    }\n\n                    data.push(row);\n                }\n            }\n        }\n\n        if (props.columns.purchaseReturn) {\n            for (const purchaseReturn of props.allPurchaseReturns) {\n                if ((new Date(purchaseReturn.date).getMonth() + 1) == hourlySalesSelectedMonth\n                    && new Date(purchaseReturn.date).getFullYear() == hourlySalesSelectedYear\n                    && new Date(purchaseReturn.date).getDate() == hourlySalesSelectedDate\n                ) {\n\n                    let row = [new Date(purchaseReturn.date)];\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.sales) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.expense) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchase) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturn) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnProfit) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.salesReturnLoss) {\n                        row.push(undefined);\n                    }\n\n                    if (props.columns.purchaseReturn) {\n                        row.push(parseFloat(purchaseReturn.net_total.toFixed(2)));\n                    }\n\n                    if (props.columns.loss) {\n                        row.push(undefined);\n                    }\n\n                    data.push(row);\n                }\n            }\n        }\n\n\n        hourlySales = data;\n        setHourlySales(data);\n    }\n\n    const [options, setOptions] = useState({\n        title: '',\n        subtitle: '(SAR)',\n        legend: { position: 'right' },\n        hAxis: {\n            title: \"Time\",\n        },\n        vAxis: {\n            title: \"Amount(SAR)\",\n        },\n        series: {\n            // 0: { curveType: \"function\", axis: 'Temps' },\n            // 1: { curveType: \"function\", axis: 'Daylight' },\n        },\n    });\n\n\n\n\n\n    useEffect(() => {\n        // getAllOrders();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <>\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n\n                    <div className=\"col-md-2\">\n                        <label className=\"form-label\">Year</label>\n\n                        <div className=\"input-group mb-3\">\n                            <select\n                                value={hourlySalesSelectedYear}\n                                onChange={(e) => {\n                                    if (!e.target.value) {\n                                        return;\n                                    }\n                                    hourlySalesSelectedYear = parseInt(e.target.value);\n                                    setHourlySalesSelectedYear(parseInt(e.target.value));\n                                    makeHourlySalesData();\n                                }}\n                                className=\"form-control\"\n                            >\n                                {yearOptions.map((option) => (\n                                    <option value={option.value}>{option.label}</option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-2\">\n                        <label className=\"form-label\">Month</label>\n\n                        <div className=\"input-group mb-3\">\n                            <select\n                                value={hourlySalesSelectedMonth}\n                                onChange={(e) => {\n                                    if (!e.target.value) {\n                                        return;\n                                    }\n\n                                    hourlySalesSelectedMonth = parseInt(e.target.value);\n                                    setHourlySalesSelectedMonth(parseInt(e.target.value));\n                                    makeDateOptions();\n                                    makeHourlySalesData();\n                                }}\n                                className=\"form-control\"\n                            >\n                                {monthOptions.map((option) => (\n                                    <option value={option.value}>{option.label}</option>\n                                ))}\n\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-2\">\n                        <label className=\"form-label\">Date</label>\n\n                        <div className=\"input-group mb-3\">\n                            <select\n                                value={hourlySalesSelectedDate}\n                                onChange={(e) => {\n                                    if (!e.target.value) {\n                                        return;\n                                    }\n                                    hourlySalesSelectedDate = parseInt(e.target.value);\n                                    setHourlySalesSelectedDate(parseInt(e.target.value));\n                                    makeHourlySalesData();\n                                }}\n                                className=\"form-control\"\n                            >\n                                {dateOptions.map((option) => (\n                                    <option value={option.value}>{option.label}</option>\n                                ))}\n\n                            </select>\n                        </div>\n                    </div>\n\n                    {hourlySales && hourlySales.length > 0 ? <Chart\n                        chartType=\"LineChart\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={hourlySales}\n                        options={options}\n                    /> : \"\"}\n                </div>\n            </div>\n        </>\n    );\n});\n\nexport default HourlySales;\n"]},"metadata":{},"sourceType":"module"}