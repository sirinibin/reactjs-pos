{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/product/delivery_note_history.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Modal, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport DeliveryNoteView from \"../delivery_note/view.js\";\nimport CustomerView from \"../customer/view.js\"; //function ProductIndex(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeliveryNoteHistory = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(model) {\n      product = model;\n      setProduct({ ...product\n      });\n      list();\n      SetShow(true);\n    }\n\n  }));\n  let [product, setProduct] = useState({});\n  const cookies = new Cookies();\n  const selectedDate = new Date(); //list\n\n  const [historyList, setHistoryList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Search params\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortProduct, setSortProduct] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + object[key];\n    }).join(\"&\");\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      searchParams[field] = \"\";\n      page = 1;\n      setPage(page);\n      list();\n      return;\n    }\n\n    if (value) {\n      let d = new Date(value);\n      value = format(d, \"MMM dd yyyy\");\n      console.log(\"value2:\", value);\n      console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n    } else {\n      value = \"\";\n    }\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {// setSelectedCreatedByProducts(values);\n    } else if (field === \"category_id\") {//setSelectedProductCategories(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function list() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"\";\n    /*\n    let Select =\n        \"select=id,store_id,store_name,customer_id,customer_name,order_id,order_code,quantity,\";\n        */\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    searchParams[\"product_id\"] = product.id;\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60); // console.log(\"queryParams:\", queryParams);\n    //queryParams = encodeURIComponent(queryParams);\n\n    setIsListLoading(true);\n    fetch(\"/v1/delivery-note/history?\" + Select + queryParams + \"&sort=\" + sortProduct + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setHistoryList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      totalDeliveryNoteQuantity = data.meta.total_quantity;\n      setTotalDeliveryNoteQuantity(totalDeliveryNoteQuantity);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortProduct = sortProduct === \"-\" ? \"\" : \"-\";\n    setSortProduct(sortProduct);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const [show, SetShow] = useState(false);\n\n  function handleClose() {\n    SetShow(false);\n  }\n\n  ;\n  let [totalDeliveryNoteQuantity, setTotalDeliveryNoteQuantity] = useState(0.00);\n  let [totalProfit, setTotalProfit] = useState(0.00);\n  let [totalVat, setTotalVat] = useState(0.00);\n  let [totalLoss, setTotalLoss] = useState(0.00);\n  const DeliveryNoteDetailsViewRef = useRef();\n\n  function openDeliveryNoteDetailsView(id) {\n    DeliveryNoteDetailsViewRef.current.open(id);\n  }\n\n  const CustomerDetailsViewRef = useRef();\n\n  function openCustomerDetailsView(id) {\n    CustomerDetailsViewRef.current.open(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeliveryNoteView, {\n      ref: DeliveryNoteDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerView, {\n      ref: CustomerDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      onHide: handleClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"DeliveryNote History of \", product.name, \" \", product.name_in_arabic ? \" / \" + product.name_in_arabic : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-end\",\n                children: [\"Quantity: \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: totalDeliveryNoteQuantity,\n                    displayType: \"text\",\n                    thousandSeparator: true,\n                    suffix: \"\",\n                    renderText: (value, props) => value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-start\",\n                        children: \"No DeliveryNote History to display\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    style: {\n                      bproduct: \"solid 0px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-start\",\n                      style: {\n                        border: \"solid 0px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          setIsRefreshInProcess(true);\n                          list();\n                        },\n                        variant: \"primary\",\n                        disabled: isRefreshInProcess,\n                        children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                          as: \"span\",\n                          animation: \"bproduct\",\n                          size: \"sm\",\n                          role: \"status\",\n                          \"aria-hidden\": true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 345,\n                          columnNumber: 57\n                        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-refresh\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"visually-hidden\",\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-center\",\n                      children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                        animation: \"grow\",\n                        variant: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-end\",\n                      children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-label\",\n                          children: \"Size:\\xA0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: pageSize,\n                          onChange: e => {\n                            changePageSize(e.target.value);\n                          },\n                          className: \"form-control pull-right\",\n                          style: {\n                            bproduct: \"solid 1px\",\n                            bproductColor: \"silver\",\n                            width: \"55px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"5\",\n                            children: \"5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 379,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"10\",\n                            children: \"10\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 382,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"20\",\n                            children: \"20\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 385,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"40\",\n                            children: \"40\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 386,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"50\",\n                            children: \"50\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"100\",\n                            children: \"100\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 388,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"200\",\n                            children: \"200\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 389,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"300\",\n                            children: \"300\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 390,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"500\",\n                            children: \"500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 391,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1000\",\n                            children: \"1000\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 392,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1500\",\n                            children: \"1500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 393,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 367,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      style: {\n                        bproduct: \"solid 0px\"\n                      },\n                      children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                        breakLabel: \"...\",\n                        nextLabel: \"next >\",\n                        onPageChange: event => {\n                          changePage(event.selected + 1);\n                        },\n                        pageRangeDisplayed: 5,\n                        pageCount: totalPages,\n                        previousLabel: \"< previous\",\n                        renderOnZeroPageCount: null,\n                        className: \"pagination  flex-wrap\",\n                        pageClassName: \"page-item\",\n                        pageLinkClassName: \"page-link\",\n                        activeClassName: \"active\",\n                        previousClassName: \"page-item\",\n                        nextClassName: \"page-item\",\n                        previousLinkClassName: \"page-link\",\n                        nextLinkClassName: \"page-link\",\n                        forcePage: page - 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 63\n                      }, this) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col text-start\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-start\",\n                          children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 429,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col text-end\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-end\",\n                          children: [\"page \", page, \" of \", totalPages]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 436,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    style: {\n                      overflowX: \"auto\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-striped table-sm table-bordered\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"created_at\");\n                              },\n                              children: [\"Created At\", sortField === \"created_at\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-down\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 460,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"created_at\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 463,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 449,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 57\n                          }, this), !cookies.get(\"store_id\") ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"store_name\");\n                              },\n                              children: [\"Store\", sortField === \"store_name\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 480,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"store_name\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 483,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 469,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 468,\n                            columnNumber: 85\n                          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"delivery_note_code\");\n                              },\n                              children: [\"DeliveryNote ID\", sortField === \"delivery_note_code\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 499,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"delivery_note_code\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 502,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 488,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 487,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"customer_name\");\n                              },\n                              children: [\"Customer\", sortField === \"customer_name\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 519,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"customer_name\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 522,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 508,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 507,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"quantity\");\n                              },\n                              children: [\"Quantity\", sortField === \"quantity\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 539,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"quantity\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 542,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 528,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 527,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 446,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                minWidth: \"100px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                                id: \"date\",\n                                value: dateValue,\n                                selected: selectedDate,\n                                className: \"form-control\",\n                                dateFormat: \"MMM dd yyyy\",\n                                isClearable: true,\n                                onChange: date => {\n                                  if (!date) {\n                                    setDateValue(\"\");\n                                    searchByDateField(\"date_str\", \"\");\n                                    return;\n                                  }\n\n                                  searchByDateField(\"date_str\", date);\n                                  selectedDate = date;\n                                  setSelectedDate(date);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 553,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                                style: {\n                                  color: \"blue\",\n                                  textDecoration: \"underline\",\n                                  cursor: \"pointer\"\n                                },\n                                onClick: e => setShowDateRange(!showDateRange),\n                                children: showDateRange ? \"Less..\" : \"More..\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 572,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 584,\n                                columnNumber: 61\n                              }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"text-left\",\n                                children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  id: \"date_from\",\n                                  value: fromDateValue,\n                                  selected: selectedFromDate,\n                                  className: \"form-control\",\n                                  dateFormat: \"MMM dd yyyy\",\n                                  isClearable: true,\n                                  onChange: date => {\n                                    if (!date) {\n                                      setFromDateValue(\"\");\n                                      searchByDateField(\"from_date\", \"\");\n                                      return;\n                                    }\n\n                                    searchByDateField(\"from_date\", date);\n                                    selectedFromDate = date;\n                                    setSelectedFromDate(date);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 589,\n                                  columnNumber: 69\n                                }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  id: \"date_to\",\n                                  value: toDateValue,\n                                  selected: selectedToDate,\n                                  isClearable: true,\n                                  className: \"form-control\",\n                                  dateFormat: \"MMM dd yyyy\",\n                                  onChange: date => {\n                                    if (!date) {\n                                      setToDateValue(\"\");\n                                      searchByDateField(\"to_date\", \"\");\n                                      return;\n                                    }\n\n                                    searchByDateField(\"to_date\", date);\n                                    selectedToDate = date;\n                                    setSelectedToDate(date);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 608,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 587,\n                                columnNumber: 65\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 552,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 551,\n                            columnNumber: 57\n                          }, this), !cookies.get(\"store_id\") ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"store_name\",\n                              onChange: e => searchByFieldValue(\"store_name\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 631,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 630,\n                            columnNumber: 85\n                          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"delivery_note_code\",\n                              onChange: e => searchByFieldValue(\"delivery_note_code\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 641,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 640,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"customer_name\",\n                              onChange: e => searchByFieldValue(\"customer_name\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 651,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 650,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"quantity\",\n                              onChange: e => searchByFieldValue(\"quantity\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 662,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 661,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 550,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        className: \"text-center\",\n                        children: historyList && historyList.map(history => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: format(new Date(history.created_at), \"MMM dd yyyy h:mma\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 678,\n                            columnNumber: 65\n                          }, this), !cookies.get(\"store_id\") ? /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.store_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 684,\n                            columnNumber: 93\n                          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textDecoration: \"underline\",\n                              color: \"blue\",\n                              cursor: \"pointer\"\n                            },\n                            onClick: () => {\n                              openDeliveryNoteDetailsView(history.delivery_note_id);\n                            },\n                            children: history.delivery_note_code\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 685,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textDecoration: \"underline\",\n                              color: \"blue\",\n                              cursor: \"pointer\"\n                            },\n                            onClick: () => {\n                              openCustomerDetailsView(history.customer_id);\n                            },\n                            children: history.customer_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 694,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: [history.quantity, history.unit ? history.unit : \"\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 703,\n                            columnNumber: 65\n                          }, this)]\n                        }, history.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 677,\n                          columnNumber: 61\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 674,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 41\n                  }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 729,\n                    columnNumber: 55\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"M6/igDKaRws2aTeOgMDAs0ROHbU=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = DeliveryNoteHistory;\nexport default DeliveryNoteHistory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DeliveryNoteHistory$forwardRef\");\n$RefreshReg$(_c2, \"DeliveryNoteHistory\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/product/delivery_note_history.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Cookies","Typeahead","format","DatePicker","Button","Spinner","Modal","Badge","ReactPaginate","NumberFormat","DeliveryNoteView","CustomerView","DeliveryNoteHistory","props","ref","open","model","product","setProduct","list","SetShow","cookies","selectedDate","Date","historyList","setHistoryList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","searchParams","setSearchParams","sortField","setSortField","sortProduct","setSortProduct","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","searchByDateField","d","console","log","Intl","DateTimeFormat","resolvedOptions","timeZone","setDateValue","setFromDateValue","setToDateValue","searchByMultipleValuesField","values","id","requestOptions","method","headers","Authorization","get","Select","store_id","queryParams","diff","getTimezoneOffset","parseFloat","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","pageCount","parseInt","total_count","length","totalDeliveryNoteQuantity","meta","total_quantity","setTotalDeliveryNoteQuantity","catch","sort","changePageSize","size","changePage","newPage","show","handleClose","totalProfit","setTotalProfit","totalVat","setTotalVat","totalLoss","setTotalLoss","DeliveryNoteDetailsViewRef","openDeliveryNoteDetailsView","current","CustomerDetailsViewRef","openCustomerDetailsView","name","name_in_arabic","bproduct","border","e","target","bproductColor","width","event","selected","overflowX","textDecoration","cursor","minWidth","dateValue","date","setSelectedDate","color","setShowDateRange","showDateRange","fromDateValue","selectedFromDate","setSelectedFromDate","toDateValue","selectedToDate","setSelectedToDate","history","created_at","store_name","delivery_note_id","delivery_note_code","customer_id","customer_name","quantity","unit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Modal, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport DeliveryNoteView from \"../delivery_note/view.js\";\nimport CustomerView from \"../customer/view.js\";\n\n//function ProductIndex(props) {\n\nconst DeliveryNoteHistory = forwardRef((props, ref) => {\n\n    useImperativeHandle(ref, () => ({\n        open(model) {\n            product = model;\n            setProduct({ ...product });\n            list();\n            SetShow(true);\n        },\n\n    }));\n\n    let [product, setProduct] = useState({});\n\n    const cookies = new Cookies();\n\n    const selectedDate = new Date();\n\n    //list\n    const [historyList, setHistoryList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortProduct, setSortProduct] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            searchParams[field] = \"\";\n            page = 1;\n            setPage(page);\n            list();\n            return;\n        }\n\n        if (value) {\n            let d = new Date(value);\n            value = format(d, \"MMM dd yyyy\");\n            console.log(\"value2:\", value);\n            console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)\n        } else {\n            value = \"\";\n        }\n\n\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            // setSelectedCreatedByProducts(values);\n        } else if (field === \"category_id\") {\n            //setSelectedProductCategories(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select = \"\";\n        /*\n        let Select =\n            \"select=id,store_id,store_name,customer_id,customer_name,order_id,order_code,quantity,\";\n            */\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n        searchParams[\"product_id\"] = product.id;\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/delivery-note/history?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortProduct +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setHistoryList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                totalDeliveryNoteQuantity = data.meta.total_quantity;\n                setTotalDeliveryNoteQuantity(totalDeliveryNoteQuantity);\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortProduct = sortProduct === \"-\" ? \"\" : \"-\";\n        setSortProduct(sortProduct);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    const [show, SetShow] = useState(false);\n\n    function handleClose() {\n        SetShow(false);\n    };\n\n    let [totalDeliveryNoteQuantity, setTotalDeliveryNoteQuantity] = useState(0.00);\n    let [totalProfit, setTotalProfit] = useState(0.00);\n    let [totalVat, setTotalVat] = useState(0.00);\n    let [totalLoss, setTotalLoss] = useState(0.00);\n\n    const DeliveryNoteDetailsViewRef = useRef();\n    function openDeliveryNoteDetailsView(id) {\n        DeliveryNoteDetailsViewRef.current.open(id);\n    }\n\n\n    const CustomerDetailsViewRef = useRef();\n    function openCustomerDetailsView(id) {\n        CustomerDetailsViewRef.current.open(id);\n    }\n\n\n\n    return (\n        <>\n            <DeliveryNoteView ref={DeliveryNoteDetailsViewRef} />\n            <CustomerView ref={CustomerDetailsViewRef} />\n            <Modal show={show} size=\"xl\" onHide={handleClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>DeliveryNote History of {product.name} {product.name_in_arabic ? \" / \" + product.name_in_arabic : \"\"}</Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container-fluid p-0\">\n                        <div className=\"row\">\n\n                            <div className=\"col\">\n                                <h1 className=\"text-end\">\n                                    Quantity: <Badge bg=\"secondary\">\n                                        <NumberFormat\n                                            value={totalDeliveryNoteQuantity}\n                                            displayType={\"text\"}\n                                            thousandSeparator={true}\n                                            suffix={\"\"}\n                                            renderText={(value, props) => value}\n                                        />\n                                    </Badge>\n                                </h1>\n                            </div>\n\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"card\">\n                                    {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            {totalItems === 0 && (\n                                                <div className=\"col\">\n                                                    <p className=\"text-start\">No DeliveryNote History to display</p>\n                                                </div>\n                                            )}\n                                        </div>\n                                        <div className=\"row\" style={{ bproduct: \"solid 0px\" }}>\n                                            <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        setIsRefreshInProcess(true);\n                                                        list();\n                                                    }}\n                                                    variant=\"primary\"\n                                                    disabled={isRefreshInProcess}\n                                                >\n                                                    {isRefreshInProcess ? (\n                                                        <Spinner\n                                                            as=\"span\"\n                                                            animation=\"bproduct\"\n                                                            size=\"sm\"\n                                                            role=\"status\"\n                                                            aria-hidden={true}\n                                                        />\n                                                    ) : (\n                                                        <i className=\"fa fa-refresh\"></i>\n                                                    )}\n                                                    <span className=\"visually-hidden\">Loading...</span>\n                                                </Button>\n                                            </div>\n                                            <div className=\"col text-center\">\n                                                {isListLoading && (\n                                                    <Spinner animation=\"grow\" variant=\"primary\" />\n                                                )}\n                                            </div>\n                                            <div className=\"col text-end\">\n                                                {totalItems > 0 && (\n                                                    <>\n                                                        <label className=\"form-label\">Size:&nbsp;</label>\n                                                        <select\n                                                            value={pageSize}\n                                                            onChange={(e) => {\n                                                                changePageSize(e.target.value);\n                                                            }}\n                                                            className=\"form-control pull-right\"\n                                                            style={{\n                                                                bproduct: \"solid 1px\",\n                                                                bproductColor: \"silver\",\n                                                                width: \"55px\",\n                                                            }}\n                                                        >\n                                                            <option value=\"5\">\n                                                                5\n                                                            </option>\n                                                            <option value=\"10\" >\n                                                                10\n                                                            </option>\n                                                            <option value=\"20\">20</option>\n                                                            <option value=\"40\">40</option>\n                                                            <option value=\"50\">50</option>\n                                                            <option value=\"100\">100</option>\n                                                            <option value=\"200\">200</option>\n                                                            <option value=\"300\">300</option>\n                                                            <option value=\"500\">500</option>\n                                                            <option value=\"1000\">1000</option>\n                                                            <option value=\"1500\">1500</option>\n                                                        </select>\n                                                    </>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <br />\n                                        <div className=\"row\">\n                                            <div className=\"col\" style={{ bproduct: \"solid 0px\" }}>\n                                                {totalPages ? <ReactPaginate\n                                                    breakLabel=\"...\"\n                                                    nextLabel=\"next >\"\n                                                    onPageChange={(event) => {\n                                                        changePage(event.selected + 1);\n                                                    }}\n                                                    pageRangeDisplayed={5}\n                                                    pageCount={totalPages}\n                                                    previousLabel=\"< previous\"\n                                                    renderOnZeroPageCount={null}\n                                                    className=\"pagination  flex-wrap\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    activeClassName=\"active\"\n                                                    previousClassName=\"page-item\"\n                                                    nextClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    forcePage={page - 1}\n                                                /> : \"\"}\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            {totalItems > 0 && (\n                                                <>\n                                                    <div className=\"col text-start\">\n                                                        <p className=\"text-start\">\n                                                            showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                            {totalItems}\n                                                        </p>\n                                                    </div>\n\n                                                    <div className=\"col text-end\">\n                                                        <p className=\"text-end\">\n                                                            page {page} of {totalPages}\n                                                        </p>\n                                                    </div>\n                                                </>\n                                            )}\n                                        </div>\n                                        <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                            <table className=\"table table-striped table-sm table-bordered\">\n                                                <thead>\n                                                    <tr className=\"text-center\">\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"created_at\");\n                                                                }}\n                                                            >\n                                                                Created At\n                                                                {sortField === \"created_at\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-down\"></i>\n                                                                ) : null}\n                                                                {sortField === \"created_at\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        {!cookies.get(\"store_id\") ? <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"store_name\");\n                                                                }}\n                                                            >\n                                                                Store\n                                                                {sortField === \"store_name\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"store_name\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th> : \"\"}\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"delivery_note_code\");\n                                                                }}\n                                                            >\n                                                                DeliveryNote ID\n                                                                {sortField === \"delivery_note_code\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"delivery_note_code\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"customer_name\");\n                                                                }}\n                                                            >\n                                                                Customer\n                                                                {sortField === \"customer_name\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"customer_name\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"quantity\");\n                                                                }}\n                                                            >\n                                                                Quantity\n                                                                {sortField === \"quantity\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"quantity\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n                                                    </tr>\n                                                </thead>\n\n                                                <thead>\n                                                    <tr className=\"text-center\">\n                                                        <th>\n                                                        <div style={{minWidth:\"100px\"}}>\n                                                            <DatePicker\n                                                                id=\"date\"\n                                                                value={dateValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                isClearable={true}  \n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setDateValue(\"\");\n                                                                        searchByDateField(\"date_str\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"date_str\", date);\n                                                                    selectedDate = date;\n                                                                    setSelectedDate(date);\n\n                                                                }}\n                                                            />\n                                                            <small\n                                                                style={{\n                                                                    color: \"blue\",\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={(e) =>\n                                                                    setShowDateRange(!showDateRange)\n                                                                }\n                                                            >\n                                                                {showDateRange ? \"Less..\" : \"More..\"}\n                                                            </small>\n                                                            <br />\n\n                                                            {showDateRange ? (\n                                                                <span className=\"text-left\">\n                                                                    From:{\" \"}\n                                                                    <DatePicker\n                                                                        id=\"date_from\"\n                                                                        value={fromDateValue}\n                                                                        selected={selectedFromDate}\n                                                                        className=\"form-control\"\n                                                                        dateFormat=\"MMM dd yyyy\"\n                                                                        isClearable={true}  \n                                                                        onChange={(date) => {\n                                                                            if (!date) {\n                                                                                setFromDateValue(\"\");\n                                                                                searchByDateField(\"from_date\", \"\");\n                                                                                return;\n                                                                            }\n                                                                            searchByDateField(\"from_date\", date);\n                                                                            selectedFromDate = date;\n                                                                            setSelectedFromDate(date);\n                                                                        }}\n                                                                    />\n                                                                    To:{\" \"}\n                                                                    <DatePicker\n                                                                        id=\"date_to\"\n                                                                        value={toDateValue}\n                                                                        selected={selectedToDate}\n                                                                        isClearable={true}  \n                                                                        className=\"form-control\"\n                                                                        dateFormat=\"MMM dd yyyy\"\n                                                                        onChange={(date) => {\n                                                                            if (!date) {\n                                                                                setToDateValue(\"\");\n                                                                                searchByDateField(\"to_date\", \"\");\n                                                                                return;\n                                                                            }\n                                                                            searchByDateField(\"to_date\", date);\n                                                                            selectedToDate = date;\n                                                                            setSelectedToDate(date);\n                                                                        }}\n                                                                    />\n                                                                </span>\n                                                            ) : null}\n                                                            </div>\n                                                        </th>\n                                                        {!cookies.get(\"store_id\") ? <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"store_name\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"store_name\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th> : \"\"}\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"delivery_note_code\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"delivery_note_code\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"customer_name\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"customer_name\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"quantity\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"quantity\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                    </tr>\n                                                </thead>\n\n                                                <tbody className=\"text-center\">\n                                                    {historyList &&\n                                                        historyList.map((history) => (\n                                                            <tr key={history.id}>\n                                                                <td>\n                                                                    {format(\n                                                                        new Date(history.created_at),\n                                                                        \"MMM dd yyyy h:mma\"\n                                                                    )}\n                                                                </td>\n                                                                {!cookies.get(\"store_id\") ? <td>{history.store_name}</td> : \"\"}\n                                                                <td style={{\n                                                                    textDecoration: \"underline\",\n                                                                    color: \"blue\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                    onClick={() => {\n                                                                        openDeliveryNoteDetailsView(history.delivery_note_id);\n                                                                    }}>{history.delivery_note_code}\n                                                                </td>\n                                                                <td style={{\n                                                                    textDecoration: \"underline\",\n                                                                    color: \"blue\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                    onClick={() => {\n                                                                        openCustomerDetailsView(history.customer_id);\n                                                                    }}>{history.customer_name}\n                                                                </td>\n                                                                <td>{history.quantity}{history.unit ? history.unit : \"\"}</td>\n\n                                                                {/* <td>   \n                                                        <button\n                                                            className=\"btn btn-outline-secondary dropdown-toggle\"\n                                                            type=\"button\"\n                                                            data-bs-toggle=\"dropdown\"\n                                                            aria-expanded=\"false\"\n                                                        ></button>\n                                                        <ul className=\"dropdown-menu\">\n                                                            <li>\n                                                                <a href=\"/\" className=\"dropdown-item\">\n                                                                    <i className=\"bi bi-download\"></i>\n                                                                    Download\n                                                                </a>\n                                                            </li>\n                                                        </ul>\n                                                      \n                                                                </td>\n                                                                 */}\n                                                            </tr>\n                                                        ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>);\n\n\n});\n\nexport default DeliveryNoteHistory;\n\n"]},"metadata":{},"sourceType":"module"}