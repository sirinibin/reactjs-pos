{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/sales_return/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport SalesReturnPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport SalesReturnView from \"./view.js\";\nimport ProductView from \"./../product/view.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SalesReturnCreate = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  var _vatPrice, _netTotal;\n\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(id, orderId) {\n      formData = {\n        order_id: orderId,\n        vat_percent: 15.0,\n        discount: 0.0,\n        discountValue: 0.0,\n        discount_percent: 0.0,\n        is_discount_percent: false,\n        //  date_str: format(new Date(), \"MMM dd yyyy\"),\n        date_str: new Date(),\n        signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n        status: \"received\",\n        payment_status: \"\",\n        payment_method: \"\",\n        price_type: \"retail\"\n      };\n      formData.payments_input = [{\n        \"date_str\": formData.date_str,\n        // \"amount\": \"\",\n        \"amount\": 0.00,\n        \"method\": \"\",\n        \"deleted\": false\n      }];\n      formData.cash_discount = 0.00;\n\n      if (cookies.get(\"user_id\")) {\n        selectedReceivedByUsers = [{\n          id: cookies.get(\"user_id\"),\n          name: cookies.get(\"user_name\")\n        }];\n        formData.received_by = cookies.get(\"user_id\");\n        setFormData({ ...formData\n        });\n        setSelectedReceivedByUsers([...selectedReceivedByUsers]);\n      }\n\n      setFormData({ ...formData\n      });\n\n      if (id) {\n        getSalesReturn(id);\n      }\n\n      if (orderId) {\n        reCalculate();\n        getOrder(orderId);\n      }\n\n      setShow(true);\n    }\n\n  }));\n\n  function getSalesReturn(id) {\n    console.log(\"inside getSalesReturn id:\", id);\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/sales-return/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      let salesReturn = data.result; // formData = purchaseReturn;\n\n      formData = {\n        id: salesReturn.id,\n        code: salesReturn.code,\n        order_code: salesReturn.order_code,\n        order_id: salesReturn.order_id,\n        store_id: salesReturn.store_id,\n        customer_id: salesReturn.customer_id,\n        date_str: salesReturn.date,\n        payments_input: salesReturn.payments,\n        // date: purchase.date,\n        vat_percent: salesReturn.vat_percent,\n        discount: salesReturn.discount,\n        discount_percent: salesReturn.discount_percent,\n        is_discount_percent: salesReturn.is_discount_percent,\n        payment_status: salesReturn.payment_status // shipping_handling_fees: salesReturn.shipping_handling_fees,\n\n      };\n\n      for (var i = 0; i < formData.payments_input.length; i++) {\n        formData.payments_input[i].date_str = formData.payments_input[i].date;\n      }\n\n      setFormData({ ...formData\n      });\n      console.log(\"formData1.status:\", formData.status);\n      console.log(\"purchaseReturn.products:\", salesReturn.products);\n      let selectedProductsTemp = salesReturn.products;\n      selectedProducts = [];\n\n      for (let i = 0; i < selectedProductsTemp.length; i++) {\n        if (selectedProductsTemp[i].quantity > 0) {\n          selectedProductsTemp[i].selected = true;\n        } else {\n          selectedProductsTemp[i].selected = false;\n        }\n\n        selectedProducts.push(selectedProductsTemp[i]); // selectedProductsTemp[i].purchase_unit_price = selectedProductsTemp[i].purchasereturn_unit_price;\n      }\n\n      setSelectedProducts([...selectedProducts]);\n      setFormData({ ...formData\n      });\n      reCalculate();\n      setFormData({ ...formData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function.\"); // event.preventDefault();\n\n        var form = event.target.form;\n\n        if (form && event.target) {\n          var index = Array.prototype.indexOf.call(form, event.target);\n\n          if (form && form.elements[index + 1]) {\n            if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n              form.elements[index].focus();\n            } else {\n              form.elements[index + 1].focus();\n            }\n\n            event.preventDefault();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  function getOrder(id) {\n    console.log(\"inside get SalesReturn\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/order/' + id, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get('content-type')) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      console.log(\"Response:\");\n      console.log(data);\n      let order = data.result;\n      let selectedProductsTemp = order.products;\n      selectedProducts = [];\n\n      for (let i = 0; i < selectedProductsTemp.length; i++) {\n        selectedProductsTemp[i].selected = false;\n        let soldQty = selectedProductsTemp[i].quantity - selectedProductsTemp[i].quantity_returned;\n        selectedProductsTemp[i].quantity = soldQty;\n\n        if (soldQty > 0) {\n          selectedProducts.push(selectedProductsTemp[i]);\n        }\n      } // selectedProducts = selectedProductsTemp\n\n\n      console.log(\"selectedProducts:\", selectedProducts);\n      setSelectedProducts([...selectedProducts]); //formData = order;\n\n      console.log(\"order.id:\", order.id);\n      formData.id = \"\";\n      formData.products = order.products; // formData.order_id = order.id;\n      //console.log(\"formData.order_id:\", formData.order_id);\n\n      formData.order_code = order.code;\n      formData.store_id = order.store_id;\n      /*\n      formData.received_by = order.delivered_by;\n      formData.received_by_signature_id = order.delivered_by_signature_id;\n      */\n\n      formData.customer_id = order.customer_id; // formData.is_discount_percent = order.is_discount_percent;\n\n      formData.is_discount_percent = true;\n      console.log(\"order.discount_percent:\", order.discount_percent);\n      formData.discount_percent = order.discount_percent; // formData.discount = (order.discount - order.return_discount);\n      // formData.discount_percent = order.discount_percent;\n\n      /*\n      if (formData.is_discount_percent) {\n          formData.discountValue = formData.discount_percent;\n      } else {\n          formData.discountValue = formData.discount;\n      }\n      */\n      // setFormData({ ...formData });\n\n      console.log(\"formData:\", formData);\n      selectedStores = [{\n        id: order.store_id,\n        name: order.store_name\n      }];\n      setSelectedStores(selectedStores);\n      console.log(\"selectedStores:\", selectedStores);\n      setFormData({ ...formData\n      });\n      reCalculate();\n      setFormData({ ...formData\n      });\n    }).catch(error => {\n      setProcessing(false);\n      setErrors(error);\n    });\n  }\n  /*\n  let [barcode, setBarcode] = useState(\"\");\n  let [barcodeEnded, setBarcodeEnded] = useState(false);\n  const keyPress = useCallback(\n      (e) => {\n          console.log(\"e.key:\", e.key);\n           if (!barcodeEnded && e.key != \"Enter\") {\n              console.log()\n              barcode += e.key;\n              setBarcode(barcode);\n          }\n           if (e.key === \"Enter\") {\n              document.removeEventListener(\"keydown\", keyPress);\n              console.log(\"barcode:\", barcode);\n              barcodeEnded = true;\n              setBarcodeEnded(true);\n          }\n       },\n      []\n  );\n   function addListener() {\n      //barcode = \"\";\n      //setBarcode(barcode);\n      document.addEventListener(\"keydown\", keyPress);\n      console.log(\"Listener added, barcode:\", barcode);\n  }\n  */\n\n  /*\n  useEffect(() => {\n      document.addEventListener(\"keydown\", keyPress);\n      return () => document.removeEventListener(\"keydown\", keyPress);\n  }, [keyPress]);\n  */\n\n  /*\n  useEffect(() => {\n      document.addEventListener('keydown', handleKeyDown);\n      return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  let [barcode, setBarcode] = useState(\"\");\n  function handleKeyDown(event) {\n      console.log(\"event.key:\", event.key);\n       /*\n      if (event.key == \"Enter\") {\n          barcode = \"\";\n          setBarcode(barcode);\n      }\n      else if (event.key == \"Shift\") {\n          console.log(\"barcode:\", barcode);\n      } else {\n          barcode += event.key;\n          setBarcode(barcode);\n      }\n      */\n\n  /*\n  if (event.keyCode === KEY_ESCAPE) {\n      /* do your action here */\n  // }  \n  // }\n\n\n  const selectedDate = new Date(); //const history = useHistory();\n\n  let [errors, setErrors] = useState({});\n  const [isProcessing, setProcessing] = useState(false);\n  const cookies = new Cookies(); //fields\n\n  let [formData, setFormData] = useState({\n    order_id: \"\",\n    vat_percent: 15.0,\n    discount: 0.0,\n    date_str: format(new Date(), \"MMM dd yyyy\"),\n    signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n    status: \"received\",\n    payment_status: \"\",\n    payment_method: \"\",\n    price_type: \"retail\"\n  });\n  let [selectedStores, setSelectedStores] = useState([]); //Product Auto Suggestion\n\n  let [selectedProducts, setSelectedProducts] = useState([]); //Received By Auto Suggestion\n\n  const [receivedByUserOptions, setReceivedByUserOptions] = useState([]);\n  let [selectedReceivedByUsers, setSelectedReceivedByUsers] = useState([]);\n  const [isReceivedByUsersLoading, setIsReceivedByUsersLoading] = useState(false); //Received By Signature Auto Suggestion\n\n  const [receivedBySignatureOptions, setReceivedBySignatureOptions] = useState([]);\n  const [selectedReceivedBySignatures, setSelectedReceivedBySignatures] = useState([]);\n  const [isReceivedBySignaturesLoading, setIsReceivedBySignaturesLoading] = useState(false);\n  const [show, setShow] = useState(false);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  useEffect(() => {\n    let at = cookies.get(\"access_token\");\n\n    if (!at) {\n      // history.push(\"/dashboard/salesreturns\");\n      window.location = \"/\";\n    }\n  });\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setReceivedByUserOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsReceivedByUsersLoading(true);\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setReceivedByUserOptions(data.result);\n    setIsReceivedByUsersLoading(false);\n  }\n\n  async function suggestSignatures(searchTerm) {\n    console.log(\"Inside handle suggestSignatures\");\n    setReceivedBySignatureOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    setIsReceivedBySignaturesLoading(true);\n    let result = await fetch(\"/v1/signature?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setReceivedBySignatureOptions(data.result);\n    setIsReceivedBySignaturesLoading(false);\n  }\n\n  function handleCreate(event) {\n    event.preventDefault();\n    console.log(\"Inside handle Create\");\n    console.log(\"selectedProducts:\", selectedProducts);\n    console.log(\"formData.order_id:\", formData.order_id);\n    formData.products = [];\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (!selectedProducts[i].selected) {\n        continue;\n      }\n\n      formData.products.push({\n        product_id: selectedProducts[i].product_id,\n        quantity: parseFloat(selectedProducts[i].quantity),\n        unit_price: parseFloat(selectedProducts[i].unit_price),\n        unit: selectedProducts[i].unit\n      });\n    }\n\n    formData.discount = parseFloat(formData.discount);\n    formData.discount_percent = parseFloat(formData.discount_percent);\n    formData.vat_percent = parseFloat(formData.vat_percent);\n    console.log(\"formData.discount:\", formData.discount);\n    let haveErrors = false;\n    errors[\"products\"] = \"\";\n    setErrors({ ...errors\n    });\n\n    if (formData.products.length === 0) {\n      errors[\"products\"] = \"No products added\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (!formData.discount && formData.discount !== 0) {\n      errors[\"discount\"] = \"Invalid discount\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (!formData.discount_percent && formData.discount_percent !== 0) {\n      errors[\"discount_percent\"] = \"Invalid discount percent\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (parseFloat(formData.discount_percent) > 100) {\n      errors[\"discount_percent\"] = \"Discount percent cannot be > 100\";\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n    }\n\n    if (!validatePaymentAmounts()) {\n      console.log(\"Errors on payments\");\n      haveErrors = true;\n    }\n\n    if (haveErrors) {\n      console.log(\"Errors: \", errors);\n      return;\n    }\n    /*\n    if (!formData.discountValue && formData.discountValue !== 0) {\n        errors[\"discount\"] = \"Invalid Discount\";\n        setErrors({ ...errors });\n        return;\n    }\n    */\n\n\n    formData.net_total = parseFloat(netTotal);\n    let endPoint = \"/v1/sales-return\";\n    let method = \"POST\";\n\n    if (formData.id) {\n      endPoint = \"/v1/sales-return/\" + formData.id;\n      method = \"PUT\";\n    }\n\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(\"formData:\", formData);\n    setProcessing(true);\n    fetch(endPoint, requestOptions).then(async response => {\n      var _response$headers$get3;\n\n      const isJson = (_response$headers$get3 = response.headers.get(\"content-type\")) === null || _response$headers$get3 === void 0 ? void 0 : _response$headers$get3.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.errors; //const error = data.errors\n\n        return Promise.reject(error);\n      }\n\n      setErrors({});\n      setProcessing(false);\n      console.log(\"Response:\");\n      console.log(data);\n      props.showToastMessage(\"SalesReturn Created Successfully!\", \"success\");\n\n      if (props.refreshList) {\n        props.refreshList();\n      }\n\n      handleClose();\n      openDetailsView(data.result.id);\n    }).catch(error => {\n      setProcessing(false);\n      console.log(\"Inside catch\");\n      console.log(error);\n      setErrors({ ...error\n      });\n      console.error(\"There was an error!\", error);\n      props.showToastMessage(\"Error Creating SalesReturn!\", \"danger\");\n    });\n  }\n\n  let [totalPrice, setTotalPrice] = useState(0.0);\n\n  function findTotalPrice() {\n    totalPrice = 0.00;\n\n    for (var i = 0; i < selectedProducts.length; i++) {\n      if (!selectedProducts[i].selected) {\n        continue;\n      }\n\n      totalPrice += parseFloat(selectedProducts[i].unit_price) * parseFloat(selectedProducts[i].quantity);\n    }\n\n    totalPrice = totalPrice.toFixed(2);\n    setTotalPrice(totalPrice);\n  }\n\n  let [vatPrice, setVatPrice] = useState(0.00);\n  /*\n  function findVatPrice() {\n      vatPrice = ((parseFloat(formData.vat_percent) / 100) * parseFloat(totalPrice - formData.discount)).toFixed(2);;\n      console.log(\"vatPrice:\", vatPrice);\n      setVatPrice(vatPrice);\n  }*/\n\n  function findVatPrice() {\n    vatPrice = 0.00;\n\n    if (totalPrice > 0) {\n      //+ parseFloat(formData.shipping_handling_fees)\n      vatPrice = parseFloat(parseFloat(formData.vat_percent) / 100) * (parseFloat(totalPrice) - parseFloat(formData.discount));\n      console.log(\"vatPrice:\", vatPrice);\n    }\n\n    setVatPrice(vatPrice);\n  }\n\n  let [netTotal, setNetTotal] = useState(0.00);\n\n  function findNetTotal() {\n    if (totalPrice > 0) {\n      netTotal = parseFloat(totalPrice) - parseFloat(formData.discount) + parseFloat(vatPrice);\n      setNetTotal(netTotal);\n    }\n\n    netTotal = Math.round(netTotal * 100) / 100;\n    console.log(\"after rounding netTotal:\", netTotal);\n    setNetTotal(netTotal);\n\n    if (!formData.id) {\n      formData.payments_input = [{\n        \"date_str\": formData.date_str,\n        \"amount\": 0.00,\n        \"method\": \"\",\n        \"deleted\": false\n      }];\n      formData.payments_input[0].amount = parseFloat(netTotal);\n    }\n\n    setFormData({ ...formData\n    });\n    validatePaymentAmounts();\n  }\n\n  let [discountPercent, setDiscountPercent] = useState(0.00);\n  /*\n  function findDiscountPercent() {\n      if (formData.discount >= 0 && totalPrice > 0) {\n          discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n          setDiscountPercent(discountPercent);\n          formData.discount_percent = discountPercent;\n          setFormData({ ...formData });\n      }\n  }\n  */\n\n  /*\n  function findDiscountPercent() {\n      if (!formData.discountValue) {\n          formData.discount = 0.00;\n          formData.discount_percent = 0.00;\n          setFormData({ ...formData });\n          return;\n      }\n       formData.discount = formData.discountValue;\n       if (formData.discount > 0 && totalPrice > 0) {\n          discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100).toFixed(2);\n          setDiscountPercent(discountPercent);\n          formData.discount_percent = discountPercent;\n          setFormData({ ...formData });\n      }\n   }\n  */\n\n  /*\n  function findDiscount() {\n      if (!formData.discountValue) {\n          formData.discount = 0.00;\n          formData.discount_percent = 0.00;\n          setFormData({ ...formData });\n          return;\n      }\n       formData.discount_percent = formData.discountValue;\n       if (formData.discount_percent > 0 && totalPrice > 0) {\n          formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)).toFixed(2);\n      }\n      setFormData({ ...formData });\n  }\n  */\n\n  function findDiscount() {\n    if (formData.discount_percent >= 0 && totalPrice > 0) {\n      formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)); //formData.discount = Math.round(formData.discount * 100) / 100;\n\n      formData.discount = parseFloat(formData.discount.toFixed(2));\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function findDiscountPercent() {\n    if (formData.discount >= 0 && totalPrice > 0) {\n      discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n      setDiscountPercent(discountPercent);\n      formData.discount_percent = discountPercent; //formData.discount_percent = Math.round(formData.discount_percent * 100) / 100;\n\n      setFormData({ ...formData\n      });\n    }\n  }\n\n  function reCalculate() {\n    findTotalPrice(); //findDiscount();\n    //findDiscountPercent();\n\n    if (formData.is_discount_percent) {\n      findDiscount();\n    } else {\n      findDiscountPercent();\n    }\n\n    findVatPrice();\n    findNetTotal();\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  }\n\n  const StoreCreateFormRef = useRef();\n  const CustomerCreateFormRef = useRef();\n  const ProductCreateFormRef = useRef();\n  const UserCreateFormRef = useRef();\n\n  function openUserCreateForm() {\n    UserCreateFormRef.current.open();\n  }\n\n  const SignatureCreateFormRef = useRef();\n\n  function openSignatureCreateForm() {\n    SignatureCreateFormRef.current.open();\n  }\n\n  const ProductDetailsViewRef = useRef();\n\n  function openProductDetailsView(id) {\n    ProductDetailsViewRef.current.open(id);\n  }\n\n  function getTotalPayments() {\n    let totalPayment = 0.00;\n\n    for (var i = 0; i < ((_formData$payments_in = formData.payments_input) === null || _formData$payments_in === void 0 ? void 0 : _formData$payments_in.length); i++) {\n      var _formData$payments_in;\n\n      if (formData.payments_input[i].amount && !formData.payments_input[i].deleted) {\n        totalPayment += formData.payments_input[i].amount;\n      }\n    }\n\n    return totalPayment;\n  }\n\n  function validatePaymentAmounts() {\n    let haveErrors = false;\n\n    if (!netTotal) {\n      return true;\n    }\n\n    if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n      errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toFixed(2).toString();\n      setErrors({ ...errors\n      });\n      haveErrors = true;\n      return false;\n    }\n\n    let totalPayment = getTotalPayments(); // errors[\"payment_date\"] = [];\n    //errors[\"payment_method\"] = [];\n    //errors[\"payment_amount\"] = [];\n\n    for (var key = 0; key < formData.payments_input.length; key++) {\n      errors[\"payment_amount_\" + key] = \"\";\n      errors[\"payment_date_\" + key] = \"\";\n      errors[\"payment_method_\" + key] = \"\";\n      setErrors({ ...errors\n      });\n\n      if (!formData.payments_input[key].amount) {\n        errors[\"payment_amount_\" + key] = \"Payment amount is required\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      } else if (formData.payments_input[key].amount === 0) {\n        errors[\"payment_amount_\" + key] = \"Amount should be greater than zero\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      }\n\n      if (!formData.payments_input[key].date_str) {\n        errors[\"payment_date_\" + key] = \"Payment date is required\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      } else if (new Date(formData.payments_input[key].date_str) < new Date(formData.date_str)) {\n        errors[\"payment_date_\" + key] = \"Payment date time should be greater than or equal to order date time\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      }\n\n      if (!formData.payments_input[key].method) {\n        errors[\"payment_method_\" + key] = \"Payment method is required\";\n        setErrors({ ...errors\n        });\n        haveErrors = true;\n      }\n\n      if ((formData.payments_input[key].amount || formData.payments_input[key].amount === 0) && !formData.payments_input[key].deleted) {\n        let maxAllowedAmount = netTotal - formData.cash_discount - (totalPayment - formData.payments_input[key].amount);\n\n        if (maxAllowedAmount < 0) {\n          maxAllowedAmount = 0;\n        }\n\n        if (maxAllowedAmount === 0) {\n          errors[\"payment_amount_\" + key] = \"Total amount should not exceed \" + (netTotal - formData.cash_discount).toFixed(2).toString() + \", Please delete this payment\";\n          setErrors({ ...errors\n          });\n          haveErrors = true;\n        } else if (formData.payments_input[key].amount > maxAllowedAmount) {\n          errors[\"payment_amount_\" + key] = \"Amount should not be greater than \" + maxAllowedAmount.toFixed(2).toString();\n          setErrors({ ...errors\n          });\n          haveErrors = true;\n        }\n      }\n    }\n\n    if (haveErrors) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function addNewPayment() {\n    let date = new Date();\n\n    if (!formData.id) {\n      date = formData.date_str;\n    }\n\n    formData.payments_input.push({\n      \"date_str\": date,\n      // \"amount\": \"\",\n      \"amount\": 0.00,\n      \"method\": \"\",\n      \"deleted\": false\n    });\n    setFormData({ ...formData\n    });\n    validatePaymentAmounts(); //validatePaymentAmounts((formData.payments_input.filter(payment => !payment.deleted).length - 1));\n  }\n\n  function removePayment(key) {\n    formData.payments_input.splice(key, 1); //formData.payments_input[key][\"deleted\"] = true;\n\n    setFormData({ ...formData\n    });\n    validatePaymentAmounts();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SalesReturnView, {\n      ref: DetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductView, {\n      ref: ProductDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StoreCreate, {\n      ref: StoreCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerCreate, {\n      ref: CustomerCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductCreate, {\n      ref: ProductCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserCreate, {\n      ref: UserCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SignatureCreate, {\n      ref: SignatureCreateFormRef,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      fullscreen: true,\n      onHide: handleClose,\n      animation: false,\n      backdrop: \"static\",\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: formData.id ? \"Update Sales Return #\" + formData.code + \" for sale #\" + formData.order_code : \"Create Sales Return\" + \" for sale #\" + formData.order_code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 940,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [/*#__PURE__*/_jsxDEV(SalesReturnPreview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCreate,\n            children: [isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 33\n            }, this) + \" Creating...\" : \"\", formData.id ? \"Update\" : \"Create\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [Object.keys(errors).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errors && Object.keys(errors).map((key, index) => {\n              return errors[key] ? /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 59\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              id: \"date_str\",\n              selected: formData.date_str ? new Date(formData.date_str) : null,\n              value: formData.date_str ? format(new Date(formData.date_str), \"MMMM d, yyyy h:mm aa\") : null,\n              className: \"form-control\",\n              dateFormat: \"MMMM d, yyyy h:mm aa\",\n              showTimeSelect: true,\n              timeIntervals: \"1\",\n              onChange: value => {\n                console.log(\"Value\", value);\n                formData.date_str = value; // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n\n                setFormData({ ...formData\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 25\n          }, this), errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-x-lg\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 33\n            }, this), errors.date_str]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 29\n          }, this), formData.date_str && !errors.date_str && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"green\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-check-lg\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 33\n            }, this), \"Looks good!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 21\n        }, this), selectedProducts.length === 0 && \"Already Returned All sold products\", selectedProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3 needs-validation\",\n          onSubmit: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            style: {\n              overflowX: \"auto\",\n              overflowY: \"scroll\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1022,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"SI No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Part No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1025,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1026,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1027,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: selectedProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: selectedProducts[index].selected,\n                      onChange: e => {\n                        console.log(\"e.target.value:\", e.target.value);\n                        selectedProducts[index].selected = !selectedProducts[index].selected;\n                        setSelectedProducts([...selectedProducts]);\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1035,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1042,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: product.part_number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1043,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textDecoration: \"underline\",\n                      color: \"blue\",\n                      cursor: \"pointer\"\n                    },\n                    onClick: () => {\n                      openProductDetailsView(product.product_id);\n                    },\n                    children: product.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"155px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.quantity,\n                        className: \"form-control\",\n                        placeholder: \"Quantity\",\n                        onChange: e => {\n                          errors[\"quantity_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                            selectedProducts[index].quantity = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (parseFloat(e.target.value) === 0) {\n                            errors[\"quantity_\" + index] = \"Quantity should be >0\";\n                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          product.quantity = parseFloat(e.target.value);\n                          selectedProducts[index].quantity = parseFloat(e.target.value);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1056,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1086,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 49\n                    }, this), errors[\"quantity_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1090,\n                        columnNumber: 57\n                      }, this), errors[\"quantity_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1089,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1053,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: \"180px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"input-group mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: product.unit_price,\n                        className: \"form-control\",\n                        placeholder: \"Unit Price\",\n                        onChange: e => {\n                          errors[\"unit_price_\" + index] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                            selectedProducts[index].unit_price = e.target.value;\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          if (e.target.value === 0) {\n                            errors[\"unit_price_\" + index] = \"Invalid Unit Price should be > 0\";\n                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                            setSelectedProducts([...selectedProducts]);\n                            setErrors({ ...errors\n                            });\n                            console.log(\"errors:\", errors);\n                            return;\n                          }\n\n                          selectedProducts[index].unit_price = parseFloat(e.target.value);\n                          console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                          setSelectedProducts([...selectedProducts]);\n                          reCalculate();\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1098,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        class: \"input-group-text\",\n                        id: \"basic-addon2\",\n                        children: \"SAR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1128,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1097,\n                      columnNumber: 49\n                    }, this), errors[\"unit_price_\" + index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-x-lg\",\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1132,\n                        columnNumber: 57\n                      }, this), errors[\"unit_price_\" + index]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1131,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1096,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (product.unit_price * product.quantity).toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1139,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1138,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            style: {\n              overflowX: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped table-sm table-bordered\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1156,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-center\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1157,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1160,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    style: {\n                      width: \"180px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: totalPrice,\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1162,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1161,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"6\",\n                    className: \"text-end\",\n                    children: [\"Discount  \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"50px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount_percent,\n                      onChange: e => {\n                        formData.is_discount_percent = true;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount_percent = parseFloat(e.target.value);\n                          formData.discount = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount_percent = \"\";\n                          formData.discount = 0.00;\n                          errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                          setFormData({ ...formData\n                          });\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount_percent\"] = \"\";\n                        errors[\"discount\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount_percent = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1174,\n                      columnNumber: 55\n                    }, this), \"%\", errors.discount_percent && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount_percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1213,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1173,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      style: {\n                        width: \"150px\"\n                      },\n                      className: \"text-start\",\n                      value: formData.discount,\n                      onChange: e => {\n                        formData.is_discount_percent = false;\n\n                        if (parseFloat(e.target.value) === 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (parseFloat(e.target.value) < 0) {\n                          formData.discount = parseFloat(e.target.value);\n                          formData.discount_percent = 0.00;\n                          setFormData({ ...formData\n                          });\n                          errors[\"discount\"] = \"Discount should be >= 0\";\n                          setErrors({ ...errors\n                          });\n                          reCalculate();\n                          return;\n                        }\n\n                        if (!e.target.value) {\n                          formData.discount = \"\";\n                          formData.discount_percent = 0.00;\n                          errors[\"discount\"] = \"Invalid Discount\";\n                          setFormData({ ...formData\n                          });\n                          reCalculate();\n                          setErrors({ ...errors\n                          });\n                          return;\n                        }\n\n                        errors[\"discount\"] = \"\";\n                        errors[\"discount_percent\"] = \"\";\n                        setErrors({ ...errors\n                        });\n                        formData.discount = parseFloat(e.target.value);\n                        setFormData({ ...formData\n                        });\n                        reCalculate();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1222,\n                      columnNumber: 45\n                    }, this), \" SAR\", errors.discount && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: \"red\"\n                      },\n                      children: errors.discount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1263,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    colSpan: \"5\",\n                    className: \"text-end\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1280,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: [\" VAT: \", formData.vat_percent + \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1283,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_vatPrice = vatPrice) === null || _vatPrice === void 0 ? void 0 : _vatPrice.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1285,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1279,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: \"Net Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1296,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-end\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: (_netTotal = netTotal) === null || _netTotal === void 0 ? void 0 : _netTotal.toFixed(2),\n                      displayType: \"text\",\n                      thousandSeparator: true,\n                      suffix: \" SAR\",\n                      renderText: (value, props) => value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1298,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1297,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1294,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Cash discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1387,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: formData.cash_discount,\n              className: \"form-control \",\n              onChange: e => {\n                errors[\"cash_discount\"] = \"\";\n                setErrors({ ...errors\n                });\n\n                if (!e.target.value) {\n                  formData.cash_discount = e.target.value;\n                  setFormData({ ...formData\n                  });\n                  validatePaymentAmounts();\n                  return;\n                }\n\n                formData.cash_discount = parseFloat(e.target.value);\n\n                if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n                  errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toString();\n                  setErrors({ ...errors\n                  });\n                  return;\n                }\n\n                setFormData({ ...formData\n                });\n                validatePaymentAmounts();\n                console.log(formData);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 29\n            }, this), errors.cash_discount && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: \"red\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-x-lg\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1412,\n                columnNumber: 37\n              }, this), errors.cash_discount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1411,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Payments Received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"table-responsive\",\n              style: {\n                maxWidth: \"900px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                style: {\n                  alignContent: \"right\"\n                },\n                onClick: addNewPayment,\n                children: \"Create new payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1422,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                class: \"table table-striped table-sm table-bordered\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1427,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1430,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Payment method\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1433,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1436,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1426,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [formData.payments_input && formData.payments_input.filter(payment => !payment.deleted).map((payment, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        minWidth: \"220px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                        id: \"date_str\",\n                        selected: formData.payments_input[key].date_str ? new Date(formData.payments_input[key].date_str) : null,\n                        value: formData.payments_input[key].date_str ? format(new Date(formData.payments_input[key].date_str), \"MMMM d, yyyy h:mm aa\") : null,\n                        className: \"form-control\",\n                        dateFormat: \"MMMM d, yyyy h:mm aa\",\n                        showTimeSelect: true,\n                        timeIntervals: \"1\",\n                        onChange: value => {\n                          console.log(\"Value\", value);\n                          formData.payments_input[key].date_str = value;\n                          let paymentDate = new Date(formData.payments_input[key].date_str);\n                          let orderDate = new Date(formData.date_str);\n                          let paymentYear = paymentDate.getFullYear();\n                          let paymentMonth = paymentDate.getMonth();\n                          let paymentDay = paymentDate.getDate();\n                          let paymentMinutes = paymentDate.getMinutes();\n                          var paymentHours = paymentDate.getHours();\n                          let orderYear = orderDate.getFullYear();\n                          let orderMonth = orderDate.getMonth();\n                          let orderDay = orderDate.getDate();\n                          let orderMinutes = orderDate.getMinutes();\n                          var orderHours = orderDate.getHours();\n\n                          if (paymentYear == orderYear && paymentMonth == orderMonth && paymentDay == orderDay && paymentHours == orderHours && paymentMinutes == orderMinutes) {\n                            formData.date_str = formData.payments_input[key].date_str;\n                          }\n\n                          setFormData({ ...formData\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1446,\n                        columnNumber: 57\n                      }, this), errors[\"payment_date_\" + key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1489,\n                          columnNumber: 65\n                        }, this), errors[\"payment_date_\" + key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1488,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1444,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"300px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        value: formData.payments_input[key].amount,\n                        className: \"form-control \",\n                        onChange: e => {\n                          errors[\"payment_amount_\" + key] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            formData.payments_input[key].amount = e.target.value;\n                            setFormData({ ...formData\n                            });\n                            validatePaymentAmounts();\n                            return;\n                          }\n\n                          formData.payments_input[key].amount = parseFloat(e.target.value);\n                          validatePaymentAmounts();\n                          setFormData({ ...formData\n                          });\n                          console.log(formData);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1495,\n                        columnNumber: 57\n                      }, this), errors[\"payment_amount_\" + key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1516,\n                          columnNumber: 65\n                        }, this), errors[\"payment_amount_\" + key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1515,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1494,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                        value: formData.payments_input[key].method,\n                        className: \"form-control \",\n                        onChange: e => {\n                          // errors[\"payment_method\"] = [];\n                          errors[\"payment_method_\" + key] = \"\";\n                          setErrors({ ...errors\n                          });\n\n                          if (!e.target.value) {\n                            errors[\"payment_method_\" + key] = \"Payment method is required\";\n                            setErrors({ ...errors\n                            });\n                            formData.payments_input[key].method = \"\";\n                            setFormData({ ...formData\n                            });\n                            return;\n                          } // errors[\"payment_method\"] = \"\";\n                          //setErrors({ ...errors });\n\n\n                          formData.payments_input[key].method = e.target.value;\n                          setFormData({ ...formData\n                          });\n                          console.log(formData);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Select\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1545,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"cash\",\n                          children: \"Cash\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1546,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"bank_account\",\n                          children: \"Bank Account / Debit / Credit Card\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1547,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"customer_account\",\n                          children: \"Customer Account\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1548,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1522,\n                        columnNumber: 57\n                      }, this), errors[\"payment_method_\" + key] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: \"red\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"bi bi-x-lg\",\n                          children: \" \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1552,\n                          columnNumber: 65\n                        }, this), errors[\"payment_method_\" + key]]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1551,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1521,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: \"200px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"danger\",\n                        onClick: event => {\n                          removePayment(key);\n                        },\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1558,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1557,\n                      columnNumber: 53\n                    }, this)]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1443,\n                    columnNumber: 49\n                  }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      class: \"text-end\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Total\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1569,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1568,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: getTotalPayments()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1571,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1571,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: 2\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1572,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1567,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1440,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1425,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1580,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleCreate,\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"bsalesreturn\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1585,\n                columnNumber: 37\n              }, this) + \" Creating...\" : formData.id ? \"Update\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1583,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1579,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"6zsDjdoo9h38on5e0EyqnX5wVl8=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = SalesReturnCreate;\nexport default SalesReturnCreate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SalesReturnCreate$forwardRef\");\n$RefreshReg$(_c2, \"SalesReturnCreate\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/sales_return/create.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","SalesReturnPreview","Modal","Button","Form","StoreCreate","CustomerCreate","ProductCreate","UserCreate","SignatureCreate","Cookies","Typeahead","NumberFormat","DatePicker","format","Spinner","SalesReturnView","ProductView","SalesReturnCreate","props","ref","open","id","orderId","formData","order_id","vat_percent","discount","discountValue","discount_percent","is_discount_percent","date_str","Date","signature_date_str","status","payment_status","payment_method","price_type","payments_input","cash_discount","cookies","get","selectedReceivedByUsers","name","received_by","setFormData","setSelectedReceivedByUsers","getSalesReturn","reCalculate","getOrder","setShow","console","log","requestOptions","method","headers","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","setErrors","salesReturn","result","code","order_code","store_id","customer_id","date","payments","i","length","products","selectedProductsTemp","selectedProducts","quantity","selected","push","setSelectedProducts","catch","setProcessing","listener","event","form","target","index","Array","prototype","indexOf","call","elements","getAttribute","focus","preventDefault","document","addEventListener","removeEventListener","order","soldQty","quantity_returned","selectedStores","store_name","setSelectedStores","selectedDate","isProcessing","receivedByUserOptions","setReceivedByUserOptions","isReceivedByUsersLoading","setIsReceivedByUsersLoading","receivedBySignatureOptions","setReceivedBySignatureOptions","selectedReceivedBySignatures","setSelectedReceivedBySignatures","isReceivedBySignaturesLoading","setIsReceivedBySignaturesLoading","show","handleClose","at","window","location","ObjectToSearchQueryParams","object","Object","keys","map","key","join","suggestUsers","searchTerm","params","queryString","Authorization","Select","suggestSignatures","handleCreate","product_id","parseFloat","unit_price","unit","haveErrors","validatePaymentAmounts","net_total","netTotal","endPoint","body","JSON","stringify","showToastMessage","refreshList","openDetailsView","totalPrice","setTotalPrice","findTotalPrice","toFixed","vatPrice","setVatPrice","findVatPrice","setNetTotal","findNetTotal","Math","round","amount","discountPercent","setDiscountPercent","findDiscount","findDiscountPercent","DetailsViewRef","current","StoreCreateFormRef","CustomerCreateFormRef","ProductCreateFormRef","UserCreateFormRef","openUserCreateForm","SignatureCreateFormRef","openSignatureCreateForm","ProductDetailsViewRef","openProductDetailsView","getTotalPayments","totalPayment","deleted","toString","maxAllowedAmount","addNewPayment","removePayment","splice","color","value","overflowX","overflowY","product","e","part_number","textDecoration","cursor","width","maxWidth","alignContent","filter","payment","minWidth","paymentDate","orderDate","paymentYear","getFullYear","paymentMonth","getMonth","paymentDay","getDate","paymentMinutes","getMinutes","paymentHours","getHours","orderYear","orderMonth","orderDay","orderMinutes","orderHours"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport SalesReturnPreview from \"./preview.js\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport StoreCreate from \"../store/create.js\";\nimport CustomerCreate from \"./../customer/create.js\";\nimport ProductCreate from \"./../product/create.js\";\nimport UserCreate from \"./../user/create.js\";\nimport SignatureCreate from \"./../signature/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport { Spinner } from \"react-bootstrap\";\nimport SalesReturnView from \"./view.js\";\nimport ProductView from \"./../product/view.js\";\n\nconst SalesReturnCreate = forwardRef((props, ref) => {\n\n    useImperativeHandle(ref, () => ({\n        open(id, orderId) {\n\n            formData = {\n                order_id: orderId,\n                vat_percent: 15.0,\n                discount: 0.0,\n                discountValue: 0.0,\n                discount_percent: 0.0,\n                is_discount_percent: false,\n                //  date_str: format(new Date(), \"MMM dd yyyy\"),\n                date_str: new Date(),\n                signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n                status: \"received\",\n                payment_status: \"\",\n                payment_method: \"\",\n                price_type: \"retail\"\n            };\n            formData.payments_input = [\n                {\n                    \"date_str\": formData.date_str,\n                    // \"amount\": \"\",\n                    \"amount\": 0.00,\n                    \"method\": \"\",\n                    \"deleted\": false,\n                }\n            ];\n            formData.cash_discount = 0.00;\n            if (cookies.get(\"user_id\")) {\n                selectedReceivedByUsers = [{\n                    id: cookies.get(\"user_id\"),\n                    name: cookies.get(\"user_name\"),\n                }];\n                formData.received_by = cookies.get(\"user_id\");\n                setFormData({ ...formData });\n                setSelectedReceivedByUsers([...selectedReceivedByUsers]);\n            }\n            setFormData({ ...formData });\n\n            if (id) {\n                getSalesReturn(id);\n            }\n\n            if (orderId) {\n                reCalculate();\n                getOrder(orderId);\n            }\n            setShow(true);\n\n        },\n\n    }));\n\n\n    function getSalesReturn(id) {\n        console.log(\"inside getSalesReturn id:\", id);\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/sales-return/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                let salesReturn = data.result;\n                // formData = purchaseReturn;\n\n                formData = {\n                    id: salesReturn.id,\n                    code: salesReturn.code,\n                    order_code: salesReturn.order_code,\n                    order_id: salesReturn.order_id,\n                    store_id: salesReturn.store_id,\n                    customer_id: salesReturn.customer_id,\n                    date_str: salesReturn.date,\n                    payments_input: salesReturn.payments,\n                    // date: purchase.date,\n                    vat_percent: salesReturn.vat_percent,\n                    discount: salesReturn.discount,\n                    discount_percent: salesReturn.discount_percent,\n                    is_discount_percent: salesReturn.is_discount_percent,\n                    payment_status: salesReturn.payment_status,\n                    // shipping_handling_fees: salesReturn.shipping_handling_fees,\n                };\n\n                for (var i = 0; i < formData.payments_input.length; i++) {\n                    formData.payments_input[i].date_str = formData.payments_input[i].date\n                }\n\n\n                setFormData({ ...formData });\n\n                console.log(\"formData1.status:\", formData.status);\n\n\n                console.log(\"purchaseReturn.products:\", salesReturn.products);\n\n                let selectedProductsTemp = salesReturn.products;\n\n                selectedProducts = [];\n                for (let i = 0; i < selectedProductsTemp.length; i++) {\n                    if (selectedProductsTemp[i].quantity > 0) {\n                        selectedProductsTemp[i].selected = true;\n                    } else {\n                        selectedProductsTemp[i].selected = false;\n                    }\n                    selectedProducts.push(selectedProductsTemp[i]);\n\n                    // selectedProductsTemp[i].purchase_unit_price = selectedProductsTemp[i].purchasereturn_unit_price;\n                }\n\n\n                setSelectedProducts([...selectedProducts]);\n\n                setFormData({ ...formData });\n                reCalculate();\n                setFormData({ ...formData });\n\n\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n\n    useEffect(() => {\n        const listener = event => {\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n                console.log(\"Enter key was pressed. Run your function.\");\n                // event.preventDefault();\n\n                var form = event.target.form;\n                if (form && event.target) {\n                    var index = Array.prototype.indexOf.call(form, event.target);\n                    if (form && form.elements[index + 1]) {\n                        if (event.target.getAttribute(\"class\").includes(\"barcode\")) {\n                            form.elements[index].focus();\n                        } else {\n                            form.elements[index + 1].focus();\n                        }\n                        event.preventDefault();\n                    }\n                }\n            }\n        };\n        document.addEventListener(\"keydown\", listener);\n        return () => {\n            document.removeEventListener(\"keydown\", listener);\n        };\n    }, []);\n\n    function getOrder(id) {\n        console.log(\"inside get SalesReturn\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/order/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n\n                console.log(\"Response:\");\n                console.log(data);\n\n                let order = data.result;\n\n                let selectedProductsTemp = order.products;\n                selectedProducts = [];\n                for (let i = 0; i < selectedProductsTemp.length; i++) {\n                    selectedProductsTemp[i].selected = false;\n                    let soldQty = selectedProductsTemp[i].quantity - selectedProductsTemp[i].quantity_returned;\n                    selectedProductsTemp[i].quantity = soldQty;\n\n                    if (soldQty > 0) {\n                        selectedProducts.push(selectedProductsTemp[i]);\n                    }\n                }\n\n                // selectedProducts = selectedProductsTemp\n\n                console.log(\"selectedProducts:\", selectedProducts);\n                setSelectedProducts([...selectedProducts]);\n\n\n\n                //formData = order;\n                console.log(\"order.id:\", order.id);\n                formData.id = \"\";\n                formData.products = order.products;\n                // formData.order_id = order.id;\n                //console.log(\"formData.order_id:\", formData.order_id);\n                formData.order_code = order.code;\n                formData.store_id = order.store_id;\n                /*\n                formData.received_by = order.delivered_by;\n                formData.received_by_signature_id = order.delivered_by_signature_id;\n                */\n                formData.customer_id = order.customer_id;\n\n                // formData.is_discount_percent = order.is_discount_percent;\n                formData.is_discount_percent = true;\n                console.log(\"order.discount_percent:\", order.discount_percent);\n                formData.discount_percent = order.discount_percent;\n                // formData.discount = (order.discount - order.return_discount);\n\n                // formData.discount_percent = order.discount_percent;\n\n                /*\n                if (formData.is_discount_percent) {\n                    formData.discountValue = formData.discount_percent;\n                } else {\n                    formData.discountValue = formData.discount;\n                }\n                */\n\n                // setFormData({ ...formData });\n                console.log(\"formData:\", formData);\n\n\n                selectedStores = [\n                    {\n                        id: order.store_id,\n                        name: order.store_name,\n                    }\n                ];\n\n                setSelectedStores(selectedStores);\n                console.log(\"selectedStores:\", selectedStores);\n\n                setFormData({ ...formData });\n                reCalculate();\n                setFormData({ ...formData });\n            })\n            .catch(error => {\n                setProcessing(false);\n                setErrors(error);\n            });\n    }\n\n    /*\n    let [barcode, setBarcode] = useState(\"\");\n    let [barcodeEnded, setBarcodeEnded] = useState(false);\n    const keyPress = useCallback(\n        (e) => {\n            console.log(\"e.key:\", e.key);\n\n            if (!barcodeEnded && e.key != \"Enter\") {\n                console.log()\n                barcode += e.key;\n                setBarcode(barcode);\n            }\n\n            if (e.key === \"Enter\") {\n                document.removeEventListener(\"keydown\", keyPress);\n                console.log(\"barcode:\", barcode);\n                barcodeEnded = true;\n                setBarcodeEnded(true);\n            }\n\n        },\n        []\n    );\n\n    function addListener() {\n        //barcode = \"\";\n        //setBarcode(barcode);\n        document.addEventListener(\"keydown\", keyPress);\n        console.log(\"Listener added, barcode:\", barcode);\n    }\n    */\n    /*\n    useEffect(() => {\n        document.addEventListener(\"keydown\", keyPress);\n        return () => document.removeEventListener(\"keydown\", keyPress);\n    }, [keyPress]);\n    */\n    /*\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    });\n    let [barcode, setBarcode] = useState(\"\");\n    function handleKeyDown(event) {\n        console.log(\"event.key:\", event.key);\n\n        /*\n        if (event.key == \"Enter\") {\n            barcode = \"\";\n            setBarcode(barcode);\n        }\n        else if (event.key == \"Shift\") {\n            console.log(\"barcode:\", barcode);\n        } else {\n            barcode += event.key;\n            setBarcode(barcode);\n        }\n        */\n\n    /*\n    if (event.keyCode === KEY_ESCAPE) {\n        /* do your action here */\n    // }  \n    // }\n\n    const selectedDate = new Date();\n\n    //const history = useHistory();\n    let [errors, setErrors] = useState({});\n    const [isProcessing, setProcessing] = useState(false);\n    const cookies = new Cookies();\n\n    //fields\n    let [formData, setFormData] = useState({\n        order_id: \"\",\n        vat_percent: 15.0,\n        discount: 0.0,\n        date_str: format(new Date(), \"MMM dd yyyy\"),\n        signature_date_str: format(new Date(), \"MMM dd yyyy\"),\n        status: \"received\",\n        payment_status: \"\",\n        payment_method: \"\",\n        price_type: \"retail\",\n    });\n\n    let [selectedStores, setSelectedStores] = useState([]);\n\n\n\n\n    //Product Auto Suggestion\n    let [selectedProducts, setSelectedProducts] = useState([]);\n\n    //Received By Auto Suggestion\n    const [receivedByUserOptions, setReceivedByUserOptions] = useState([]);\n    let [selectedReceivedByUsers, setSelectedReceivedByUsers] = useState([]);\n    const [isReceivedByUsersLoading, setIsReceivedByUsersLoading] =\n        useState(false);\n\n    //Received By Signature Auto Suggestion\n    const [receivedBySignatureOptions, setReceivedBySignatureOptions] =\n        useState([]);\n    const [selectedReceivedBySignatures, setSelectedReceivedBySignatures] =\n        useState([]);\n    const [isReceivedBySignaturesLoading, setIsReceivedBySignaturesLoading] =\n        useState(false);\n\n    const [show, setShow] = useState(false);\n\n    function handleClose() {\n        setShow(false);\n    }\n\n    useEffect(() => {\n        let at = cookies.get(\"access_token\");\n        if (!at) {\n            // history.push(\"/dashboard/salesreturns\");\n            window.location = \"/\";\n        }\n    });\n\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setReceivedByUserOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsReceivedByUsersLoading(true);\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setReceivedByUserOptions(data.result);\n        setIsReceivedByUsersLoading(false);\n    }\n\n    async function suggestSignatures(searchTerm) {\n        console.log(\"Inside handle suggestSignatures\");\n        setReceivedBySignatureOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        setIsReceivedBySignaturesLoading(true);\n        let result = await fetch(\n            \"/v1/signature?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setReceivedBySignatureOptions(data.result);\n        setIsReceivedBySignaturesLoading(false);\n    }\n\n    function handleCreate(event) {\n        event.preventDefault();\n        console.log(\"Inside handle Create\");\n        console.log(\"selectedProducts:\", selectedProducts);\n        console.log(\"formData.order_id:\", formData.order_id);\n\n        formData.products = [];\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (!selectedProducts[i].selected) {\n                continue;\n            }\n\n            formData.products.push({\n                product_id: selectedProducts[i].product_id,\n                quantity: parseFloat(selectedProducts[i].quantity),\n                unit_price: parseFloat(selectedProducts[i].unit_price),\n                unit: selectedProducts[i].unit,\n            });\n        }\n\n        formData.discount = parseFloat(formData.discount);\n        formData.discount_percent = parseFloat(formData.discount_percent);\n\n        formData.vat_percent = parseFloat(formData.vat_percent);\n        console.log(\"formData.discount:\", formData.discount);\n\n        let haveErrors = false;\n\n        errors[\"products\"] = \"\";\n        setErrors({ ...errors });\n\n        if (formData.products.length === 0) {\n            errors[\"products\"] = \"No products added\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (!formData.discount && formData.discount !== 0) {\n            errors[\"discount\"] = \"Invalid discount\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (!formData.discount_percent && formData.discount_percent !== 0) {\n            errors[\"discount_percent\"] = \"Invalid discount percent\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (parseFloat(formData.discount_percent) > 100) {\n            errors[\"discount_percent\"] = \"Discount percent cannot be > 100\";\n            setErrors({ ...errors });\n            haveErrors = true;\n        }\n\n        if (!validatePaymentAmounts()) {\n            console.log(\"Errors on payments\")\n            haveErrors = true;\n        }\n\n        if (haveErrors) {\n            console.log(\"Errors: \", errors);\n            return;\n        }\n\n\n\n        /*\n        if (!formData.discountValue && formData.discountValue !== 0) {\n            errors[\"discount\"] = \"Invalid Discount\";\n            setErrors({ ...errors });\n            return;\n        }\n        */\n\n        formData.net_total = parseFloat(netTotal);\n\n    \n        let endPoint = \"/v1/sales-return\";\n        let method = \"POST\";\n        if (formData.id) {\n            endPoint = \"/v1/sales-return/\" + formData.id;\n            method = \"PUT\";\n        }\n\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n            body: JSON.stringify(formData),\n        };\n\n        console.log(\"formData:\", formData);\n\n        setProcessing(true);\n        fetch(endPoint, requestOptions)\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    // get error message from body or default to response status\n                    const error = data && data.errors;\n                    //const error = data.errors\n                    return Promise.reject(error);\n                }\n\n                setErrors({});\n                setProcessing(false);\n\n                console.log(\"Response:\");\n                console.log(data);\n                props.showToastMessage(\"SalesReturn Created Successfully!\", \"success\");\n                if (props.refreshList) {\n                    props.refreshList();\n                }\n                handleClose();\n\n                openDetailsView(data.result.id);\n            })\n            .catch((error) => {\n                setProcessing(false);\n                console.log(\"Inside catch\");\n                console.log(error);\n                setErrors({ ...error });\n                console.error(\"There was an error!\", error);\n                props.showToastMessage(\"Error Creating SalesReturn!\", \"danger\");\n            });\n    }\n\n\n    let [totalPrice, setTotalPrice] = useState(0.0);\n\n    function findTotalPrice() {\n        totalPrice = 0.00;\n        for (var i = 0; i < selectedProducts.length; i++) {\n            if (!selectedProducts[i].selected) {\n                continue;\n            }\n            totalPrice +=\n                parseFloat(selectedProducts[i].unit_price) *\n                parseFloat(selectedProducts[i].quantity);\n        }\n        totalPrice = totalPrice.toFixed(2);\n        setTotalPrice(totalPrice);\n    }\n\n    let [vatPrice, setVatPrice] = useState(0.00);\n\n    /*\n    function findVatPrice() {\n        vatPrice = ((parseFloat(formData.vat_percent) / 100) * parseFloat(totalPrice - formData.discount)).toFixed(2);;\n        console.log(\"vatPrice:\", vatPrice);\n        setVatPrice(vatPrice);\n    }*/\n\n    function findVatPrice() {\n        vatPrice = 0.00;\n        if (totalPrice > 0) {\n            //+ parseFloat(formData.shipping_handling_fees)\n            vatPrice = (parseFloat((parseFloat(formData.vat_percent) / 100)) * (parseFloat(totalPrice) - parseFloat(formData.discount)));\n            console.log(\"vatPrice:\", vatPrice);\n        }\n        setVatPrice(vatPrice);\n    }\n\n\n\n    let [netTotal, setNetTotal] = useState(0.00);\n\n    function findNetTotal() {\n        if (totalPrice > 0) {\n            netTotal = (parseFloat(totalPrice) - parseFloat(formData.discount) + parseFloat(vatPrice));\n            setNetTotal(netTotal);\n        }\n\n        netTotal = Math.round(netTotal * 100) / 100;\n        console.log(\"after rounding netTotal:\", netTotal);\n        setNetTotal(netTotal);\n\n        if (!formData.id) {\n            formData.payments_input = [{\n                \"date_str\": formData.date_str,\n                \"amount\": 0.00,\n                \"method\": \"\",\n                \"deleted\": false,\n            }];\n            formData.payments_input[0].amount = parseFloat(netTotal);\n        }\n        setFormData({ ...formData });\n        validatePaymentAmounts();\n\n    }\n\n    let [discountPercent, setDiscountPercent] = useState(0.00);\n\n    /*\n    function findDiscountPercent() {\n        if (formData.discount >= 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            setFormData({ ...formData });\n        }\n    }\n    */\n\n\n\n    /*\n    function findDiscountPercent() {\n        if (!formData.discountValue) {\n            formData.discount = 0.00;\n            formData.discount_percent = 0.00;\n            setFormData({ ...formData });\n            return;\n        }\n\n        formData.discount = formData.discountValue;\n\n        if (formData.discount > 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100).toFixed(2);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            setFormData({ ...formData });\n        }\n\n    }\n    */\n\n    /*\n    function findDiscount() {\n        if (!formData.discountValue) {\n            formData.discount = 0.00;\n            formData.discount_percent = 0.00;\n            setFormData({ ...formData });\n            return;\n        }\n\n        formData.discount_percent = formData.discountValue;\n\n        if (formData.discount_percent > 0 && totalPrice > 0) {\n            formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100)).toFixed(2);\n        }\n        setFormData({ ...formData });\n    }\n    */\n\n    function findDiscount() {\n        if (formData.discount_percent >= 0 && totalPrice > 0) {\n            formData.discount = parseFloat(totalPrice * parseFloat(formData.discount_percent / 100));\n            //formData.discount = Math.round(formData.discount * 100) / 100;\n            formData.discount = parseFloat(formData.discount.toFixed(2));\n            setFormData({ ...formData });\n        }\n    }\n\n    function findDiscountPercent() {\n        if (formData.discount >= 0 && totalPrice > 0) {\n            discountPercent = parseFloat(parseFloat(formData.discount / totalPrice) * 100);\n            setDiscountPercent(discountPercent);\n            formData.discount_percent = discountPercent;\n            //formData.discount_percent = Math.round(formData.discount_percent * 100) / 100;\n            setFormData({ ...formData });\n        }\n    }\n\n    function reCalculate() {\n        findTotalPrice();\n        //findDiscount();\n        //findDiscountPercent();\n\n        if (formData.is_discount_percent) {\n            findDiscount();\n        } else {\n            findDiscountPercent();\n        }\n        findVatPrice();\n        findNetTotal();\n    }\n\n\n\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n    const StoreCreateFormRef = useRef();\n\n    const CustomerCreateFormRef = useRef();\n    const ProductCreateFormRef = useRef();\n\n\n\n    const UserCreateFormRef = useRef();\n    function openUserCreateForm() {\n        UserCreateFormRef.current.open();\n    }\n\n\n    const SignatureCreateFormRef = useRef();\n    function openSignatureCreateForm() {\n        SignatureCreateFormRef.current.open();\n    }\n\n\n    const ProductDetailsViewRef = useRef();\n    function openProductDetailsView(id) {\n        ProductDetailsViewRef.current.open(id);\n    }\n\n\n    function getTotalPayments() {\n        let totalPayment = 0.00;\n        for (var i = 0; i < formData.payments_input?.length; i++) {\n            if (formData.payments_input[i].amount && !formData.payments_input[i].deleted) {\n                totalPayment += formData.payments_input[i].amount;\n            }\n        }\n        return totalPayment;\n    }\n\n    function validatePaymentAmounts() {\n        let haveErrors = false;\n        if (!netTotal) {\n            return true;\n        }\n\n        if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n            errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toFixed(2).toString();\n            setErrors({ ...errors });\n            haveErrors = true\n            return false;\n        }\n\n        let totalPayment = getTotalPayments();\n        // errors[\"payment_date\"] = [];\n        //errors[\"payment_method\"] = [];\n        //errors[\"payment_amount\"] = [];\n        for (var key = 0; key < formData.payments_input.length; key++) {\n            errors[\"payment_amount_\" + key] = \"\";\n            errors[\"payment_date_\" + key] = \"\";\n            errors[\"payment_method_\" + key] = \"\";\n            setErrors({ ...errors });\n\n            if (!formData.payments_input[key].amount) {\n                errors[\"payment_amount_\" + key] = \"Payment amount is required\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            } else if (formData.payments_input[key].amount === 0) {\n                errors[\"payment_amount_\" + key] = \"Amount should be greater than zero\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            }\n\n            if (!formData.payments_input[key].date_str) {\n                errors[\"payment_date_\" + key] = \"Payment date is required\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            } else if ((new Date(formData.payments_input[key].date_str)) < (new Date(formData.date_str))) {\n                errors[\"payment_date_\" + key] = \"Payment date time should be greater than or equal to order date time\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            }\n\n            if (!formData.payments_input[key].method) {\n                errors[\"payment_method_\" + key] = \"Payment method is required\";\n                setErrors({ ...errors });\n                haveErrors = true;\n            }\n\n\n            if ((formData.payments_input[key].amount || formData.payments_input[key].amount === 0) && !formData.payments_input[key].deleted) {\n                let maxAllowedAmount = (netTotal - formData.cash_discount) - (totalPayment - formData.payments_input[key].amount);\n\n                if (maxAllowedAmount < 0) {\n                    maxAllowedAmount = 0;\n                }\n\n                if (maxAllowedAmount === 0) {\n                    errors[\"payment_amount_\" + key] = \"Total amount should not exceed \" + (netTotal - formData.cash_discount).toFixed(2).toString() + \", Please delete this payment\";\n                    setErrors({ ...errors });\n                    haveErrors = true;\n                } else if (formData.payments_input[key].amount > maxAllowedAmount) {\n                    errors[\"payment_amount_\" + key] = \"Amount should not be greater than \" + maxAllowedAmount.toFixed(2).toString();\n                    setErrors({ ...errors });\n                    haveErrors = true;\n                }\n            }\n        }\n\n        if (haveErrors) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function addNewPayment() {\n        let date = new Date();\n        if (!formData.id) {\n            date = formData.date_str;\n        }\n\n        formData.payments_input.push({\n            \"date_str\": date,\n            // \"amount\": \"\",\n            \"amount\": 0.00,\n            \"method\": \"\",\n            \"deleted\": false,\n        });\n        setFormData({ ...formData });\n        validatePaymentAmounts();\n        //validatePaymentAmounts((formData.payments_input.filter(payment => !payment.deleted).length - 1));\n    }\n\n    function removePayment(key) {\n        formData.payments_input.splice(key, 1);\n        //formData.payments_input[key][\"deleted\"] = true;\n        setFormData({ ...formData });\n        validatePaymentAmounts();\n    }\n\n\n    return (\n        <>\n            <SalesReturnView ref={DetailsViewRef} />\n            <ProductView ref={ProductDetailsViewRef} />\n            <StoreCreate ref={StoreCreateFormRef} showToastMessage={props.showToastMessage} />\n            <CustomerCreate ref={CustomerCreateFormRef} showToastMessage={props.showToastMessage} />\n            <ProductCreate ref={ProductCreateFormRef} showToastMessage={props.showToastMessage} />\n            <UserCreate ref={UserCreateFormRef} showToastMessage={props.showToastMessage} />\n            <SignatureCreate ref={SignatureCreateFormRef} showToastMessage={props.showToastMessage} />\n\n\n            <Modal show={show} size=\"xl\" fullscreen onHide={handleClose} animation={false} backdrop=\"static\" scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>\n                        {formData.id ? \"Update Sales Return #\" + formData.code + \" for sale #\" + formData.order_code : \"Create Sales Return\" + \" for sale #\" + formData.order_code}\n                    </Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <SalesReturnPreview />\n                        <Button variant=\"primary\" onClick={handleCreate} >\n                            {isProcessing ?\n                                <Spinner\n                                    as=\"span\"\n                                    animation=\"border\"\n                                    size=\"sm\"\n                                    role=\"status\"\n                                    aria-hidden={true}\n                                /> + \" Creating...\"\n\n                                : \"\"\n                            }\n                            {formData.id ? \"Update\" : \"Create\"}\n\n                        </Button>\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    {Object.keys(errors).length > 0 ?\n                        <div>\n                            <ul>\n\n                                {errors && Object.keys(errors).map((key, index) => {\n                                    return (errors[key] ? <li style={{ color: \"red\" }}>{errors[key]}</li> : \"\");\n                                })}\n                            </ul></div> : \"\"}\n                    <div className=\"col-md-3\">\n                        <label className=\"form-label\">Date*</label>\n\n                        <div className=\"input-group mb-3\">\n                            <DatePicker\n                                id=\"date_str\"\n                                selected={formData.date_str ? new Date(formData.date_str) : null}\n                                value={formData.date_str ? format(\n                                    new Date(formData.date_str),\n                                    \"MMMM d, yyyy h:mm aa\"\n                                ) : null}\n                                className=\"form-control\"\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                showTimeSelect\n                                timeIntervals=\"1\"\n                                onChange={(value) => {\n                                    console.log(\"Value\", value);\n                                    formData.date_str = value;\n                                    // formData.date_str = format(new Date(value), \"MMMM d yyyy h:mm aa\");\n                                    setFormData({ ...formData });\n                                }}\n                            />\n                        </div>\n                        {errors.date_str && (\n                            <div style={{ color: \"red\" }}>\n                                <i className=\"bi bi-x-lg\"> </i>\n                                {errors.date_str}\n                            </div>\n                        )}\n                        {formData.date_str && !errors.date_str && (\n                            <div style={{ color: \"green\" }}>\n                                <i className=\"bi bi-check-lg\"> </i>\n                                Looks good!\n                            </div>\n                        )}\n                    </div>\n\n                    {selectedProducts.length === 0 && \"Already Returned All sold products\"}\n                    {selectedProducts.length > 0 && <form className=\"row g-3 needs-validation\" onSubmit={handleCreate}>\n                        <h2>Select Products</h2>\n                        <div className=\"table-responsive\" style={{ overflowX: \"auto\", overflowY: \"scroll\" }}>\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <thead>\n                                    <tr className=\"text-center\">\n                                        <th>Select</th>\n                                        <th>SI No.</th>\n                                        <th>Part No.</th>\n                                        <th>Name</th>\n                                        <th>Qty</th>\n                                        <th>Unit Price</th>\n                                        <th>Price</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {selectedProducts.map((product, index) => (\n                                        <tr key={index} className=\"text-center\">\n                                            <td>\n                                                <input type=\"checkbox\" checked={selectedProducts[index].selected} onChange={(e) => {\n                                                    console.log(\"e.target.value:\", e.target.value)\n                                                    selectedProducts[index].selected = !selectedProducts[index].selected;\n                                                    setSelectedProducts([...selectedProducts]);\n                                                    reCalculate();\n                                                }} />\n                                            </td>\n                                            <td>{index + 1}</td>\n                                            <td>{product.part_number}</td>\n                                            <td style={{\n                                                textDecoration: \"underline\",\n                                                color: \"blue\",\n                                                cursor: \"pointer\",\n                                            }}\n                                                onClick={() => {\n                                                    openProductDetailsView(product.product_id);\n                                                }}>{product.name}\n                                            </td>\n                                            <td style={{ width: \"155px\" }}>\n\n                                                <div class=\"input-group mb-3\">\n                                                    <input type=\"number\" value={(product.quantity)} className=\"form-control\"\n\n                                                        placeholder=\"Quantity\" onChange={(e) => {\n                                                            errors[\"quantity_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"quantity_\" + index] = \"Invalid Quantity\";\n                                                                selectedProducts[index].quantity = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (parseFloat(e.target.value) === 0) {\n                                                                errors[\"quantity_\" + index] = \"Quantity should be >0\";\n                                                                selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            product.quantity = parseFloat(e.target.value);\n                                                            selectedProducts[index].quantity = parseFloat(e.target.value);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span class=\"input-group-text\" id=\"basic-addon2\">{selectedProducts[index].unit ? selectedProducts[index].unit : \"Units\"}</span>\n                                                </div>\n                                                {errors[\"quantity_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"quantity_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td style={{ width: \"180px\" }}>\n                                                <div class=\"input-group mb-3\">\n                                                    <input type=\"number\" value={product.unit_price} className=\"form-control\"\n\n                                                        placeholder=\"Unit Price\" onChange={(e) => {\n                                                            errors[\"unit_price_\" + index] = \"\";\n                                                            setErrors({ ...errors });\n                                                            if (!e.target.value) {\n                                                                errors[\"unit_price_\" + index] = \"Invalid Unit Price\";\n                                                                selectedProducts[index].unit_price = e.target.value;\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n                                                            if (e.target.value === 0) {\n                                                                errors[\"unit_price_\" + index] = \"Invalid Unit Price should be > 0\";\n                                                                selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                                setSelectedProducts([...selectedProducts]);\n                                                                setErrors({ ...errors });\n                                                                console.log(\"errors:\", errors);\n                                                                return;\n                                                            }\n\n\n                                                            selectedProducts[index].unit_price = parseFloat(e.target.value);\n                                                            console.log(\"selectedProducts[index].unit_price:\", selectedProducts[index].unit_price);\n                                                            setSelectedProducts([...selectedProducts]);\n                                                            reCalculate();\n\n                                                        }} />\n                                                    <span class=\"input-group-text\" id=\"basic-addon2\">SAR</span>\n                                                </div>\n                                                {errors[\"unit_price_\" + index] && (\n                                                    <div style={{ color: \"red\" }}>\n                                                        <i className=\"bi bi-x-lg\"> </i>\n                                                        {errors[\"unit_price_\" + index]}\n                                                    </div>\n                                                )}\n\n                                            </td>\n                                            <td>\n                                                <NumberFormat\n                                                    value={(product.unit_price * product.quantity).toFixed(2)}\n                                                    displayType={\"text\"}\n                                                    thousandSeparator={true}\n                                                    suffix={\" SAR\"}\n                                                    renderText={(value, props) => value}\n                                                />\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                        <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                            <table className=\"table table-striped table-sm table-bordered\">\n                                <tbody>\n                                    <tr>\n                                        <td colSpan=\"4\"></td>\n                                        <td className=\"text-center\">\n\n                                        </td>\n                                        <th className=\"text-end\">Total</th>\n                                        <td className=\"text-end\" style={{ width: \"180px\" }}>\n                                            <NumberFormat\n                                                value={totalPrice}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n\n                                    <tr>\n                                        <th colSpan=\"6\" className=\"text-end\">\n                                            Discount  <input type=\"number\" style={{ width: \"50px\" }} className=\"text-start\" value={formData.discount_percent} onChange={(e) => {\n                                                formData.is_discount_percent = true;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount_percent = parseFloat(e.target.value);\n                                                    formData.discount = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount_percent\"] = \"Discount percent should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount_percent = \"\";\n                                                    formData.discount = 0.00;\n                                                    errors[\"discount_percent\"] = \"Invalid Discount Percent\";\n                                                    setFormData({ ...formData });\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount_percent\"] = \"\";\n                                                errors[\"discount\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount_percent = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />{\"%\"}\n                                            {errors.discount_percent && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount_percent}\n                                                </div>\n                                            )}\n                                            {/*\n                                            Discount(  {formData.discount_percent + \"%\"})\n                                                */}\n                                        </th>\n                                        <td className=\"text-end\">\n                                            <input type=\"number\" style={{ width: \"150px\" }} className=\"text-start\" value={formData.discount} onChange={(e) => {\n                                                formData.is_discount_percent = false;\n                                                if (parseFloat(e.target.value) === 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (parseFloat(e.target.value) < 0) {\n                                                    formData.discount = parseFloat(e.target.value);\n                                                    formData.discount_percent = 0.00;\n                                                    setFormData({ ...formData });\n                                                    errors[\"discount\"] = \"Discount should be >= 0\";\n                                                    setErrors({ ...errors });\n                                                    reCalculate();\n                                                    return;\n                                                }\n\n                                                if (!e.target.value) {\n                                                    formData.discount = \"\";\n                                                    formData.discount_percent = 0.00;\n                                                    errors[\"discount\"] = \"Invalid Discount\";\n                                                    setFormData({ ...formData });\n                                                    reCalculate();\n                                                    setErrors({ ...errors });\n                                                    return;\n                                                }\n\n                                                errors[\"discount\"] = \"\";\n                                                errors[\"discount_percent\"] = \"\";\n                                                setErrors({ ...errors });\n\n                                                formData.discount = parseFloat(e.target.value);\n                                                setFormData({ ...formData });\n                                                reCalculate();\n                                            }} />\n                                            {\" SAR\"}\n                                            {errors.discount && (\n                                                <div style={{ color: \"red\" }}>\n                                                    {errors.discount}\n                                                </div>\n                                            )}\n\n                                            {/*\n                                            <NumberFormat\n                                                value={formData.discount}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                            */}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th colSpan=\"5\" className=\"text-end\">\n\n                                        </th>\n                                        <th className=\"text-end\"> VAT: {formData.vat_percent + \"%\"}</th>\n                                        <td className=\"text-end\">\n                                            <NumberFormat\n                                                value={vatPrice?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"5\"></td>\n                                        <th className=\"text-end\">Net Total</th>\n                                        <th className=\"text-end\">\n                                            <NumberFormat\n                                                value={netTotal?.toFixed(2)}\n                                                displayType={\"text\"}\n                                                thousandSeparator={true}\n                                                suffix={\" SAR\"}\n                                                renderText={(value, props) => value}\n                                            />\n                                        </th>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n\n\n\n\n\n\n                        {/*\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Discount*</label>\n\n                            <div className=\"input-group mb-3\" >\n                                <input\n                                    value={formData.discountValue}\n                                    style={{ marginRight: \"10px\" }}\n                                    type='number'\n                                    onChange={(e) => {\n                                        if (parseFloat(e.target.value) === 0) {\n                                            formData.discountValue = parseFloat(e.target.value);\n                                            setFormData({ ...formData });\n                                            errors[\"discount\"] = \"\";\n                                            setErrors({ ...errors });\n                                            reCalculate();\n                                            return;\n                                        }\n\n                                        if (!e.target.value) {\n                                            formData.discountValue = \"\";\n                                            errors[\"discount\"] = \"Invalid Discount\";\n                                            setFormData({ ...formData });\n                                            setErrors({ ...errors });\n                                            return;\n                                        }\n\n                                        errors[\"discount\"] = \"\";\n                                        setErrors({ ...errors });\n\n                                        formData.discountValue = e.target.value;\n                                        setFormData({ ...formData });\n                                        reCalculate();\n                                    }}\n                                    className=\"form-control\"\n                                    id=\"validationCustom02\"\n                                    placeholder=\"Discount\"\n                                />\n                                <Form.Check\n                                    type=\"switch\"\n                                    id=\"custom-switch\"\n                                    label=\"%\"\n                                    value={formData.is_discount_percent}\n                                    checked={formData.is_discount_percent ? \"checked\" : null}\n                                    onChange={(e) => {\n                                        formData.is_discount_percent = !formData.is_discount_percent;\n                                        console.log(\"e.target.value:\", formData.is_discount_percent);\n                                        setFormData({ ...formData });\n                                        reCalculate();\n                                    }}\n                                />\n\n                            </div>\n                            {errors.discount && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.discount}\n                                </div>\n                            )}\n                            {!errors.discount && (\n                                <div style={{ color: \"green\" }}>\n                                    <i className=\"bi bi-check-lg\"> </i>\n                                    Looks good!\n                                </div>\n                            )}\n                        </div>\n                            */}\n\n\n                        <div className=\"col-md-2\">\n                            <label className=\"form-label\">Cash discount</label>\n                            <input type='number' value={formData.cash_discount} className=\"form-control \"\n                                onChange={(e) => {\n                                    errors[\"cash_discount\"] = \"\";\n                                    setErrors({ ...errors });\n                                    if (!e.target.value) {\n                                        formData.cash_discount = e.target.value;\n                                        setFormData({ ...formData });\n                                        validatePaymentAmounts();\n                                        return;\n                                    }\n                                    formData.cash_discount = parseFloat(e.target.value);\n                                    if (formData.cash_discount > 0 && formData.cash_discount >= netTotal) {\n                                        errors[\"cash_discount\"] = \"Cash discount should not be >= \" + netTotal.toString();\n                                        setErrors({ ...errors });\n                                        return;\n                                    }\n\n                                    setFormData({ ...formData });\n                                    validatePaymentAmounts();\n                                    console.log(formData);\n                                }}\n                            />\n                            {errors.cash_discount && (\n                                <div style={{ color: \"red\" }}>\n                                    <i className=\"bi bi-x-lg\"> </i>\n                                    {errors.cash_discount}\n                                </div>\n                            )}\n                        </div>\n\n                        <div className=\"col-md-8\">\n                            <label className=\"form-label\">Payments Received</label>\n\n                            <div class=\"table-responsive\" style={{ maxWidth: \"900px\" }}>\n                                <Button variant=\"secondary\" style={{ alignContent: \"right\" }} onClick={addNewPayment}>\n                                    Create new payment\n                                </Button>\n                                <table class=\"table table-striped table-sm table-bordered\">\n                                    <thead>\n                                        <th>\n                                            Date\n                                        </th>\n                                        <th>\n                                            Amount\n                                        </th>\n                                        <th>\n                                            Payment method\n                                        </th>\n                                        <th>\n                                            Action\n                                        </th>\n                                    </thead>\n                                    <tbody>\n                                        {formData.payments_input &&\n                                            formData.payments_input.filter(payment => !payment.deleted).map((payment, key) => (\n                                                <tr key={key}>\n                                                    <td style={{ minWidth: \"220px\" }}>\n\n                                                        <DatePicker\n                                                            id=\"date_str\"\n                                                            selected={formData.payments_input[key].date_str ? new Date(formData.payments_input[key].date_str) : null}\n                                                            value={formData.payments_input[key].date_str ? format(\n                                                                new Date(formData.payments_input[key].date_str),\n                                                                \"MMMM d, yyyy h:mm aa\"\n                                                            ) : null}\n                                                            className=\"form-control\"\n                                                            dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                                            showTimeSelect\n                                                            timeIntervals=\"1\"\n                                                            onChange={(value) => {\n                                                                console.log(\"Value\", value);\n                                                                formData.payments_input[key].date_str = value;\n                                                                let paymentDate = new Date(formData.payments_input[key].date_str)\n                                                                let orderDate = new Date(formData.date_str)\n\n\n                                                                let paymentYear = paymentDate.getFullYear();\n                                                                let paymentMonth = paymentDate.getMonth();\n                                                                let paymentDay = paymentDate.getDate();\n                                                                let paymentMinutes = paymentDate.getMinutes();\n                                                                var paymentHours = paymentDate.getHours();\n\n                                                                let orderYear = orderDate.getFullYear();\n                                                                let orderMonth = orderDate.getMonth();\n                                                                let orderDay = orderDate.getDate();\n                                                                let orderMinutes = orderDate.getMinutes();\n                                                                var orderHours = orderDate.getHours();\n\n                                                                if (paymentYear == orderYear\n                                                                    && paymentMonth == orderMonth\n                                                                    && paymentDay == orderDay\n                                                                    && paymentHours == orderHours\n                                                                    && paymentMinutes == orderMinutes) {\n                                                                    formData.date_str = formData.payments_input[key].date_str;\n\n                                                                }\n                                                                setFormData({ ...formData });\n                                                            }}\n                                                        />\n                                                        {errors[\"payment_date_\" + key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_date_\" + key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"300px\" }}>\n                                                        <input type='number' value={formData.payments_input[key].amount} className=\"form-control \"\n                                                            onChange={(e) => {\n                                                                errors[\"payment_amount_\" + key] = \"\";\n                                                                setErrors({ ...errors });\n\n                                                                if (!e.target.value) {\n                                                                    formData.payments_input[key].amount = e.target.value;\n                                                                    setFormData({ ...formData });\n                                                                    validatePaymentAmounts();\n                                                                    return;\n                                                                }\n\n                                                                formData.payments_input[key].amount = parseFloat(e.target.value);\n\n                                                                validatePaymentAmounts();\n                                                                setFormData({ ...formData });\n                                                                console.log(formData);\n                                                            }}\n                                                        />\n                                                        {errors[\"payment_amount_\" + key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_amount_\" + key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        <select value={formData.payments_input[key].method} className=\"form-control \"\n                                                            onChange={(e) => {\n                                                                // errors[\"payment_method\"] = [];\n                                                                errors[\"payment_method_\" + key] = \"\";\n                                                                setErrors({ ...errors });\n\n                                                                if (!e.target.value) {\n                                                                    errors[\"payment_method_\" + key] = \"Payment method is required\";\n                                                                    setErrors({ ...errors });\n\n                                                                    formData.payments_input[key].method = \"\";\n                                                                    setFormData({ ...formData });\n                                                                    return;\n                                                                }\n\n                                                                // errors[\"payment_method\"] = \"\";\n                                                                //setErrors({ ...errors });\n\n                                                                formData.payments_input[key].method = e.target.value;\n                                                                setFormData({ ...formData });\n                                                                console.log(formData);\n                                                            }}\n                                                        >\n                                                            <option value=\"\">Select</option>\n                                                            <option value=\"cash\">Cash</option>\n                                                            <option value=\"bank_account\">Bank Account / Debit / Credit Card</option>\n                                                            <option value=\"customer_account\">Customer Account</option>\n                                                        </select>\n                                                        {errors[\"payment_method_\" + key] && (\n                                                            <div style={{ color: \"red\" }}>\n                                                                <i className=\"bi bi-x-lg\"> </i>\n                                                                {errors[\"payment_method_\" + key]}\n                                                            </div>\n                                                        )}\n                                                    </td>\n                                                    <td style={{ width: \"200px\" }}>\n                                                        <Button variant=\"danger\" onClick={(event) => {\n                                                            removePayment(key);\n                                                        }}>\n                                                            Remove\n                                                        </Button>\n\n                                                    </td>\n                                                </tr>\n                                            ))}\n                                        <tr>\n                                            <td class=\"text-end\">\n                                                <b>Total</b>\n                                            </td>\n                                            <td><b>{getTotalPayments()}</b></td>\n                                            <td colSpan={2}></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleCreate} >\n                                {isProcessing ?\n                                    <Spinner\n                                        as=\"span\"\n                                        animation=\"bsalesreturn\"\n                                        size=\"sm\"\n                                        role=\"status\"\n                                        aria-hidden={true}\n                                    /> + \" Creating...\"\n\n                                    : formData.id ? \"Update\" : \"Create\"\n                                }\n                            </Button>\n                        </Modal.Footer>\n                    </form>}\n                </Modal.Body>\n\n            </Modal>\n\n\n        </>\n    );\n});\n\nexport default SalesReturnCreate;\n"]},"metadata":{},"sourceType":"module"}