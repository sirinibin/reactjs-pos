{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n/* global HTMLImageElement */\n\n/* global HTMLCanvasElement */\n\n/* global SVGElement */\n\n\nvar _getOptionsFromElement = require(\"./getOptionsFromElement.js\");\n\nvar _getOptionsFromElement2 = _interopRequireDefault(_getOptionsFromElement);\n\nvar _renderers = require(\"../renderers\");\n\nvar _renderers2 = _interopRequireDefault(_renderers);\n\nvar _exceptions = require(\"../exceptions/exceptions.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Takes an element and returns an object with information about how\n// it should be rendered\n// This could also return an array with these objects\n// {\n//   element: The element that the renderer should draw on\n//   renderer: The name of the renderer\n//   afterRender (optional): If something has to done after the renderer\n//     completed, calls afterRender (function)\n//   options (optional): Options that can be defined in the element\n// }\n\n\nfunction getRenderProperties(element) {\n  // If the element is a string, query select call again\n  if (typeof element === \"string\") {\n    return querySelectedRenderProperties(element);\n  } // If element is array. Recursivly call with every object in the array\n  else if (Array.isArray(element)) {\n    var returnArray = [];\n\n    for (var i = 0; i < element.length; i++) {\n      returnArray.push(getRenderProperties(element[i]));\n    }\n\n    return returnArray;\n  } // If element, render on canvas and set the uri as src\n  else if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLImageElement) {\n    return newCanvasRenderProperties(element);\n  } // If SVG\n  else if (element && element.nodeName && element.nodeName.toLowerCase() === 'svg' || typeof SVGElement !== 'undefined' && element instanceof SVGElement) {\n    return {\n      element: element,\n      options: (0, _getOptionsFromElement2.default)(element),\n      renderer: _renderers2.default.SVGRenderer\n    };\n  } // If canvas (in browser)\n  else if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLCanvasElement) {\n    return {\n      element: element,\n      options: (0, _getOptionsFromElement2.default)(element),\n      renderer: _renderers2.default.CanvasRenderer\n    };\n  } // If canvas (in node)\n  else if (element && element.getContext) {\n    return {\n      element: element,\n      renderer: _renderers2.default.CanvasRenderer\n    };\n  } else if (element && (typeof element === \"undefined\" ? \"undefined\" : _typeof(element)) === 'object' && !element.nodeName) {\n    return {\n      element: element,\n      renderer: _renderers2.default.ObjectRenderer\n    };\n  } else {\n    throw new _exceptions.InvalidElementException();\n  }\n}\n\nfunction querySelectedRenderProperties(string) {\n  var selector = document.querySelectorAll(string);\n\n  if (selector.length === 0) {\n    return undefined;\n  } else {\n    var returnArray = [];\n\n    for (var i = 0; i < selector.length; i++) {\n      returnArray.push(getRenderProperties(selector[i]));\n    }\n\n    return returnArray;\n  }\n}\n\nfunction newCanvasRenderProperties(imgElement) {\n  var canvas = document.createElement('canvas');\n  return {\n    element: canvas,\n    options: (0, _getOptionsFromElement2.default)(imgElement),\n    renderer: _renderers2.default.CanvasRenderer,\n    afterRender: function afterRender() {\n      imgElement.setAttribute(\"src\", canvas.toDataURL());\n    }\n  };\n}\n\nexports.default = getRenderProperties;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/jsbarcode/bin/help/getRenderProperties.js"],"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_getOptionsFromElement","require","_getOptionsFromElement2","_interopRequireDefault","_renderers","_renderers2","_exceptions","__esModule","default","getRenderProperties","element","querySelectedRenderProperties","Array","isArray","returnArray","i","length","push","HTMLCanvasElement","HTMLImageElement","newCanvasRenderProperties","nodeName","toLowerCase","SVGElement","options","renderer","SVGRenderer","CanvasRenderer","getContext","ObjectRenderer","InvalidElementException","string","selector","document","querySelectorAll","undefined","imgElement","canvas","createElement","afterRender","setAttribute","toDataURL"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /* global HTMLImageElement */\n/* global HTMLCanvasElement */\n/* global SVGElement */\n\nvar _getOptionsFromElement = require(\"./getOptionsFromElement.js\");\n\nvar _getOptionsFromElement2 = _interopRequireDefault(_getOptionsFromElement);\n\nvar _renderers = require(\"../renderers\");\n\nvar _renderers2 = _interopRequireDefault(_renderers);\n\nvar _exceptions = require(\"../exceptions/exceptions.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Takes an element and returns an object with information about how\n// it should be rendered\n// This could also return an array with these objects\n// {\n//   element: The element that the renderer should draw on\n//   renderer: The name of the renderer\n//   afterRender (optional): If something has to done after the renderer\n//     completed, calls afterRender (function)\n//   options (optional): Options that can be defined in the element\n// }\n\nfunction getRenderProperties(element) {\n\t// If the element is a string, query select call again\n\tif (typeof element === \"string\") {\n\t\treturn querySelectedRenderProperties(element);\n\t}\n\t// If element is array. Recursivly call with every object in the array\n\telse if (Array.isArray(element)) {\n\t\t\tvar returnArray = [];\n\t\t\tfor (var i = 0; i < element.length; i++) {\n\t\t\t\treturnArray.push(getRenderProperties(element[i]));\n\t\t\t}\n\t\t\treturn returnArray;\n\t\t}\n\t\t// If element, render on canvas and set the uri as src\n\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLImageElement) {\n\t\t\t\treturn newCanvasRenderProperties(element);\n\t\t\t}\n\t\t\t// If SVG\n\t\t\telse if (element && element.nodeName && element.nodeName.toLowerCase() === 'svg' || typeof SVGElement !== 'undefined' && element instanceof SVGElement) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: element,\n\t\t\t\t\t\toptions: (0, _getOptionsFromElement2.default)(element),\n\t\t\t\t\t\trenderer: _renderers2.default.SVGRenderer\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// If canvas (in browser)\n\t\t\t\telse if (typeof HTMLCanvasElement !== 'undefined' && element instanceof HTMLCanvasElement) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\toptions: (0, _getOptionsFromElement2.default)(element),\n\t\t\t\t\t\t\trenderer: _renderers2.default.CanvasRenderer\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// If canvas (in node)\n\t\t\t\t\telse if (element && element.getContext) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: _renderers2.default.CanvasRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (element && (typeof element === \"undefined\" ? \"undefined\" : _typeof(element)) === 'object' && !element.nodeName) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\telement: element,\n\t\t\t\t\t\t\t\trenderer: _renderers2.default.ObjectRenderer\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new _exceptions.InvalidElementException();\n\t\t\t\t\t\t}\n}\n\nfunction querySelectedRenderProperties(string) {\n\tvar selector = document.querySelectorAll(string);\n\tif (selector.length === 0) {\n\t\treturn undefined;\n\t} else {\n\t\tvar returnArray = [];\n\t\tfor (var i = 0; i < selector.length; i++) {\n\t\t\treturnArray.push(getRenderProperties(selector[i]));\n\t\t}\n\t\treturn returnArray;\n\t}\n}\n\nfunction newCanvasRenderProperties(imgElement) {\n\tvar canvas = document.createElement('canvas');\n\treturn {\n\t\telement: canvas,\n\t\toptions: (0, _getOptionsFromElement2.default)(imgElement),\n\t\trenderer: _renderers2.default.CanvasRenderer,\n\t\tafterRender: function afterRender() {\n\t\t\timgElement.setAttribute(\"src\", canvas.toDataURL());\n\t\t}\n\t};\n}\n\nexports.default = getRenderProperties;"]},"metadata":{},"sourceType":"script"}