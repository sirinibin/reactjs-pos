{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/quotation/preview.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport QuotationPreviewContent from './previewContent.js';\nimport Cookies from \"universal-cookie\";\nimport { useReactToPrint } from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuotationPreview = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(modelObj) {\n      if (modelObj) {\n        model = modelObj;\n        setModel({ ...model\n        });\n\n        if (model.store_id) {\n          getStore(model.store_id);\n        }\n\n        if (model.customer_id) {\n          getCustomer(model.customer_id);\n        }\n\n        if (model.delivered_by) {\n          getUser(model.delivered_by);\n        }\n\n        if (model.delivered_by_signature_id) {\n          getSignature(model.delivered_by_signature_id);\n        }\n\n        let pageSize = 17;\n        model.pageSize = pageSize;\n        let totalProducts = model.products.length;\n        let top = 0;\n        let totalPagesInt = parseInt(totalProducts / pageSize);\n        let totalPagesFloat = parseFloat(totalProducts / pageSize);\n        let totalPages = totalPagesInt;\n\n        if (totalPagesFloat - totalPagesInt > 0) {\n          totalPages++;\n        }\n\n        model.total_pages = totalPages;\n        model.pages = [];\n        let offset = 0;\n\n        for (let i = 0; i < totalPages; i++) {\n          model.pages.push({\n            top: top,\n            products: [],\n            lastPage: false,\n            firstPage: false\n          });\n\n          for (let j = offset; j < totalProducts; j++) {\n            model.pages[i].products.push(model.products[j]);\n\n            if (model.pages[i].products.length === pageSize) {\n              break;\n            }\n          }\n\n          top += 1057;\n          offset += pageSize;\n\n          if (i === 0) {\n            model.pages[i].firstPage = true;\n          }\n\n          if (i + 1 === totalPages) {\n            model.pages[i].lastPage = true;\n          }\n        }\n\n        console.log(\"model.pages:\", model.pages);\n        console.log(\"model.products:\", model.products);\n        getQRCodeContents(); //model.qr_content = getQRCodeContents();\n        //setModel({ ...model });\n\n        setShow(true);\n        console.log(\"model:\", model);\n      }\n    }\n\n  }));\n  const cookies = new Cookies();\n  let [model, setModel] = useState({});\n  const [show, setShow] = useState(props.show);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  let [qrContent, setQrContent] = useState(\"\");\n\n  function getQRCodeContents() {\n    qrContent = \"\";\n\n    if (model.code) {\n      qrContent += \"Quotation #: \" + model.code + \"<br />\";\n    }\n\n    if (model.store) {\n      qrContent += \"Store: \" + model.store.name + \"<br />\";\n    }\n\n    if (model.customer) {\n      qrContent += \"Customer: \" + model.customer.name + \"<br />\";\n    }\n\n    if (model.net_total) {\n      qrContent += \"Net Total: \" + model.net_total + \"<br />\";\n    }\n\n    qrContent += \"Store: Test <br />\";\n    setQrContent(qrContent);\n    model.qr_content = qrContent;\n    setModel({ ...model\n    });\n    console.log(\"QR content:\", model.qr_content);\n    return model.qr_content;\n  }\n\n  function getStore(id) {\n    console.log(\"inside get Store\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/store/' + id, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      console.log(\"Response:\");\n      console.log(data);\n      let storeData = data.result;\n      model.store = storeData;\n      setModel({ ...model\n      });\n    }).catch(error => {});\n  }\n\n  function getCustomer(id) {\n    console.log(\"inside get Customer\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/customer/' + id, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get('content-type')) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      console.log(\"Response:\");\n      console.log(data);\n      let customerData = data.result;\n      model.customer = customerData;\n      setModel({ ...model\n      });\n    }).catch(error => {});\n  }\n\n  function getUser(id) {\n    console.log(\"inside get User(Delivered by)\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/user/' + id, requestOptions).then(async response => {\n      var _response$headers$get3;\n\n      const isJson = (_response$headers$get3 = response.headers.get('content-type')) === null || _response$headers$get3 === void 0 ? void 0 : _response$headers$get3.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      console.log(\"Response:\");\n      console.log(data);\n      let userData = data.result;\n      model.delivered_by_user = userData;\n      setModel({ ...model\n      });\n    }).catch(error => {});\n  }\n\n  function getSignature(id) {\n    console.log(\"inside get Signature\");\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': cookies.get('access_token')\n      }\n    };\n    fetch('/v1/signature/' + id, requestOptions).then(async response => {\n      var _response$headers$get4;\n\n      const isJson = (_response$headers$get4 = response.headers.get('content-type')) === null || _response$headers$get4 === void 0 ? void 0 : _response$headers$get4.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      console.log(\"Response:\");\n      console.log(data);\n      let signatureData = data.result;\n      model.delivered_by_signature = signatureData;\n      setModel({ ...model\n      });\n    }).catch(error => {});\n  }\n  /*\n  function print() {\n      console.log(\"Print\");\n  }\n  */\n\n\n  const printAreaRef = useRef();\n\n  function getFileName() {\n    let filename = \"Quotation\";\n\n    if (model.id) {\n      filename += \"_#\" + model.code;\n    }\n\n    return filename;\n  }\n\n  const handlePrint = useReactToPrint({\n    content: () => printAreaRef.current,\n    documentTitle: getFileName()\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      scrollable: true,\n      size: \"xl\",\n      fullscreen: true,\n      onHide: handleClose,\n      animation: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Quotation Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn btn-primary mb-3\",\n            onClick: handlePrint,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-printer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }, this), \" Print\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: printAreaRef,\n          children: /*#__PURE__*/_jsxDEV(QuotationPreviewContent, {\n            model: model\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}, \"VzECNTOygkavqg0guOdvIcQjIBo=\", false, function () {\n  return [useImperativeHandle, useReactToPrint];\n}));\n_c2 = QuotationPreview;\nexport default QuotationPreview;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuotationPreview$forwardRef\");\n$RefreshReg$(_c2, \"QuotationPreview\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/quotation/preview.js"],"names":["React","useState","useRef","forwardRef","useImperativeHandle","Modal","Button","QuotationPreviewContent","Cookies","useReactToPrint","QuotationPreview","props","ref","open","modelObj","model","setModel","store_id","getStore","customer_id","getCustomer","delivered_by","getUser","delivered_by_signature_id","getSignature","pageSize","totalProducts","products","length","top","totalPagesInt","parseInt","totalPagesFloat","parseFloat","totalPages","total_pages","pages","offset","i","push","lastPage","firstPage","j","console","log","getQRCodeContents","setShow","cookies","show","handleClose","qrContent","setQrContent","code","store","name","customer","net_total","qr_content","id","requestOptions","method","headers","get","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","storeData","result","catch","customerData","userData","delivered_by_user","signatureData","delivered_by_signature","printAreaRef","getFileName","filename","handlePrint","content","current","documentTitle"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CC,mBAA9C,QAAyE,OAAzE;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,uBAAP,MAAoC,qBAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,eAAT,QAAgC,gBAAhC;;;AAEA,MAAMC,gBAAgB,gBAAGP,UAAU,SAAC,CAACQ,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAEhDR,EAAAA,mBAAmB,CAACQ,GAAD,EAAM,OAAO;AAC5BC,IAAAA,IAAI,CAACC,QAAD,EAAW;AACX,UAAIA,QAAJ,EAAc;AACVC,QAAAA,KAAK,GAAGD,QAAR;AACAE,QAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,SAAD,CAAR;;AAEA,YAAIA,KAAK,CAACE,QAAV,EAAoB;AAChBC,UAAAA,QAAQ,CAACH,KAAK,CAACE,QAAP,CAAR;AACH;;AAED,YAAIF,KAAK,CAACI,WAAV,EAAuB;AACnBC,UAAAA,WAAW,CAACL,KAAK,CAACI,WAAP,CAAX;AACH;;AAED,YAAIJ,KAAK,CAACM,YAAV,EAAwB;AACpBC,UAAAA,OAAO,CAACP,KAAK,CAACM,YAAP,CAAP;AACH;;AAED,YAAIN,KAAK,CAACQ,yBAAV,EAAqC;AACjCC,UAAAA,YAAY,CAACT,KAAK,CAACQ,yBAAP,CAAZ;AACH;;AAED,YAAIE,QAAQ,GAAG,EAAf;AACAV,QAAAA,KAAK,CAACU,QAAN,GAAiBA,QAAjB;AACA,YAAIC,aAAa,GAAGX,KAAK,CAACY,QAAN,CAAeC,MAAnC;AACA,YAAIC,GAAG,GAAG,CAAV;AACA,YAAIC,aAAa,GAAGC,QAAQ,CAACL,aAAa,GAAGD,QAAjB,CAA5B;AACA,YAAIO,eAAe,GAAGC,UAAU,CAACP,aAAa,GAAGD,QAAjB,CAAhC;AAEA,YAAIS,UAAU,GAAGJ,aAAjB;;AACA,YAAKE,eAAe,GAAGF,aAAnB,GAAoC,CAAxC,EAA2C;AACvCI,UAAAA,UAAU;AACb;;AAEDnB,QAAAA,KAAK,CAACoB,WAAN,GAAoBD,UAApB;AAGAnB,QAAAA,KAAK,CAACqB,KAAN,GAAc,EAAd;AAGA,YAAIC,MAAM,GAAG,CAAb;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,UAApB,EAAgCI,CAAC,EAAjC,EAAqC;AACjCvB,UAAAA,KAAK,CAACqB,KAAN,CAAYG,IAAZ,CAAiB;AACbV,YAAAA,GAAG,EAAEA,GADQ;AAEbF,YAAAA,QAAQ,EAAE,EAFG;AAGba,YAAAA,QAAQ,EAAE,KAHG;AAIbC,YAAAA,SAAS,EAAE;AAJE,WAAjB;;AAOA,eAAK,IAAIC,CAAC,GAAGL,MAAb,EAAqBK,CAAC,GAAGhB,aAAzB,EAAwCgB,CAAC,EAAzC,EAA6C;AACzC3B,YAAAA,KAAK,CAACqB,KAAN,CAAYE,CAAZ,EAAeX,QAAf,CAAwBY,IAAxB,CAA6BxB,KAAK,CAACY,QAAN,CAAee,CAAf,CAA7B;;AAEA,gBAAI3B,KAAK,CAACqB,KAAN,CAAYE,CAAZ,EAAeX,QAAf,CAAwBC,MAAxB,KAAmCH,QAAvC,EAAiD;AAC7C;AACH;AACJ;;AAEDI,UAAAA,GAAG,IAAI,IAAP;AACAQ,UAAAA,MAAM,IAAIZ,QAAV;;AAEA,cAAIa,CAAC,KAAK,CAAV,EAAa;AACTvB,YAAAA,KAAK,CAACqB,KAAN,CAAYE,CAAZ,EAAeG,SAAf,GAA2B,IAA3B;AACH;;AAED,cAAKH,CAAC,GAAG,CAAL,KAAYJ,UAAhB,EAA4B;AACxBnB,YAAAA,KAAK,CAACqB,KAAN,CAAYE,CAAZ,EAAeE,QAAf,GAA0B,IAA1B;AACH;AACJ;;AAEDG,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B7B,KAAK,CAACqB,KAAlC;AAEAO,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B7B,KAAK,CAACY,QAArC;AACAkB,QAAAA,iBAAiB,GAvEP,CAwEV;AACA;;AAEAC,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB7B,KAAtB;AACH;AAEJ;;AAjF2B,GAAP,CAAN,CAAnB;AAqFA,QAAMgC,OAAO,GAAG,IAAIvC,OAAJ,EAAhB;AAEA,MAAI,CAACO,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAAC+C,IAAD,EAAOF,OAAP,IAAkB7C,QAAQ,CAACU,KAAK,CAACqC,IAAP,CAAhC;;AAGA,WAASC,WAAT,GAAuB;AACnBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AAGD,MAAI,CAACI,SAAD,EAAYC,YAAZ,IAA4BlD,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAAS4C,iBAAT,GAA6B;AACzBK,IAAAA,SAAS,GAAG,EAAZ;;AAEA,QAAInC,KAAK,CAACqC,IAAV,EAAgB;AACZF,MAAAA,SAAS,IAAI,kBAAkBnC,KAAK,CAACqC,IAAxB,GAA+B,QAA5C;AACH;;AAED,QAAIrC,KAAK,CAACsC,KAAV,EAAiB;AACbH,MAAAA,SAAS,IAAI,YAAYnC,KAAK,CAACsC,KAAN,CAAYC,IAAxB,GAA+B,QAA5C;AACH;;AAED,QAAIvC,KAAK,CAACwC,QAAV,EAAoB;AAChBL,MAAAA,SAAS,IAAI,eAAenC,KAAK,CAACwC,QAAN,CAAeD,IAA9B,GAAqC,QAAlD;AACH;;AAGD,QAAIvC,KAAK,CAACyC,SAAV,EAAqB;AACjBN,MAAAA,SAAS,IAAI,gBAAgBnC,KAAK,CAACyC,SAAtB,GAAkC,QAA/C;AACH;;AACDN,IAAAA,SAAS,IAAI,oBAAb;AAEAC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAnC,IAAAA,KAAK,CAAC0C,UAAN,GAAmBP,SAAnB;AACAlC,IAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAR;AACA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B7B,KAAK,CAAC0C,UAAjC;AAEA,WAAO1C,KAAK,CAAC0C,UAAb;AACH;;AAED,WAASvC,QAAT,CAAkBwC,EAAlB,EAAsB;AAClBf,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMe,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBd,OAAO,CAACe,GAAR,CAAY,cAAZ;AAFZ;AAFU,KAAvB;AAQAC,IAAAA,KAAK,CAAC,eAAeL,EAAhB,EAAoBC,cAApB,CAAL,CACKK,IADL,CACU,MAAMC,QAAN,IAAkB;AAAA;;AACpB,YAAMC,MAAM,4BAAGD,QAAQ,CAACJ,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAH,0DAAG,sBAAsCK,QAAtC,CAA+C,kBAA/C,CAAf;AACA,YAAMC,IAAI,GAAGF,MAAM,KAAI,MAAMD,QAAQ,CAACI,IAAT,EAAV,CAAnB,CAFoB,CAIpB;;AACA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,MAA5B;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH;;AAED5B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYwB,IAAZ;AACA,UAAIO,SAAS,GAAGP,IAAI,CAACQ,MAArB;AACA7D,MAAAA,KAAK,CAACsC,KAAN,GAAcsB,SAAd;AACA3D,MAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,OAAD,CAAR;AACH,KAhBL,EAiBK8D,KAjBL,CAiBWN,KAAK,IAAI,CAEf,CAnBL;AAoBH;;AAID,WAASnD,WAAT,CAAqBsC,EAArB,EAAyB;AACrBf,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMe,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBd,OAAO,CAACe,GAAR,CAAY,cAAZ;AAFZ;AAFU,KAAvB;AAQAC,IAAAA,KAAK,CAAC,kBAAkBL,EAAnB,EAAuBC,cAAvB,CAAL,CACKK,IADL,CACU,MAAMC,QAAN,IAAkB;AAAA;;AACpB,YAAMC,MAAM,6BAAGD,QAAQ,CAACJ,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAH,2DAAG,uBAAsCK,QAAtC,CAA+C,kBAA/C,CAAf;AACA,YAAMC,IAAI,GAAGF,MAAM,KAAI,MAAMD,QAAQ,CAACI,IAAT,EAAV,CAAnB,CAFoB,CAIpB;;AACA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,MAA5B;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH;;AAED5B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYwB,IAAZ;AACA,UAAIU,YAAY,GAAGV,IAAI,CAACQ,MAAxB;AACA7D,MAAAA,KAAK,CAACwC,QAAN,GAAiBuB,YAAjB;AACA9D,MAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,OAAD,CAAR;AACH,KAhBL,EAiBK8D,KAjBL,CAiBWN,KAAK,IAAI,CAEf,CAnBL;AAoBH;;AAED,WAASjD,OAAT,CAAiBoC,EAAjB,EAAqB;AACjBf,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,UAAMe,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBd,OAAO,CAACe,GAAR,CAAY,cAAZ;AAFZ;AAFU,KAAvB;AAQAC,IAAAA,KAAK,CAAC,cAAcL,EAAf,EAAmBC,cAAnB,CAAL,CACKK,IADL,CACU,MAAMC,QAAN,IAAkB;AAAA;;AACpB,YAAMC,MAAM,6BAAGD,QAAQ,CAACJ,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAH,2DAAG,uBAAsCK,QAAtC,CAA+C,kBAA/C,CAAf;AACA,YAAMC,IAAI,GAAGF,MAAM,KAAI,MAAMD,QAAQ,CAACI,IAAT,EAAV,CAAnB,CAFoB,CAIpB;;AACA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,MAA5B;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH;;AAGD5B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYwB,IAAZ;AACA,UAAIW,QAAQ,GAAGX,IAAI,CAACQ,MAApB;AACA7D,MAAAA,KAAK,CAACiE,iBAAN,GAA0BD,QAA1B;AACA/D,MAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,OAAD,CAAR;AACH,KAjBL,EAkBK8D,KAlBL,CAkBWN,KAAK,IAAI,CAEf,CApBL;AAqBH;;AAED,WAAS/C,YAAT,CAAsBkC,EAAtB,EAA0B;AACtBf,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,UAAMe,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBd,OAAO,CAACe,GAAR,CAAY,cAAZ;AAFZ;AAFU,KAAvB;AAQAC,IAAAA,KAAK,CAAC,mBAAmBL,EAApB,EAAwBC,cAAxB,CAAL,CACKK,IADL,CACU,MAAMC,QAAN,IAAkB;AAAA;;AACpB,YAAMC,MAAM,6BAAGD,QAAQ,CAACJ,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAH,2DAAG,uBAAsCK,QAAtC,CAA+C,kBAA/C,CAAf;AACA,YAAMC,IAAI,GAAGF,MAAM,KAAI,MAAMD,QAAQ,CAACI,IAAT,EAAV,CAAnB,CAFoB,CAIpB;;AACA,UAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACd,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,MAA5B;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH;;AAED5B,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYwB,IAAZ;AACA,UAAIa,aAAa,GAAGb,IAAI,CAACQ,MAAzB;AACA7D,MAAAA,KAAK,CAACmE,sBAAN,GAA+BD,aAA/B;AACAjE,MAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,OAAD,CAAR;AACH,KAhBL,EAiBK8D,KAjBL,CAiBWN,KAAK,IAAI,CAEf,CAnBL;AAoBH;AAID;AACJ;AACA;AACA;AACA;;;AAEI,QAAMY,YAAY,GAAGjF,MAAM,EAA3B;;AAEA,WAASkF,WAAT,GAAuB;AACnB,QAAIC,QAAQ,GAAG,WAAf;;AAEA,QAAItE,KAAK,CAAC2C,EAAV,EAAc;AACV2B,MAAAA,QAAQ,IAAI,OAAOtE,KAAK,CAACqC,IAAzB;AACH;;AAED,WAAOiC,QAAP;AACH;;AAED,QAAMC,WAAW,GAAG7E,eAAe,CAAC;AAChC8E,IAAAA,OAAO,EAAE,MAAMJ,YAAY,CAACK,OADI;AAEhCC,IAAAA,aAAa,EAAEL,WAAW;AAFM,GAAD,CAAnC;AAMA,sBAAQ;AAAA,2BACJ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEpC,IAAb;AAAmB,MAAA,UAAU,EAAE,IAA/B;AAAqC,MAAA,IAAI,EAAC,IAA1C;AAA+C,MAAA,UAAU,MAAzD;AAA0D,MAAA,MAAM,EAAEC,WAAlE;AAA+E,MAAA,SAAS,EAAE,KAA1F;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAA,gCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,SAAS,EAAC,sBAApC;AAA2D,YAAA,OAAO,EAAEqC,WAApE;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,SAAS,EAAC,WAFd;AAGI,YAAA,OAAO,EAAErC,WAHb;AAII,0BAAW;AAJf;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAiBI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEkC,YAAV;AAAA,iCACI,QAAC,uBAAD;AAAyB,YAAA,KAAK,EAAEpE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAsBI,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAoCH,CAnUkC;AAAA,UAE/BX,mBAF+B,EAyRXK,eAzRW;AAAA,GAAnC;MAAMC,gB;AAqUN,eAAeA,gBAAf","sourcesContent":["import { React, useState, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Modal, Button } from 'react-bootstrap';\nimport QuotationPreviewContent from './previewContent.js';\nimport Cookies from \"universal-cookie\";\nimport { useReactToPrint } from 'react-to-print';\n\nconst QuotationPreview = forwardRef((props, ref) => {\n\n    useImperativeHandle(ref, () => ({\n        open(modelObj) {\n            if (modelObj) {\n                model = modelObj;\n                setModel({ ...model })\n\n                if (model.store_id) {\n                    getStore(model.store_id);\n                }\n\n                if (model.customer_id) {\n                    getCustomer(model.customer_id);\n                }\n\n                if (model.delivered_by) {\n                    getUser(model.delivered_by);\n                }\n\n                if (model.delivered_by_signature_id) {\n                    getSignature(model.delivered_by_signature_id);\n                }\n\n                let pageSize = 17;\n                model.pageSize = pageSize;\n                let totalProducts = model.products.length;\n                let top = 0;\n                let totalPagesInt = parseInt(totalProducts / pageSize);\n                let totalPagesFloat = parseFloat(totalProducts / pageSize);\n\n                let totalPages = totalPagesInt;\n                if ((totalPagesFloat - totalPagesInt) > 0) {\n                    totalPages++;\n                }\n\n                model.total_pages = totalPages;\n\n\n                model.pages = [];\n\n\n                let offset = 0;\n\n                for (let i = 0; i < totalPages; i++) {\n                    model.pages.push({\n                        top: top,\n                        products: [],\n                        lastPage: false,\n                        firstPage: false,\n                    });\n\n                    for (let j = offset; j < totalProducts; j++) {\n                        model.pages[i].products.push(model.products[j]);\n\n                        if (model.pages[i].products.length === pageSize) {\n                            break;\n                        }\n                    }\n\n                    top += 1057;\n                    offset += pageSize;\n\n                    if (i === 0) {\n                        model.pages[i].firstPage = true;\n                    }\n\n                    if ((i + 1) === totalPages) {\n                        model.pages[i].lastPage = true;\n                    }\n                }\n\n                console.log(\"model.pages:\", model.pages);\n\n                console.log(\"model.products:\", model.products);\n                getQRCodeContents();\n                //model.qr_content = getQRCodeContents();\n                //setModel({ ...model });\n\n                setShow(true);\n                console.log(\"model:\", model);\n            }\n\n        },\n\n    }));\n\n    const cookies = new Cookies();\n\n    let [model, setModel] = useState({});\n\n    const [show, setShow] = useState(props.show);\n\n\n    function handleClose() {\n        setShow(false);\n    }\n\n\n    let [qrContent, setQrContent] = useState(\"\");\n\n    function getQRCodeContents() {\n        qrContent = \"\";\n\n        if (model.code) {\n            qrContent += \"Quotation #: \" + model.code + \"<br />\";\n        }\n\n        if (model.store) {\n            qrContent += \"Store: \" + model.store.name + \"<br />\";\n        }\n\n        if (model.customer) {\n            qrContent += \"Customer: \" + model.customer.name + \"<br />\";\n        }\n\n\n        if (model.net_total) {\n            qrContent += \"Net Total: \" + model.net_total + \"<br />\";\n        }\n        qrContent += \"Store: Test <br />\";\n\n        setQrContent(qrContent);\n        model.qr_content = qrContent;\n        setModel({ ...model });\n        console.log(\"QR content:\", model.qr_content);\n\n        return model.qr_content;\n    }\n\n    function getStore(id) {\n        console.log(\"inside get Store\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/store/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                console.log(\"Response:\");\n                console.log(data);\n                let storeData = data.result;\n                model.store = storeData;\n                setModel({ ...model });\n            })\n            .catch(error => {\n\n            });\n    }\n\n\n\n    function getCustomer(id) {\n        console.log(\"inside get Customer\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/customer/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                console.log(\"Response:\");\n                console.log(data);\n                let customerData = data.result;\n                model.customer = customerData;\n                setModel({ ...model });\n            })\n            .catch(error => {\n\n            });\n    }\n\n    function getUser(id) {\n        console.log(\"inside get User(Delivered by)\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/user/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n\n                console.log(\"Response:\");\n                console.log(data);\n                let userData = data.result;\n                model.delivered_by_user = userData;\n                setModel({ ...model });\n            })\n            .catch(error => {\n\n            });\n    }\n\n    function getSignature(id) {\n        console.log(\"inside get Signature\");\n        const requestOptions = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': cookies.get('access_token'),\n            },\n        };\n\n        fetch('/v1/signature/' + id, requestOptions)\n            .then(async response => {\n                const isJson = response.headers.get('content-type')?.includes('application/json');\n                const data = isJson && await response.json();\n\n                // check for error response\n                if (!response.ok) {\n                    const error = (data && data.errors);\n                    return Promise.reject(error);\n                }\n\n                console.log(\"Response:\");\n                console.log(data);\n                let signatureData = data.result;\n                model.delivered_by_signature = signatureData;\n                setModel({ ...model });\n            })\n            .catch(error => {\n\n            });\n    }\n\n\n\n    /*\n    function print() {\n        console.log(\"Print\");\n    }\n    */\n\n    const printAreaRef = useRef();\n\n    function getFileName() {\n        let filename = \"Quotation\";\n\n        if (model.id) {\n            filename += \"_#\" + model.code;\n        }\n\n        return filename;\n    }\n\n    const handlePrint = useReactToPrint({\n        content: () => printAreaRef.current,\n        documentTitle: getFileName(),\n    });\n\n\n    return (<>\n        <Modal show={show} scrollable={true} size=\"xl\" fullscreen onHide={handleClose} animation={false}>\n            <Modal.Header>\n                <Modal.Title>Quotation Preview</Modal.Title>\n                <div className=\"col align-self-end text-end\">\n                    <Button variant=\"primary\" className=\"btn btn-primary mb-3\" onClick={handlePrint}>\n                        <i className=\"bi bi-printer\"></i> Print\n                    </Button>\n                    <button\n                        type=\"button\"\n                        className=\"btn-close\"\n                        onClick={handleClose}\n                        aria-label=\"Close\"\n                    ></button>\n\n                </div>\n\n            </Modal.Header>\n            <Modal.Body>\n                <div ref={printAreaRef}>\n                    <QuotationPreviewContent model={model} />\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                {/*\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Save Changes\n                </Button>\n                */}\n            </Modal.Footer>\n        </Modal>\n    </>);\n\n});\n\nexport default QuotationPreview;"]},"metadata":{},"sourceType":"module"}