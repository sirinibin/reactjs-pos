{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/purchase_return/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PurchaseReturnCreate from \"./create.js\";\nimport PurchaseReturnView from \"./view.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport PurchaseReturnPaymentCreate from \"./../purchase_return_payment/create.js\";\nimport PurchaseReturnPaymentDetailsView from \"./../purchase_return_payment/view.js\";\nimport PurchaseReturnPaymentIndex from \"./../purchase_return_payment/index.js\";\nimport ReactExport from 'react-data-export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n\nfunction PurchaseReturnIndex(props) {\n  _s();\n\n  var _totalPaidPurchaseRet;\n\n  const cookies = new Cookies();\n  let [totalPurchaseReturn, setTotalPurchaseReturn] = useState(0.00);\n  let [vatPrice, setVatPrice] = useState(0.00);\n  let [totalDiscount, setTotalDiscount] = useState(0.00); //list\n\n  const [purchasereturnList, setPurchaseReturnList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false);\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n  let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n  let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n  let [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Vendor Auto Suggestion\n\n  const [vendorOptions, setVendorOptions] = useState([]);\n  const [selectedVendors, setSelectedVendors] = useState([]); //Created By User Auto Suggestion\n\n  const [userOptions, setUserOptions] = useState([]);\n  const [selectedCreatedByUsers, setSelectedCreatedByUsers] = useState([]); //Status Auto Suggestion\n\n  const statusOptions = [{\n    id: \"sent\",\n    name: \"Sent\"\n  }, {\n    id: \"pending\",\n    name: \"Pending\"\n  }, {\n    id: \"accepted\",\n    name: \"Accepted\"\n  }, {\n    id: \"rejected\",\n    name: \"Rejected\"\n  }, {\n    id: \"cancelled\",\n    name: \"Cancelled\"\n  }, {\n    id: \"deleted\",\n    name: \"Deleted\"\n  }];\n  const [selectedStatusList, setSelectedStatusList] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let [allPurchaseReturns, setAllPurchaseReturns] = useState([]);\n  let [excelData, setExcelData] = useState([]);\n  let [purchaseReturnReportFileName, setPurchaseReturnReportFileName] = useState(\"Purchase Return Report\");\n  let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n  function prepareExcelData() {\n    console.log(\"Inside prepareExcelData()\");\n    var groupedByDate = [];\n\n    for (var i = 0; i < allPurchaseReturns.length; i++) {\n      let date = format(new Date(allPurchaseReturns[i].date), \"dd-MMM-yyyy\");\n\n      if (!groupedByDate[date]) {\n        groupedByDate[date] = [];\n      }\n\n      groupedByDate[date].push(allPurchaseReturns[i]);\n    }\n\n    console.log(\"groupedByDate:\", groupedByDate);\n    excelData = [{\n      columns: [{\n        title: \"Description\",\n        width: {\n          wch: 50\n        }\n      }, //pixels width \n      {\n        title: \"Quantity\",\n        width: {\n          wpx: 90\n        }\n      }, //char width \n      {\n        title: \"Unit\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Rate\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Gross\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Disc %\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Disc\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Tax %\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Tax Amount\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Net Amount\",\n        width: {\n          wpx: 90\n        }\n      }],\n      data: []\n    }];\n    let totalAmount = 0;\n    let totalTax = 0;\n    let invoiceCount = 0;\n\n    for (let purchaseReturnDate in groupedByDate) {\n      console.log(\"purchaseReturnDate:\", purchaseReturnDate);\n      excelData[0].data.push([{\n        value: \"Inv Date: \" + purchaseReturnDate\n      }]);\n      let dayTotal = 0.00;\n      let dayTax = 0.00;\n\n      for (var i = 0; i < groupedByDate[purchaseReturnDate].length > 0; i++) {\n        invoiceCount++;\n        let purchaseReturn = groupedByDate[purchaseReturnDate][i];\n        let invoiceNo = purchaseReturn.vendor_invoice_no ? purchaseReturn.vendor_invoice_no + \" / \" + purchaseReturn.code : purchaseReturn.code;\n        excelData[0].data.push([{\n          value: \"Inv No (\" + invoiceNo + \") - \" + invoiceCount + \" [\" + purchaseReturn.vendor_name + \"]\"\n        }]);\n\n        if (!purchaseReturn.products) {\n          continue;\n        }\n\n        for (var j = 0; j < purchaseReturn.products.length; j++) {\n          let product = purchaseReturn.products[j];\n          excelData[0].data.push([{\n            value: product.name\n          }, {\n            value: product.quantity.toFixed(2)\n          }, {\n            value: product.unit ? product.unit : \"PCs\"\n          }, {\n            value: product.purchasereturn_unit_price ? product.purchasereturn_unit_price.toFixed(2) : 0.00\n          }, {\n            value: (product.purchasereturn_unit_price * product.quantity).toFixed(2)\n          }, {\n            value: \"0.00\"\n          }, {\n            value: \"0.00\"\n          }, {\n            value: \"15.00\"\n          }, {\n            value: ((product.purchasereturn_unit_price * product.quantity).toFixed(2) * 0.15).toFixed(2)\n          }, {\n            value: (product.purchasereturn_unit_price * product.quantity).toFixed(2)\n          }]);\n        }\n\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Discount\"\n        }, {\n          value: purchaseReturn.discount.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Tax\"\n        }, {\n          value: purchaseReturn.vat_price.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Total\"\n        }, {\n          value: (purchaseReturn.total - purchaseReturn.discount).toFixed(2)\n        }]);\n        dayTotal += purchaseReturn.total - purchaseReturn.discount;\n        dayTax += purchaseReturn.vat_price;\n      }\n\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day Tax\"\n      }, {\n        value: dayTax.toFixed(2)\n      }]);\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day Total\"\n      }, {\n        value: dayTotal.toFixed(2)\n      }]);\n      totalAmount += dayTotal;\n      totalTax += dayTax;\n    } //end for1\n\n\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total Tax\"\n    }, {\n      value: totalTax.toFixed(2)\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total Amount\"\n    }, {\n      value: totalAmount.toFixed(2)\n    }]);\n    setExcelData(excelData);\n    console.log(\"excelData:\", excelData);\n  }\n\n  function makePurchaseReturnReportFilename() {\n    purchaseReturnReportFileName = \"Purchase Return Report\";\n\n    if (searchParams[\"from_date\"] && searchParams[\"to_date\"]) {\n      purchaseReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + searchParams[\"to_date\"];\n    } else if (searchParams[\"from_date\"]) {\n      purchaseReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + format(new Date(), \"dd-MMM-yyyy\");\n    } else if (searchParams[\"to_date\"]) {\n      purchaseReturnReportFileName += \" - Upto \" + searchParams[\"to_date\"];\n    } else if (searchParams[\"date_str\"]) {\n      purchaseReturnReportFileName += \" of \" + searchParams[\"date_str\"];\n    }\n\n    setPurchaseReturnReportFileName(purchaseReturnReportFileName);\n  }\n\n  async function getAllPurchaseReturns() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,code,vendor_invoice_no,date,total,net_total,discount_percent,discount,products,vendor_name,created_at,vat_price\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    console.log(\"Timezone:\", parseFloat(diff / 60));\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    let size = 500;\n    let purchaseReturns = [];\n    var pageNo = 1;\n    makePurchaseReturnReportFilename();\n\n    for (; true;) {\n      fettingAllRecordsInProgress = true;\n      setFettingAllRecordsInProgress(true);\n      let res = await fetch(\"/v1/purchase-return?\" + Select + queryParams + \"&sort=\" + sortOrder + sortField + \"&page=\" + pageNo + \"&limit=\" + size, requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          const error = data && data.errors;\n          return Promise.reject(error);\n        }\n\n        setIsListLoading(false);\n\n        if (!data.result || data.result.length === 0) {\n          return [];\n        } // console.log(\"Orders:\", orders);\n\n\n        return data.result;\n      }).catch(error => {\n        console.log(error);\n        return []; //break;\n      });\n\n      if (res.length === 0) {\n        break;\n      }\n\n      purchaseReturns = purchaseReturns.concat(res);\n      pageNo++;\n    }\n\n    allPurchaseReturns = purchaseReturns;\n    setAllPurchaseReturns(purchaseReturns);\n    console.log(\"allPurchaseReturns:\", allPurchaseReturns);\n    prepareExcelData();\n    fettingAllRecordsInProgress = false;\n    setFettingAllRecordsInProgress(false);\n  } //Search params\n\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortOrder, setSortOrder] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  }\n\n  async function suggestVendors(searchTerm) {\n    console.log(\"Inside handle suggestVendors\");\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = `&${queryString}`;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n    let result = await fetch(`/v1/vendor?${Select}${queryString}`, requestOptions);\n    let data = await result.json();\n    setVendorOptions(data.result);\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setVendorOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setUserOptions(data.result);\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      page = 1;\n      searchParams[field] = \"\";\n      setPage(page);\n      list();\n      return;\n    }\n\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    value = format(d, \"MMM dd yyyy\");\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  const [selectedPaymentMethodList, setSelectedPaymentMethodList] = useState([]);\n  const [selectedPaymentStatusList, setSelectedPaymentStatusList] = useState([]);\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByUsers(values);\n    } else if (field === \"vendor_id\") {\n      setSelectedVendors(values);\n    } else if (field === \"status\") {\n      setSelectedStatusList(values);\n    } else if (field === \"payment_status\") {\n      setSelectedPaymentStatusList(values);\n    } else if (field === \"payment_methods\") {\n      setSelectedPaymentMethodList(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  let [totalPaidPurchaseReturn, setTotalPaidPurchaseReturn] = useState(0.00);\n  let [totalUnPaidPurchaseReturn, setTotalUnPaidPurchaseReturn] = useState(0.00);\n  let [totalCashPurchaseReturn, setTotalCashPurchaseReturn] = useState(0.00);\n  let [totalBankAccountPurchaseReturn, setTotalBankAccountPurchaseReturn] = useState(0.00);\n\n  function list() {\n    excelData = [];\n    setExcelData(excelData);\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,code,purchase_code,cash_discount,purchase_id,date,net_total,created_by_name,vendor_name,vendor_invoice_no,status,created_at,total_payment_paid,payments_count,payment_methods,payment_status,balance_amount,store_id\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    if (props.purchase) {\n      searchParams.purchase_id = props.purchase.id;\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    setIsListLoading(true);\n    fetch(\"/v1/purchase-return?\" + Select + queryParams + \"&sort=\" + sortOrder + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setPurchaseReturnList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      totalPurchaseReturn = data.meta.total_purchase_return;\n      setTotalPurchaseReturn(totalPurchaseReturn);\n      vatPrice = data.meta.vat_price;\n      setVatPrice(vatPrice);\n      totalDiscount = data.meta.discount;\n      setTotalDiscount(totalDiscount);\n      totalCashDiscount = data.meta.cash_discount;\n      setTotalCashDiscount(totalCashDiscount);\n      totalPaidPurchaseReturn = data.meta.paid_purchase_return;\n      setTotalPaidPurchaseReturn(totalPaidPurchaseReturn);\n      totalUnPaidPurchaseReturn = data.meta.unpaid_purchase_return;\n      setTotalUnPaidPurchaseReturn(totalUnPaidPurchaseReturn);\n      totalCashPurchaseReturn = data.meta.cash_purchase_return;\n      setTotalCashPurchaseReturn(totalCashPurchaseReturn);\n      totalBankAccountPurchaseReturn = data.meta.bank_account_purchase_return;\n      setTotalBankAccountPurchaseReturn(totalBankAccountPurchaseReturn);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortOrder = sortOrder === \"-\" ? \"\" : \"-\";\n    setSortOrder(sortOrder);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  }\n\n  const CreateFormRef = useRef();\n\n  function openUpdateForm(id) {\n    CreateFormRef.current.open(id);\n  } //Purchase Return Payments\n\n\n  const PurchaseReturnPaymentCreateRef = useRef();\n\n  function openPurchaseReturnPaymentCreateForm(purchaseReturn) {\n    PurchaseReturnPaymentCreateRef.current.open(undefined, purchaseReturn);\n  }\n\n  const PurchaseReturnPaymentDetailsViewRef = useRef();\n\n  function openPurchaseReturnPaymentDetailsView(id) {\n    PurchaseReturnPaymentDetailsViewRef.current.open(id);\n  }\n\n  function openPurchaseReturnPaymentUpdateForm(id) {\n    PurchaseReturnPaymentCreateRef.current.open(id);\n  }\n\n  const [selectedPurchaseReturn, setSelectedPurchaseReturn] = useState({});\n  let [showPurchaseReturnPaymentHistory, setShowPurchaseReturnPaymentHistory] = useState(false);\n\n  function openPaymentsDialogue(purchaseReturn) {\n    setSelectedPurchaseReturn(purchaseReturn);\n    showPurchaseReturnPaymentHistory = true;\n    setShowPurchaseReturnPaymentHistory(true);\n  }\n\n  function handlePaymentHistoryClose() {\n    showPurchaseReturnPaymentHistory = false;\n    setShowPurchaseReturnPaymentHistory(false); //list();\n  }\n\n  const PurchaseReturnPaymentListRef = useRef();\n  const paymentStatusOptions = [{\n    id: \"paid\",\n    name: \"Paid\"\n  }, {\n    id: \"not_paid\",\n    name: \"Not Paid\"\n  }, {\n    id: \"paid_partially\",\n    name: \"Paid partially\"\n  }];\n  const paymentMethodOptions = [{\n    id: \"cash\",\n    name: \"cash\"\n  }, {\n    id: \"bank_account\",\n    name: \"Bank Account / Debit / Credit card\"\n  }];\n  let [totalCashDiscount, setTotalCashDiscount] = useState(0.00);\n\n  function openCreateForm() {\n    CreateFormRef.current.open(undefined, props.purchase.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PurchaseReturnCreate, {\n      ref: CreateFormRef,\n      refreshList: list,\n      refreshPurchaseList: props.refreshPurchaseList,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PurchaseReturnView, {\n      ref: DetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PurchaseReturnPaymentCreate, {\n      ref: PurchaseReturnPaymentCreateRef,\n      showToastMessage: props.showToastMessage,\n      openDetailsView: openPurchaseReturnPaymentDetailsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PurchaseReturnPaymentDetailsView, {\n      ref: PurchaseReturnPaymentDetailsViewRef,\n      openUpdateForm: openPurchaseReturnPaymentUpdateForm,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Purchase Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalPurchaseReturn,\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Paid Purchase Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: (_totalPaidPurchaseRet = totalPaidPurchaseReturn) === null || _totalPaidPurchaseRet === void 0 ? void 0 : _totalPaidPurchaseRet.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-end\",\n            children: [\"Cash Purchase Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalCashPurchaseReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-end\",\n            children: [\"Bank Account Purchase Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalBankAccountPurchaseReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Credit Purchase Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalUnPaidPurchaseReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Cash Discounts: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalCashDiscount.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Purchase return Discounts: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalDiscount.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"VAT Collected: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: vatPrice.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Purchase Returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-end\",\n          children: [/*#__PURE__*/_jsxDEV(ExcelFile, {\n            filename: purchaseReturnReportFileName,\n            element: excelData.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"btn btn-primary mb-3 success\",\n              children: \"Download Purchase Return Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 108\n            }, this) : \"\",\n            children: /*#__PURE__*/_jsxDEV(ExcelSheet, {\n              dataSet: excelData,\n              name: purchaseReturnReportFileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 25\n          }, this), excelData.length == 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn btn-primary mb-3\",\n            onClick: getAllPurchaseReturns,\n            children: fettingAllRecordsInProgress ? \"Preparing..\" : \"Purchase Return Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 50\n          }, this) : \"\", \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-end\",\n            children: props.purchase ? /*#__PURE__*/_jsxDEV(Button, {\n              hide: true.toString(),\n              variant: \"primary\",\n              className: \"btn btn-primary mb-3\",\n              onClick: openCreateForm,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-plus-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 33\n              }, this), \" Create\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 47\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start\",\n                    children: \"No Purchase Returns to display\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 992,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  border: \"solid 0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-start\",\n                  style: {\n                    border: \"solid 0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setIsRefreshInProcess(true);\n                      list();\n                    },\n                    variant: \"primary\",\n                    disabled: isRefreshInProcess,\n                    children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1007,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-refresh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1015,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"visually-hidden\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1017,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 997,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-center\",\n                  children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"grow\",\n                    variant: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1022,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1020,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-end\",\n                  children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Size:\\xA0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1028,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: pageSize,\n                      onChange: e => {\n                        changePageSize(e.target.value);\n                      },\n                      className: \"form-control pull-right\",\n                      style: {\n                        border: \"solid 1px\",\n                        borderColor: \"silver\",\n                        width: \"55px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5\",\n                        children: \"5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1041,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10\",\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1044,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"20\",\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1047,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"40\",\n                        children: \"40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1048,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"50\",\n                        children: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1049,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"100\",\n                        children: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1050,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1029,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  style: {\n                    border: \"solid 0px\"\n                  },\n                  children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-start\",\n                      children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1086,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1085,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-end\",\n                      children: [\"page \", page, \" of \", totalPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1093,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1092,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                style: {\n                  overflowX: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-sm table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"code\");\n                          },\n                          children: [\"ID\", sortField === \"code\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1116,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"code\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1119,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1105,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1104,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"vendor_invoice_no\");\n                          },\n                          children: [\"Vendor Invoice No.\", sortField === \"vendor_invoice_no\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1135,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"vendor_invoice_no\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1138,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1124,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1123,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"vendor_name\");\n                          },\n                          children: [\"Vendor\", sortField === \"vendor_name\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1155,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"vendor_name\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1158,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1143,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1142,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"purchase_code\");\n                          },\n                          children: [\"Purchase ID\", sortField === \"code\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1174,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"code\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1177,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1163,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1162,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"date\");\n                          },\n                          children: [\"Date\", sortField === \"date\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1193,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"date\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1196,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1182,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1181,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_total\");\n                          },\n                          children: [\"Net Total\", sortField === \"net_total\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1212,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_total\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1215,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1201,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1200,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"cash_discount\");\n                          },\n                          children: [\"Cash Discount\", sortField === \"cash_discount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1231,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"cash_discount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1234,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1219,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"total_payment_paid\");\n                          },\n                          children: [\"Amount Paid\", sortField === \"total_payment_paid\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1250,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"total_payment_paid\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1253,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1239,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1238,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"balance_amount\");\n                          },\n                          children: [\"Balance\", sortField === \"balance_amount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1269,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"balance_amount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1272,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1258,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1257,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payments_count\");\n                          },\n                          children: [\"No.of Payments\", sortField === \"payments_count\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1288,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payments_count\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1291,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1277,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1276,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payment_status\");\n                          },\n                          children: [\"Payment Status\", sortField === \"payment_status\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1308,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payment_status\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1311,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1297,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1296,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payment_methods\");\n                          },\n                          children: [\"Payment Methods\", sortField === \"payment_methods\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1327,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payment_methods\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1330,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1316,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1315,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_by\");\n                          },\n                          children: [\"Created By\", sortField === \"created_by\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1346,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_by\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1349,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1335,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1334,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_at\");\n                          },\n                          children: [\"Created At\", sortField === \"created_at\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1365,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_at\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1368,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1354,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1353,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1372,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1103,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1102,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"code\",\n                          onChange: e => searchByFieldValue(\"code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1379,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1378,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"vendor_invoice_no\",\n                          onChange: e => searchByFieldValue(\"vendor_invoice_no\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1389,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1388,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"vendor_id\",\n                          labelKey: \"search_label\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"vendor_id\", selectedItems);\n                          },\n                          options: vendorOptions,\n                          placeholder: \"name or mob\",\n                          selected: selectedVendors,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestVendors(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1399,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1398,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"purchase_code\",\n                          onChange: e => searchByFieldValue(\"purchase_code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1419,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1418,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            minWidth: \"125px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"date_str\",\n                            value: dateValue,\n                            selected: selectedDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            isClearable: true,\n                            onChange: date => {\n                              if (!date) {\n                                setDateValue(\"\");\n                                searchByDateField(\"date_str\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"date_str\", date);\n                              selectedDate = date;\n                              setSelectedDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1430,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                            style: {\n                              color: \"blue\",\n                              textDecoration: \"underline\",\n                              cursor: \"pointer\"\n                            },\n                            onClick: e => setShowDateRange(!showDateRange),\n                            children: showDateRange ? \"Less..\" : \"More..\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1448,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1458,\n                            columnNumber: 53\n                          }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-left\",\n                            children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                              id: \"from_date\",\n                              value: fromDateValue,\n                              selected: selectedDate,\n                              className: \"form-control\",\n                              dateFormat: \"MMM dd yyyy\",\n                              onChange: date => {\n                                if (!date) {\n                                  setFromDateValue(\"\");\n                                  searchByDateField(\"from_date\", \"\");\n                                  return;\n                                }\n\n                                searchByDateField(\"from_date\", date);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1463,\n                              columnNumber: 61\n                            }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                              id: \"to_date\",\n                              value: toDateValue,\n                              selected: selectedDate,\n                              className: \"form-control\",\n                              dateFormat: \"MMM dd yyyy\",\n                              onChange: date => {\n                                if (!date) {\n                                  setToDateValue(\"\");\n                                  searchByDateField(\"to_date\", \"\");\n                                  return;\n                                }\n\n                                searchByDateField(\"to_date\", date);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1479,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1461,\n                            columnNumber: 57\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1429,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1428,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_total\",\n                          onChange: e => searchByFieldValue(\"net_total\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1499,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1498,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"cash_discount\",\n                          onChange: e => searchByFieldValue(\"cash_discount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1509,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1508,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"total_payment_paid\",\n                          onChange: e => searchByFieldValue(\"total_payment_paid\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1519,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1518,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"balance_amount\",\n                          onChange: e => searchByFieldValue(\"balance_amount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1529,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1528,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"payments_count\",\n                          onChange: e => searchByFieldValue(\"payments_count\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1539,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1538,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"payment_status\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"payment_status\", selectedItems);\n                          },\n                          options: paymentStatusOptions,\n                          placeholder: \"Select Payment Status\",\n                          selected: selectedPaymentStatusList,\n                          highlightOnlyResult: true,\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1549,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1548,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"payment_methods\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"payment_methods\", selectedItems);\n                          },\n                          options: paymentMethodOptions,\n                          placeholder: \"Select payment methods\",\n                          selected: selectedPaymentMethodList,\n                          highlightOnlyResult: true,\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1566,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1565,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"created_by\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"created_by\", selectedItems);\n                          },\n                          options: userOptions,\n                          placeholder: \"Select Users\",\n                          selected: selectedCreatedByUsers,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestUsers(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1583,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1582,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"created_at\",\n                          value: createdAtValue,\n                          selected: selectedDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              setCreatedAtValue(\"\");\n                              searchByDateField(\"created_at\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"created_at\", date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1603,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowCreatedAtDateRange(!showCreatedAtDateRange),\n                          children: showCreatedAtDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1618,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1630,\n                          columnNumber: 53\n                        }, this), showCreatedAtDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_from\",\n                            value: createdAtFromValue,\n                            selected: selectedDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtFromValue(\"\");\n                                searchByDateField(\"created_at_from\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_from\", date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1635,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_to\",\n                            value: createdAtToValue,\n                            selected: selectedDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtToValue(\"\");\n                                searchByDateField(\"created_at_to\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_to\", date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1651,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1633,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1602,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1669,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1377,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1376,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"text-center\",\n                    children: purchasereturnList && purchasereturnList.map(purchasereturn => {\n                      var _purchasereturn$cash_, _purchasereturn$total, _purchasereturn$balan;\n\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.code\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1677,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.vendor_invoice_no\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1678,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.vendor_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1679,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.purchase_code\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1680,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: format(new Date(purchasereturn.date), \"MMM dd yyyy h:mma\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1681,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.net_total\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1687,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_purchasereturn$cash_ = purchasereturn.cash_discount) === null || _purchasereturn$cash_ === void 0 ? void 0 : _purchasereturn$cash_.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1688,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openPaymentsDialogue(purchasereturn);\n                            },\n                            children: (_purchasereturn$total = purchasereturn.total_payment_paid) === null || _purchasereturn$total === void 0 ? void 0 : _purchasereturn$total.toFixed(2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1690,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1689,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_purchasereturn$balan = purchasereturn.balance_amount) === null || _purchasereturn$balan === void 0 ? void 0 : _purchasereturn$balan.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1696,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openPaymentsDialogue(purchasereturn);\n                            },\n                            children: purchasereturn.payments_count\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1698,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1697,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [purchasereturn.payment_status == \"paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-success\",\n                            children: \"Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1706,\n                            columnNumber: 65\n                          }, this) : \"\", purchasereturn.payment_status == \"paid_partially\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-warning\",\n                            children: \"Paid Partially\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1710,\n                            columnNumber: 65\n                          }, this) : \"\", purchasereturn.payment_status == \"not_paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-danger\",\n                            children: \"Not Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1714,\n                            columnNumber: 65\n                          }, this) : \"\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1704,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.payment_methods && purchasereturn.payment_methods.map(name => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-info\",\n                            children: name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1721,\n                            columnNumber: 69\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1718,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: purchasereturn.created_by_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1724,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: format(new Date(purchasereturn.created_at), \"MMM dd yyyy h:mma\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1725,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btn btn-light btn-sm\",\n                            onClick: () => {\n                              openUpdateForm(purchasereturn.id);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-pencil\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1736,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1733,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btn btn-primary btn-sm\",\n                            onClick: () => {\n                              openDetailsView(purchasereturn.id);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-eye\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1743,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1740,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-outline-secondary dropdown-toggle\",\n                            type: \"button\",\n                            \"data-bs-toggle\": \"dropdown\",\n                            \"aria-expanded\": \"false\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1749,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                            className: \"dropdown-menu\",\n                            children: /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                                className: \"dropdown-item\",\n                                onClick: () => {\n                                  openPurchaseReturnPaymentCreateForm(purchasereturn);\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"bi bi-plus\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1760,\n                                  columnNumber: 73\n                                }, this), \"\\xA0 Add Payment\"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1757,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1756,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1755,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1731,\n                          columnNumber: 57\n                        }, this)]\n                      }, purchasereturn.code, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1676,\n                        columnNumber: 53\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1673,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 33\n              }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                breakLabel: \"...\",\n                nextLabel: \"next >\",\n                onPageChange: event => {\n                  changePage(event.selected + 1);\n                },\n                pageRangeDisplayed: 5,\n                pageCount: totalPages,\n                previousLabel: \"< previous\",\n                renderOnZeroPageCount: null,\n                className: \"pagination  flex-wrap\",\n                pageClassName: \"page-item\",\n                pageLinkClassName: \"page-link\",\n                activeClassName: \"active\",\n                previousClassName: \"page-item\",\n                nextClassName: \"page-item\",\n                previousLinkClassName: \"page-link\",\n                nextLinkClassName: \"page-link\",\n                forcePage: page - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1775,\n                columnNumber: 47\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showPurchaseReturnPaymentHistory,\n      size: \"lg\",\n      onHide: handlePaymentHistoryClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Payment history of Purchase return #\", selectedPurchaseReturn.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1803,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handlePaymentHistoryClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1806,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1805,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1802,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(PurchaseReturnPaymentIndex, {\n          ref: PurchaseReturnPaymentListRef,\n          showToastMessage: props.showToastMessage,\n          purchaseReturn: selectedPurchaseReturn,\n          refreshPurchaseReturnList: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1815,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1801,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PurchaseReturnIndex, \"kGfA53Wrvl5M25VPXp55z/qb+MU=\");\n\n_c = PurchaseReturnIndex;\nexport default PurchaseReturnIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"PurchaseReturnIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/purchase_return/index.js"],"names":["React","useState","useEffect","useRef","PurchaseReturnCreate","PurchaseReturnView","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","Modal","ReactPaginate","NumberFormat","PurchaseReturnPaymentCreate","PurchaseReturnPaymentDetailsView","PurchaseReturnPaymentIndex","ReactExport","ExcelFile","ExcelSheet","PurchaseReturnIndex","props","cookies","totalPurchaseReturn","setTotalPurchaseReturn","vatPrice","setVatPrice","totalDiscount","setTotalDiscount","purchasereturnList","setPurchaseReturnList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showDateRange","setShowDateRange","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","selectedCreatedAtDate","setSelectedCreatedAtDate","selectedCreatedAtFromDate","setSelectedCreatedAtFromDate","selectedCreatedAtToDate","setSelectedCreatedAtToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","vendorOptions","setVendorOptions","selectedVendors","setSelectedVendors","userOptions","setUserOptions","selectedCreatedByUsers","setSelectedCreatedByUsers","statusOptions","id","name","selectedStatusList","setSelectedStatusList","list","allPurchaseReturns","setAllPurchaseReturns","excelData","setExcelData","purchaseReturnReportFileName","setPurchaseReturnReportFileName","fettingAllRecordsInProgress","setFettingAllRecordsInProgress","prepareExcelData","console","log","groupedByDate","i","length","date","push","columns","title","width","wch","wpx","data","totalAmount","totalTax","invoiceCount","purchaseReturnDate","value","dayTotal","dayTax","purchaseReturn","invoiceNo","vendor_invoice_no","code","vendor_name","products","j","product","quantity","toFixed","unit","purchasereturn_unit_price","discount","vat_price","total","makePurchaseReturnReportFilename","searchParams","getAllPurchaseReturns","requestOptions","method","headers","Authorization","get","Select","store_id","d","diff","getTimezoneOffset","parseFloat","setSearchParams","queryParams","ObjectToSearchQueryParams","size","purchaseReturns","pageNo","res","fetch","sortOrder","sortField","then","response","isJson","includes","json","ok","error","errors","Promise","reject","result","catch","concat","setSortField","setSortOrder","object","Object","keys","map","key","join","suggestVendors","searchTerm","params","queryString","suggestUsers","searchByFieldValue","field","searchByDateField","toUTCString","selectedPaymentMethodList","setSelectedPaymentMethodList","selectedPaymentStatusList","setSelectedPaymentStatusList","searchByMultipleValuesField","values","model","totalPaidPurchaseReturn","setTotalPaidPurchaseReturn","totalUnPaidPurchaseReturn","setTotalUnPaidPurchaseReturn","totalCashPurchaseReturn","setTotalCashPurchaseReturn","totalBankAccountPurchaseReturn","setTotalBankAccountPurchaseReturn","purchase","purchase_id","pageCount","parseInt","total_count","meta","total_purchase_return","totalCashDiscount","cash_discount","setTotalCashDiscount","paid_purchase_return","unpaid_purchase_return","cash_purchase_return","bank_account_purchase_return","sort","changePageSize","changePage","newPage","DetailsViewRef","openDetailsView","current","open","CreateFormRef","openUpdateForm","PurchaseReturnPaymentCreateRef","openPurchaseReturnPaymentCreateForm","undefined","PurchaseReturnPaymentDetailsViewRef","openPurchaseReturnPaymentDetailsView","openPurchaseReturnPaymentUpdateForm","selectedPurchaseReturn","setSelectedPurchaseReturn","showPurchaseReturnPaymentHistory","setShowPurchaseReturnPaymentHistory","openPaymentsDialogue","handlePaymentHistoryClose","PurchaseReturnPaymentListRef","paymentStatusOptions","paymentMethodOptions","openCreateForm","refreshPurchaseList","showToastMessage","toString","border","e","target","borderColor","event","selected","overflowX","textDecoration","cursor","selectedItems","minWidth","color","purchasereturn","purchase_code","net_total","total_payment_paid","balance_amount","payments_count","payment_status","payment_methods","created_by_name","created_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport PurchaseReturnCreate from \"./create.js\";\nimport PurchaseReturnView from \"./view.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge,Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\n\nimport PurchaseReturnPaymentCreate from \"./../purchase_return_payment/create.js\";\nimport PurchaseReturnPaymentDetailsView from \"./../purchase_return_payment/view.js\";\nimport PurchaseReturnPaymentIndex from \"./../purchase_return_payment/index.js\";\n\nimport ReactExport from 'react-data-export';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n\n\nfunction PurchaseReturnIndex(props) {\n    const cookies = new Cookies();\n\n    let [totalPurchaseReturn, setTotalPurchaseReturn] = useState(0.00);\n    let [vatPrice, setVatPrice] = useState(0.00);\n    let [totalDiscount, setTotalDiscount] = useState(0.00);\n\n    //list\n    const [purchasereturnList, setPurchaseReturnList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n    let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n    let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n\n    let [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Vendor Auto Suggestion\n    const [vendorOptions, setVendorOptions] = useState([]);\n    const [selectedVendors, setSelectedVendors] = useState([]);\n\n    //Created By User Auto Suggestion\n    const [userOptions, setUserOptions] = useState([]);\n    const [selectedCreatedByUsers, setSelectedCreatedByUsers] = useState([]);\n\n    //Status Auto Suggestion\n    const statusOptions = [\n        {\n            id: \"sent\",\n            name: \"Sent\",\n        },\n        {\n            id: \"pending\",\n            name: \"Pending\",\n        },\n        {\n            id: \"accepted\",\n            name: \"Accepted\",\n        },\n        {\n            id: \"rejected\",\n            name: \"Rejected\",\n        },\n        {\n            id: \"cancelled\",\n            name: \"Cancelled\",\n        },\n        {\n            id: \"deleted\",\n            name: \"Deleted\",\n        },\n    ];\n\n    const [selectedStatusList, setSelectedStatusList] = useState([]);\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    let [allPurchaseReturns, setAllPurchaseReturns] = useState([]);\n    let [excelData, setExcelData] = useState([]);\n    let [purchaseReturnReportFileName, setPurchaseReturnReportFileName] = useState(\"Purchase Return Report\");\n    let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n    function prepareExcelData() {\n        console.log(\"Inside prepareExcelData()\");\n        var groupedByDate = [];\n        for (var i = 0; i < allPurchaseReturns.length; i++) {\n            let date = format(\n                new Date(allPurchaseReturns[i].date),\n                \"dd-MMM-yyyy\"\n            );\n            if (!groupedByDate[date]) {\n                groupedByDate[date] = [];\n            }\n\n            groupedByDate[date].push(allPurchaseReturns[i]);\n\n        }\n\n        console.log(\"groupedByDate:\", groupedByDate);\n\n        excelData = [{\n            columns: [\n                { title: \"Description\", width: { wch: 50 } },//pixels width \n                { title: \"Quantity\", width: { wpx: 90 } },//char width \n                { title: \"Unit\", width: { wpx: 90 } },\n                { title: \"Rate\", width: { wpx: 90 } },\n                { title: \"Gross\", width: { wpx: 90 } },\n                { title: \"Disc %\", width: { wpx: 90 } },\n                { title: \"Disc\", width: { wpx: 90 } },\n                { title: \"Tax %\", width: { wpx: 90 } },\n                { title: \"Tax Amount\", width: { wpx: 90 } },\n                { title: \"Net Amount\", width: { wpx: 90 } },\n            ],\n            data: [],\n        }];\n\n\n        let totalAmount = 0;\n        let totalTax = 0;\n\n        let invoiceCount = 0;\n        for (let purchaseReturnDate in groupedByDate) {\n\n            console.log(\"purchaseReturnDate:\", purchaseReturnDate);\n            excelData[0].data.push([{ value: \"Inv Date: \" + purchaseReturnDate }]);\n            let dayTotal = 0.00;\n            let dayTax = 0.00;\n\n            for (var i = 0; i < groupedByDate[purchaseReturnDate].length > 0; i++) {\n                invoiceCount++;\n                let purchaseReturn = groupedByDate[purchaseReturnDate][i];\n                let invoiceNo = purchaseReturn.vendor_invoice_no ? purchaseReturn.vendor_invoice_no + \" / \" + purchaseReturn.code : purchaseReturn.code;\n                excelData[0].data.push([{ value: \"Inv No (\" + invoiceNo + \") - \" + invoiceCount + \" [\" + purchaseReturn.vendor_name + \"]\" }]);\n\n                if (!purchaseReturn.products) {\n                    continue;\n                }\n\n                for (var j = 0; j < purchaseReturn.products.length; j++) {\n\n                    let product = purchaseReturn.products[j];\n\n                    excelData[0].data.push([\n                        {\n                            value: product.name\n                        },\n                        {\n                            value: product.quantity.toFixed(2),\n                        },\n                        {\n                            value: product.unit ? product.unit : \"PCs\",\n                        },\n                        {\n                            value: product.purchasereturn_unit_price ? product.purchasereturn_unit_price.toFixed(2) : 0.00,\n                        },\n                        {\n                            value: (product.purchasereturn_unit_price * product.quantity).toFixed(2)\n                        },\n                        {\n                            value: \"0.00\",\n                        },\n                        {\n                            value: \"0.00\",\n                        },\n                        {\n                            value: \"15.00\",\n                        },\n                        {\n                            value: ((product.purchasereturn_unit_price * product.quantity).toFixed(2) * 0.15).toFixed(2),\n                        },\n                        {\n                            value: (product.purchasereturn_unit_price * product.quantity).toFixed(2),\n                        },\n                    ]);\n                }\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Discount\",\n                    }, {\n                        value: purchaseReturn.discount.toFixed(2),\n                    },\n                ]);\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Tax\",\n                    }, {\n                        value: purchaseReturn.vat_price.toFixed(2),\n                    },\n                ]);\n\n\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Total\",\n                    }, {\n                        value: (purchaseReturn.total - purchaseReturn.discount).toFixed(2),\n                    },\n                ]);\n\n                dayTotal += (purchaseReturn.total - purchaseReturn.discount);\n                dayTax += purchaseReturn.vat_price;\n\n            }\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day Tax\",\n                }, {\n                    value: dayTax.toFixed(2),\n                },\n            ]);\n\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day Total\",\n                }, {\n                    value: dayTotal.toFixed(2),\n                },\n            ]);\n\n\n            totalAmount += dayTotal;\n            totalTax += dayTax;\n\n        }//end for1\n\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"\",\n            }, {\n                value: \"\",\n            },\n        ]);\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total Tax\",\n            }, {\n                value: totalTax.toFixed(2),\n            },\n        ]);\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total Amount\",\n            }, {\n                value: totalAmount.toFixed(2),\n            },\n        ]);\n\n        setExcelData(excelData);\n\n        console.log(\"excelData:\", excelData);\n    }\n\n    function makePurchaseReturnReportFilename() {\n        purchaseReturnReportFileName = \"Purchase Return Report\";\n        if (searchParams[\"from_date\"] && searchParams[\"to_date\"]) {\n            purchaseReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + searchParams[\"to_date\"];\n        } else if (searchParams[\"from_date\"]) {\n            purchaseReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + format(\n                new Date(),\n                \"dd-MMM-yyyy\"\n            );\n        } else if (searchParams[\"to_date\"]) {\n            purchaseReturnReportFileName += \" - Upto \" + searchParams[\"to_date\"];\n        } else if (searchParams[\"date_str\"]) {\n            purchaseReturnReportFileName += \" of \" + searchParams[\"date_str\"];\n        }\n\n        setPurchaseReturnReportFileName(purchaseReturnReportFileName);\n    }\n    async function getAllPurchaseReturns() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,code,vendor_invoice_no,date,total,net_total,discount_percent,discount,products,vendor_name,created_at,vat_price\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        console.log(\"Timezone:\", parseFloat(diff / 60));\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        let size = 500;\n\n        let purchaseReturns = [];\n        var pageNo = 1;\n\n        makePurchaseReturnReportFilename();\n\n        for (; true;) {\n\n            fettingAllRecordsInProgress = true;\n            setFettingAllRecordsInProgress(true);\n            let res = await fetch(\n                \"/v1/purchase-return?\" +\n                Select +\n                queryParams +\n                \"&sort=\" +\n                sortOrder +\n                sortField +\n                \"&page=\" +\n                pageNo +\n                \"&limit=\" +\n                size,\n                requestOptions\n            )\n                .then(async (response) => {\n                    const isJson = response.headers\n                        .get(\"content-type\")\n                        ?.includes(\"application/json\");\n                    const data = isJson && (await response.json());\n\n                    // check for error response\n                    if (!response.ok) {\n                        const error = data && data.errors;\n                        return Promise.reject(error);\n                    }\n\n                    setIsListLoading(false);\n                    if (!data.result || data.result.length === 0) {\n                        return [];\n                    }\n\n\n                    // console.log(\"Orders:\", orders);\n\n                    return data.result;\n\n\n                })\n                .catch((error) => {\n                    console.log(error);\n                    return [];\n                    //break;\n\n                });\n            if (res.length === 0) {\n                break;\n            }\n            purchaseReturns = purchaseReturns.concat(res);\n            pageNo++;\n        }\n\n        allPurchaseReturns = purchaseReturns;\n        setAllPurchaseReturns(purchaseReturns);\n\n        console.log(\"allPurchaseReturns:\", allPurchaseReturns);\n        prepareExcelData();\n        fettingAllRecordsInProgress = false;\n        setFettingAllRecordsInProgress(false);\n\n    }\n\n\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortOrder, setSortOrder] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n    async function suggestVendors(searchTerm) {\n        console.log(\"Inside handle suggestVendors\");\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = `&${queryString}`;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n        let result = await fetch(`/v1/vendor?${Select}${queryString}`, requestOptions);\n        let data = await result.json();\n\n        setVendorOptions(data.result);\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setVendorOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setUserOptions(data.result);\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    const [selectedPaymentMethodList, setSelectedPaymentMethodList] = useState([]);\n    const [selectedPaymentStatusList, setSelectedPaymentStatusList] = useState([]);\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByUsers(values);\n        } else if (field === \"vendor_id\") {\n            setSelectedVendors(values);\n        } else if (field === \"status\") {\n            setSelectedStatusList(values);\n        } else if (field === \"payment_status\") {\n            setSelectedPaymentStatusList(values);\n        } else if (field === \"payment_methods\") {\n            setSelectedPaymentMethodList(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    let [totalPaidPurchaseReturn, setTotalPaidPurchaseReturn] = useState(0.00);\n    let [totalUnPaidPurchaseReturn, setTotalUnPaidPurchaseReturn] = useState(0.00);\n    let [totalCashPurchaseReturn, setTotalCashPurchaseReturn] = useState(0.00);\n    let [totalBankAccountPurchaseReturn, setTotalBankAccountPurchaseReturn] = useState(0.00);\n\n    function list() {\n        excelData = [];\n        setExcelData(excelData);\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,code,purchase_code,cash_discount,purchase_id,date,net_total,created_by_name,vendor_name,vendor_invoice_no,status,created_at,total_payment_paid,payments_count,payment_methods,payment_status,balance_amount,store_id\";\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        if (props.purchase) {\n            searchParams.purchase_id = props.purchase.id;\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/purchase-return?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortOrder +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setPurchaseReturnList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                totalPurchaseReturn = data.meta.total_purchase_return;\n                setTotalPurchaseReturn(totalPurchaseReturn);\n\n                vatPrice = data.meta.vat_price;\n                setVatPrice(vatPrice);\n\n                totalDiscount = data.meta.discount;\n                setTotalDiscount(totalDiscount);\n\n                totalCashDiscount = data.meta.cash_discount;\n                setTotalCashDiscount(totalCashDiscount);\n\n                totalPaidPurchaseReturn = data.meta.paid_purchase_return;\n                setTotalPaidPurchaseReturn(totalPaidPurchaseReturn);\n\n                totalUnPaidPurchaseReturn = data.meta.unpaid_purchase_return;\n                setTotalUnPaidPurchaseReturn(totalUnPaidPurchaseReturn);\n\n                totalCashPurchaseReturn = data.meta.cash_purchase_return;\n                setTotalCashPurchaseReturn(totalCashPurchaseReturn);\n\n                totalBankAccountPurchaseReturn = data.meta.bank_account_purchase_return\n                setTotalBankAccountPurchaseReturn(totalBankAccountPurchaseReturn);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortOrder = sortOrder === \"-\" ? \"\" : \"-\";\n        setSortOrder(sortOrder);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n    const CreateFormRef = useRef();\n    function openUpdateForm(id) {\n        CreateFormRef.current.open(id);\n    }\n\n\n    //Purchase Return Payments\n    const PurchaseReturnPaymentCreateRef = useRef();\n    function openPurchaseReturnPaymentCreateForm(purchaseReturn) {\n        PurchaseReturnPaymentCreateRef.current.open(undefined, purchaseReturn);\n    }\n\n    const PurchaseReturnPaymentDetailsViewRef = useRef();\n    function openPurchaseReturnPaymentDetailsView(id) {\n        PurchaseReturnPaymentDetailsViewRef.current.open(id);\n    }\n\n    function openPurchaseReturnPaymentUpdateForm(id) {\n        PurchaseReturnPaymentCreateRef.current.open(id);\n    }\n\n    const [selectedPurchaseReturn, setSelectedPurchaseReturn] = useState({});\n    let [showPurchaseReturnPaymentHistory, setShowPurchaseReturnPaymentHistory] = useState(false);\n\n    function openPaymentsDialogue(purchaseReturn) {\n        setSelectedPurchaseReturn(purchaseReturn);\n        showPurchaseReturnPaymentHistory = true;\n        setShowPurchaseReturnPaymentHistory(true);\n    }\n\n    function handlePaymentHistoryClose() {\n        showPurchaseReturnPaymentHistory = false;\n        setShowPurchaseReturnPaymentHistory(false);\n        //list();\n    }\n\n\n    const PurchaseReturnPaymentListRef = useRef();\n\n    const paymentStatusOptions = [\n        {\n            id: \"paid\",\n            name: \"Paid\",\n        },\n        {\n            id: \"not_paid\",\n            name: \"Not Paid\",\n        },\n        {\n            id: \"paid_partially\",\n            name: \"Paid partially\",\n        },\n    ];\n    const paymentMethodOptions = [\n        {\n            id: \"cash\",\n            name: \"cash\",\n        },\n        {\n            id: \"bank_account\",\n            name: \"Bank Account / Debit / Credit card\",\n        },\n    ];\n\n    let [totalCashDiscount, setTotalCashDiscount] = useState(0.00);\n\n    function openCreateForm() {\n        CreateFormRef.current.open(undefined, props.purchase.id);\n    }\n\n\n    return (\n        <>\n            <PurchaseReturnCreate ref={CreateFormRef} refreshList={list} refreshPurchaseList={props.refreshPurchaseList}  showToastMessage={props.showToastMessage} />\n            <PurchaseReturnView ref={DetailsViewRef} />\n\n            <PurchaseReturnPaymentCreate ref={PurchaseReturnPaymentCreateRef} showToastMessage={props.showToastMessage} openDetailsView={openPurchaseReturnPaymentDetailsView} />\n            <PurchaseReturnPaymentDetailsView ref={PurchaseReturnPaymentDetailsViewRef} openUpdateForm={openPurchaseReturnPaymentUpdateForm} showToastMessage={props.showToastMessage} />\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n\n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Purchase Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalPurchaseReturn}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Paid Purchase Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalPaidPurchaseReturn?.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h4 className=\"text-end\">\n                            Cash Purchase Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalCashPurchaseReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h4>\n                        <h4 className=\"text-end\">\n                            Bank Account Purchase Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalBankAccountPurchaseReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h4>\n                        <h1 className=\"text-end\">\n                            Credit Purchase Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalUnPaidPurchaseReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Cash Discounts: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalCashDiscount.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Purchase return Discounts: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalDiscount.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            VAT Collected: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={vatPrice.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">Purchase Returns</h1>\n                    </div>\n\n                    <div className=\"col text-end\">\n                        <ExcelFile filename={purchaseReturnReportFileName} element={excelData.length > 0 ? <Button variant=\"success\" className=\"btn btn-primary mb-3 success\" >Download Purchase Return Report</Button> : \"\"}>\n                            <ExcelSheet dataSet={excelData} name={purchaseReturnReportFileName} />\n                        </ExcelFile>\n\n                        {excelData.length == 0 ? <Button variant=\"primary\" className=\"btn btn-primary mb-3\" onClick={getAllPurchaseReturns} >{fettingAllRecordsInProgress ? \"Preparing..\" : \"Purchase Return Report\"}</Button> : \"\"}\n                        &nbsp;&nbsp;\n\n                        <div className=\"col text-end\">\n                            {props.purchase ? <Button\n                                hide={true.toString()}\n                                variant=\"primary\"\n                                className=\"btn btn-primary mb-3\"\n                                onClick={openCreateForm}\n                            >\n                                <i className=\"bi bi-plus-lg\"></i> Create\n                            </Button> : \"\"}\n                        </div>\n\n                        {/*\n                        <Button\n                            hide={true}\n                            variant=\"primary\"\n                            className=\"btn btn-primary mb-3\"\n                            onClick={openCreateForm}\n                        >\n                            <i className=\"bi bi-plus-lg\"></i> Create\n                        </Button>\n                        */}\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No Purchase Returns to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ border: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"border\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        border: \"solid 1px\",\n                                                        borderColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\">\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ border: \"solid 0px\" }}>\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"code\");\n                                                        }}\n                                                    >\n                                                        ID\n                                                        {sortField === \"code\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"code\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"vendor_invoice_no\");\n                                                        }}\n                                                    >\n                                                        Vendor Invoice No.\n                                                        {sortField === \"vendor_invoice_no\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"vendor_invoice_no\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"vendor_name\");\n                                                        }}\n                                                    >\n                                                        Vendor\n                                                        {sortField === \"vendor_name\" &&\n                                                            sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"vendor_name\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"purchase_code\");\n                                                        }}\n                                                    >\n                                                        Purchase ID\n                                                        {sortField === \"code\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"code\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"date\");\n                                                        }}\n                                                    >\n                                                        Date\n                                                        {sortField === \"date\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"date\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_total\");\n                                                        }}\n                                                    >\n                                                        Net Total\n                                                        {sortField === \"net_total\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_total\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"cash_discount\");\n                                                        }}\n                                                    >\n                                                        Cash Discount\n                                                        {sortField === \"cash_discount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"cash_discount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"total_payment_paid\");\n                                                        }}\n                                                    >\n                                                        Amount Paid\n                                                        {sortField === \"total_payment_paid\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"total_payment_paid\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance_amount\");\n                                                        }}\n                                                    >\n                                                        Balance\n                                                        {sortField === \"balance_amount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance_amount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payments_count\");\n                                                        }}\n                                                    >\n                                                        No.of Payments\n                                                        {sortField === \"payments_count\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payments_count\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payment_status\");\n                                                        }}\n                                                    >\n                                                        Payment Status\n                                                        {sortField === \"payment_status\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payment_status\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payment_methods\");\n                                                        }}\n                                                    >\n                                                        Payment Methods\n                                                        {sortField === \"payment_methods\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payment_methods\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_by\");\n                                                        }}\n                                                    >\n                                                        Created By\n                                                        {sortField === \"created_by\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_by\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>Actions</th>\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"vendor_invoice_no\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"vendor_invoice_no\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"vendor_id\"\n                                                        labelKey=\"search_label\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"vendor_id\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={vendorOptions}\n                                                        placeholder=\"name or mob\"\n                                                        selected={selectedVendors}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestVendors(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"purchase_code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"purchase_code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                <div style={{ minWidth: \"125px\" }}>\n                                                    <DatePicker\n                                                        id=\"date_str\"\n                                                        value={dateValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        isClearable={true}\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setDateValue(\"\");\n                                                                searchByDateField(\"date_str\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"date_str\", date);\n                                                            selectedDate = date;\n                                                            setSelectedDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) => setShowDateRange(!showDateRange)}\n                                                    >\n                                                        {showDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"from_date\"\n                                                                value={fromDateValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setFromDateValue(\"\");\n                                                                        searchByDateField(\"from_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"from_date\", date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"to_date\"\n                                                                value={toDateValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setToDateValue(\"\");\n                                                                        searchByDateField(\"to_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"to_date\", date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                    </div>\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_total\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_total\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"cash_discount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"cash_discount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"total_payment_paid\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"total_payment_paid\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"balance_amount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance_amount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"payments_count\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"payments_count\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"payment_status\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"payment_status\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={paymentStatusOptions}\n                                                        placeholder=\"Select Payment Status\"\n                                                        selected={selectedPaymentStatusList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"payment_methods\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"payment_methods\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={paymentMethodOptions}\n                                                        placeholder=\"Select payment methods\"\n                                                        selected={selectedPaymentMethodList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"created_by\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"created_by\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={userOptions}\n                                                        placeholder=\"Select Users\"\n                                                        selected={selectedCreatedByUsers}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestUsers(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtToValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                            {purchasereturnList &&\n                                                purchasereturnList.map((purchasereturn) => (\n                                                    <tr key={purchasereturn.code} >\n                                                        <td>{purchasereturn.code}</td>\n                                                        <td>{purchasereturn.vendor_invoice_no}</td>\n                                                        <td>{purchasereturn.vendor_name}</td>\n                                                        <td>{purchasereturn.purchase_code}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(purchasereturn.date),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        <td>{purchasereturn.net_total}</td>\n                                                        <td>{purchasereturn.cash_discount?.toFixed(2)}</td>\n                                                        <td>\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openPaymentsDialogue(purchasereturn);\n                                                            }}>\n                                                                {purchasereturn.total_payment_paid?.toFixed(2)}\n                                                            </Button>\n                                                        </td>\n                                                        <td>{purchasereturn.balance_amount?.toFixed(2)}</td>\n                                                        <td>\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openPaymentsDialogue(purchasereturn);\n                                                            }}>\n                                                                {purchasereturn.payments_count}\n                                                            </Button>\n                                                        </td>\n                                                        <td>\n                                                            {purchasereturn.payment_status == \"paid\" ?\n                                                                <span className=\"badge bg-success\">\n                                                                    Paid\n                                                                </span> : \"\"}\n                                                            {purchasereturn.payment_status == \"paid_partially\" ?\n                                                                <span className=\"badge bg-warning\">\n                                                                    Paid Partially\n                                                                </span> : \"\"}\n                                                            {purchasereturn.payment_status == \"not_paid\" ?\n                                                                <span className=\"badge bg-danger\">\n                                                                    Not Paid\n                                                                </span> : \"\"}\n                                                        </td>\n                                                        <td>\n                                                            {purchasereturn.payment_methods &&\n                                                                purchasereturn.payment_methods.map((name) => (\n                                                                    <span className=\"badge bg-info\">{name}</span>\n                                                                ))}\n                                                        </td>\n                                                        <td>{purchasereturn.created_by_name}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(purchasereturn.created_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        <td>\n\n                                                            <Button className=\"btn btn-light btn-sm\" onClick={() => {\n                                                                openUpdateForm(purchasereturn.id);\n                                                            }}>\n                                                                <i className=\"bi bi-pencil\"></i>\n                                                            </Button>\n\n\n                                                            <Button className=\"btn btn-primary btn-sm\" onClick={() => {\n                                                                openDetailsView(purchasereturn.id);\n                                                            }}>\n                                                                <i className=\"bi bi-eye\"></i>\n                                                            </Button>\n\n\n\n\n                                                            <button\n                                                                className=\"btn btn-outline-secondary dropdown-toggle\"\n                                                                type=\"button\"\n                                                                data-bs-toggle=\"dropdown\"\n                                                                aria-expanded=\"false\"\n                                                            ></button>\n                                                            <ul className=\"dropdown-menu\">\n                                                                <li>\n                                                                    <button className=\"dropdown-item\" onClick={() => {\n                                                                        openPurchaseReturnPaymentCreateForm(purchasereturn);\n                                                                    }}>\n                                                                        <i className=\"bi bi-plus\"></i>\n                                                                        &nbsp;\n                                                                        Add Payment\n                                                                    </button>\n                                                                </li>\n\n                                                            </ul>\n\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Modal show={showPurchaseReturnPaymentHistory} size=\"lg\" onHide={handlePaymentHistoryClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Payment history of Purchase return #{selectedPurchaseReturn.code}</Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handlePaymentHistoryClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <PurchaseReturnPaymentIndex ref={PurchaseReturnPaymentListRef} showToastMessage={props.showToastMessage} purchaseReturn={selectedPurchaseReturn} refreshPurchaseReturnList={list} />\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default PurchaseReturnIndex;\n"]},"metadata":{},"sourceType":"module"}