{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/sales_return/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport SalesReturnCreate from \"./create.js\";\nimport SalesReturnView from \"./view.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport SalesReturnPaymentCreate from \"./../sales_return_payment/create.js\";\nimport SalesReturnPaymentDetailsView from \"./../sales_return_payment/view.js\";\nimport SalesReturnPaymentIndex from \"./../sales_return_payment/index.js\";\nimport ReactExport from 'react-data-export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n\nfunction SalesReturnIndex(props) {\n  _s();\n\n  const cookies = new Cookies();\n  let [totalSalesReturn, setTotalSalesReturn] = useState(0.00);\n  let [vatPrice, setVatPrice] = useState(0.00);\n  let [totalDiscount, setTotalDiscount] = useState(0.00);\n  let [totalCashDiscount, setTotalCashDiscount] = useState(0.00);\n  let [totalPaidSalesReturn, setTotalPaidSalesReturn] = useState(0.00);\n  let [totalUnPaidSalesReturn, setTotalUnPaidSalesReturn] = useState(0.00);\n  let [totalCashSalesReturn, setTotalCashSalesReturn] = useState(0.00);\n  let [totalBankAccountSalesReturn, setTotalBankAccountSalesReturn] = useState(0.00); //list\n\n  const [salesreturnList, setSalesReturnList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false);\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n  let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n  let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n  const [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Customer Auto Suggestion\n\n  const [customerOptions, setCustomerOptions] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]); //Created By User Auto Suggestion\n\n  const [userOptions, setUserOptions] = useState([]);\n  const [selectedCreatedByUsers, setSelectedCreatedByUsers] = useState([]); //Status Auto Suggestion\n\n  const statusOptions = [{\n    id: \"sent\",\n    name: \"Sent\"\n  }, {\n    id: \"pending\",\n    name: \"Pending\"\n  }, {\n    id: \"accepted\",\n    name: \"Accepted\"\n  }, {\n    id: \"rejected\",\n    name: \"Rejected\"\n  }, {\n    id: \"cancelled\",\n    name: \"Cancelled\"\n  }, {\n    id: \"deleted\",\n    name: \"Deleted\"\n  }];\n  const [selectedStatusList, setSelectedStatusList] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let [allSalesReturns, setAllSalesReturns] = useState([]);\n  let [excelData, setExcelData] = useState([]);\n  let [salesReturnReportFileName, setSalesReturnReportFileName] = useState(\"Sales Return Report\");\n  let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n  function prepareExcelData() {\n    console.log(\"Inside prepareExcelData()\");\n    var groupedByDate = [];\n\n    for (var i = 0; i < allSalesReturns.length; i++) {\n      let date = format(new Date(allSalesReturns[i].date), \"dd-MMM-yyyy\");\n\n      if (!groupedByDate[date]) {\n        groupedByDate[date] = [];\n      }\n\n      groupedByDate[date].push(allSalesReturns[i]);\n    }\n\n    console.log(\"groupedByDate:\", groupedByDate);\n    excelData = [{\n      columns: [{\n        title: \"Description\",\n        width: {\n          wch: 50\n        }\n      }, //pixels width \n      {\n        title: \"Quantity\",\n        width: {\n          wpx: 90\n        }\n      }, //char width \n      {\n        title: \"Unit\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Rate\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Gross\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Disc %\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Disc\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Tax %\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Tax Amount\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Net Amount\",\n        width: {\n          wpx: 90\n        }\n      }],\n      data: []\n    }];\n    let totalAmount = 0;\n    let totalTax = 0;\n    let invoiceCount = 0;\n\n    for (let returnDate in groupedByDate) {\n      console.log(\"returnDate:\", returnDate);\n      excelData[0].data.push([{\n        value: \"Inv Date: \" + returnDate\n      }]);\n      let dayTotal = 0.00;\n      let dayTax = 0.00;\n\n      for (var i = 0; i < groupedByDate[returnDate].length > 0; i++) {\n        invoiceCount++;\n        let salesReturn = groupedByDate[returnDate][i];\n        excelData[0].data.push([{\n          value: \"Inv No (\" + salesReturn.code + \") - \" + invoiceCount + \" [\" + salesReturn.customer_name + \"]\"\n        }]);\n\n        if (!salesReturn.products) {\n          continue;\n        }\n\n        for (var j = 0; j < salesReturn.products.length; j++) {\n          let product = salesReturn.products[j];\n          excelData[0].data.push([{\n            value: product.name\n          }, {\n            value: product.quantity.toFixed(2)\n          }, {\n            value: product.unit ? product.unit : \"PCs\"\n          }, {\n            value: product.unit_price ? product.unit_price.toFixed(2) : 0.00\n          }, {\n            value: (product.unit_price * product.quantity).toFixed(2)\n          }, {\n            value: \"0.00\"\n          }, {\n            value: \"0.00\"\n          }, {\n            value: \"15.00\"\n          }, {\n            value: ((product.unit_price * product.quantity).toFixed(2) * 0.15).toFixed(2)\n          }, {\n            value: (product.unit_price * product.quantity).toFixed(2)\n          }]);\n        }\n\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Discount\"\n        }, {\n          value: salesReturn.discount.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Tax\"\n        }, {\n          value: salesReturn.vat_price.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Total\"\n        }, {\n          value: (salesReturn.total - salesReturn.discount).toFixed(2)\n        }]);\n        dayTotal += salesReturn.total - salesReturn.discount;\n        dayTax += salesReturn.vat_price;\n      }\n\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day Tax\"\n      }, {\n        value: dayTax.toFixed(2)\n      }]);\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day Total\"\n      }, {\n        value: dayTotal.toFixed(2)\n      }]);\n      totalAmount += dayTotal;\n      totalTax += dayTax;\n    } //end for\n\n\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total Tax\"\n    }, {\n      value: totalTax.toFixed(2)\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total Amount\"\n    }, {\n      value: totalAmount.toFixed(2)\n    }]);\n    setExcelData(excelData);\n    console.log(\"excelData:\", excelData);\n  }\n\n  function makeSalesReturnReportFilename() {\n    salesReturnReportFileName = \"Sales Return Report\";\n\n    if (searchParams[\"from_date\"] && searchParams[\"to_date\"]) {\n      salesReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + searchParams[\"to_date\"];\n    } else if (searchParams[\"from_date\"]) {\n      salesReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + format(new Date(), \"dd-MMM-yyyy\");\n    } else if (searchParams[\"to_date\"]) {\n      salesReturnReportFileName += \" - Upto \" + searchParams[\"to_date\"];\n    } else if (searchParams[\"date_str\"]) {\n      salesReturnReportFileName += \" of \" + searchParams[\"date_str\"];\n    }\n\n    setSalesReturnReportFileName(salesReturnReportFileName);\n  }\n\n  async function getAllSalesReturns() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,code,date,total,net_total,discount_percent,discount,products,customer_name,created_at,vat_price,loss,net_profit\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    console.log(\"Timezone:\", parseFloat(diff / 60));\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    let size = 500;\n    let salesReturns = [];\n    var pageNo = 1;\n    makeSalesReturnReportFilename();\n\n    for (; true;) {\n      fettingAllRecordsInProgress = true;\n      setFettingAllRecordsInProgress(true);\n      let res = await fetch(\"/v1/sales-return?\" + Select + queryParams + \"&sort=\" + sortSalesReturn + sortField + \"&page=\" + pageNo + \"&limit=\" + size, requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          const error = data && data.errors;\n          return Promise.reject(error);\n        }\n\n        setIsListLoading(false);\n\n        if (!data.result || data.result.length === 0) {\n          return [];\n        }\n\n        return data.result;\n      }).catch(error => {\n        console.log(error);\n        return []; //break;\n      });\n\n      if (res.length === 0) {\n        break;\n      }\n\n      salesReturns = salesReturns.concat(res);\n      pageNo++;\n    }\n\n    allSalesReturns = salesReturns;\n    setAllSalesReturns(salesReturns);\n    console.log(\"allSalesReturns:\", allSalesReturns);\n    prepareExcelData();\n    fettingAllRecordsInProgress = false;\n    setFettingAllRecordsInProgress(false);\n  } //Search params\n\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortSalesReturn, setSortSalesReturn] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  }\n\n  async function suggestCustomers(searchTerm) {\n    console.log(\"Inside handle suggestCustomers\");\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = `&${queryString}`;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n    let result = await fetch(`/v1/customer?${Select}${queryString}`, requestOptions);\n    let data = await result.json();\n    setCustomerOptions(data.result);\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setCustomerOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setUserOptions(data.result);\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      page = 1;\n      searchParams[field] = \"\";\n      setPage(page);\n      list();\n      return;\n    }\n\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    value = format(d, \"MMM dd yyyy\");\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByUsers(values);\n    } else if (field === \"customer_id\") {\n      setSelectedCustomers(values);\n    } else if (field === \"status\") {\n      setSelectedStatusList(values);\n    } else if (field === \"payment_status\") {\n      setSelectedPaymentStatusList(values);\n    } else if (field === \"payment_methods\") {\n      setSelectedPaymentMethodList(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function list() {\n    excelData = [];\n    setExcelData(excelData);\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,code,date,net_total,created_by_name,customer_name,status,created_at,net_profit,net_loss,cash_discount,order_code,order_id,total_payment_paid,payments_count,payment_methods,payment_status,balance_amount,store_id\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    if (props.order) {\n      searchParams.order_id = props.order.id;\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    setIsListLoading(true);\n    fetch(\"/v1/sales-return?\" + Select + queryParams + \"&sort=\" + sortSalesReturn + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setSalesReturnList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      totalSalesReturn = data.meta.total_sales_return;\n      setTotalSalesReturn(totalSalesReturn);\n      netProfit = data.meta.net_profit;\n      setNetProfit(netProfit);\n      loss = data.meta.net_loss;\n      setLoss(loss);\n      vatPrice = data.meta.vat_price;\n      setVatPrice(vatPrice);\n      totalDiscount = data.meta.discount;\n      setTotalDiscount(totalDiscount);\n      totalCashDiscount = data.meta.cash_discount;\n      setTotalCashDiscount(totalCashDiscount);\n      totalPaidSalesReturn = data.meta.paid_sales_return;\n      setTotalPaidSalesReturn(totalPaidSalesReturn);\n      totalUnPaidSalesReturn = data.meta.unpaid_sales_return;\n      setTotalUnPaidSalesReturn(totalUnPaidSalesReturn);\n      totalCashSalesReturn = data.meta.cash_sales_return;\n      setTotalCashSalesReturn(totalCashSalesReturn);\n      totalBankAccountSalesReturn = data.meta.bank_account_sales_return;\n      setTotalBankAccountSalesReturn(totalBankAccountSalesReturn);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortSalesReturn = sortSalesReturn === \"-\" ? \"\" : \"-\";\n    setSortSalesReturn(sortSalesReturn);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  } //Sales Return Payments\n\n\n  const SalesReturnPaymentCreateRef = useRef();\n\n  function openSalesReturnPaymentCreateForm(order) {\n    SalesReturnPaymentCreateRef.current.open(undefined, order);\n  }\n\n  const SalesReturnPaymentDetailsViewRef = useRef();\n\n  function openSalesReturnPaymentDetailsView(id) {\n    SalesReturnPaymentDetailsViewRef.current.open(id);\n  }\n\n  function openSalesReturnPaymentUpdateForm(id) {\n    SalesReturnPaymentCreateRef.current.open(id);\n  }\n\n  let [netProfit, setNetProfit] = useState(0.00);\n  let [loss, setLoss] = useState(0.00);\n  let [sortOrder, setSortOrder] = useState(\"-\");\n  const paymentStatusOptions = [{\n    id: \"paid\",\n    name: \"Paid\"\n  }, {\n    id: \"not_paid\",\n    name: \"Not Paid\"\n  }, {\n    id: \"paid_partially\",\n    name: \"Paid partially\"\n  }];\n  const paymentMethodOptions = [{\n    id: \"cash\",\n    name: \"cash\"\n  }, {\n    id: \"bank_account\",\n    name: \"Bank Account / Debit / Credit card\"\n  }];\n  const [selectedPaymentMethodList, setSelectedPaymentMethodList] = useState([]);\n  const [selectedPaymentStatusList, setSelectedPaymentStatusList] = useState([]);\n  const [selectedSalesReturn, setSelectedSalesReturn] = useState({});\n  let [showSalesReturnPaymentHistory, setShowSalesReturnPaymentHistory] = useState(false);\n\n  function openPaymentsDialogue(salesReturn) {\n    setSelectedSalesReturn(salesReturn);\n    showSalesReturnPaymentHistory = true;\n    setShowSalesReturnPaymentHistory(true);\n  }\n\n  function handlePaymentHistoryClose() {\n    showSalesReturnPaymentHistory = false;\n    setShowSalesReturnPaymentHistory(false); //list();\n  }\n\n  const CreateFormRef = useRef();\n\n  function openUpdateForm(id) {\n    CreateFormRef.current.open(id);\n  }\n\n  function openCreateForm() {\n    CreateFormRef.current.open(undefined, props.order.id);\n  }\n\n  const SalesReturnPaymentListRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SalesReturnCreate, {\n      ref: CreateFormRef,\n      refreshList: list,\n      refreshSalesList: props.refreshSalesList,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SalesReturnView, {\n      ref: DetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SalesReturnPaymentCreate, {\n      ref: SalesReturnPaymentCreateRef,\n      showToastMessage: props.showToastMessage,\n      openDetailsView: openSalesReturnPaymentDetailsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SalesReturnPaymentDetailsView, {\n      ref: SalesReturnPaymentDetailsViewRef,\n      openUpdateForm: openSalesReturnPaymentUpdateForm,\n      showToastMessage: props.showToastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Sales Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalSalesReturn,\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Paid Sales Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalPaidSalesReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-end\",\n            children: [\"Cash Sales Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalCashSalesReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-end\",\n            children: [\"Bank Account Sales Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalBankAccountSalesReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Credit Sales Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalUnPaidSalesReturn.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 25\n          }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Net Profit: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: netProfit,\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 921,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 60\n          }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Net Loss: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: loss,\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 932,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 60\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Sales Return Discount: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalDiscount.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Cash Discount: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalCashDiscount.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"VAT Return: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: vatPrice.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Sales Returns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-end\",\n          children: [/*#__PURE__*/_jsxDEV(ExcelFile, {\n            filename: salesReturnReportFileName,\n            element: excelData.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"btn btn-primary mb-3 success\",\n              children: \"Download Sales Return Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 105\n            }, this) : \"\",\n            children: /*#__PURE__*/_jsxDEV(ExcelSheet, {\n              dataSet: excelData,\n              name: salesReturnReportFileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 25\n          }, this), excelData.length == 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn btn-primary mb-3\",\n            onClick: getAllSalesReturns,\n            children: fettingAllRecordsInProgress ? \"Preparing..\" : \"Sales Return Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 50\n          }, this) : \"\", \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-end\",\n            children: props.order ? /*#__PURE__*/_jsxDEV(Button, {\n              hide: true.toString(),\n              variant: \"primary\",\n              className: \"btn btn-primary mb-3\",\n              onClick: openCreateForm,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-plus-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 33\n              }, this), \" Create\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 44\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start\",\n                    children: \"No SalesReturns to display\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1030,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  bsalesreturn: \"solid 0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-start\",\n                  style: {\n                    bsalesreturn: \"solid 0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setIsRefreshInProcess(true);\n                      list();\n                    },\n                    variant: \"primary\",\n                    disabled: isRefreshInProcess,\n                    children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"bsalesreturn\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1045,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-refresh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1053,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"visually-hidden\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-center\",\n                  children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"grow\",\n                    variant: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-end\",\n                  children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Size:\\xA0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1066,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: pageSize,\n                      onChange: e => {\n                        changePageSize(e.target.value);\n                      },\n                      className: \"form-control pull-right\",\n                      style: {\n                        bsalesreturn: \"solid 1px\",\n                        bsalesreturnColor: \"silver\",\n                        width: \"55px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5\",\n                        children: \"5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1079,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10\",\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1082,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"20\",\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1085,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"40\",\n                        children: \"40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1086,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"50\",\n                        children: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1087,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"100\",\n                        children: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1088,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1067,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  style: {\n                    bsalesreturn: \"solid 0px\"\n                  },\n                  children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1099,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1097,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-start\",\n                      children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1125,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1124,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-end\",\n                      children: [\"page \", page, \" of \", totalPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1132,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1131,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                style: {\n                  overflowX: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-sm table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"code\");\n                          },\n                          children: [\"ID\", sortField === \"code\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1155,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"code\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1158,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1144,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1143,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"order_code\");\n                          },\n                          children: [\"Order ID\", sortField === \"order_code\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1174,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"order_code\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1177,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1163,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1162,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"date\");\n                          },\n                          children: [\"Date\", sortField === \"date\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1193,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"date\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1196,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1182,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1181,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_total\");\n                          },\n                          children: [\"Net Total\", sortField === \"net_total\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1212,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_total\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1215,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1201,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1200,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"cash_discount\");\n                          },\n                          children: [\"Cash Discount\", sortField === \"cash_discount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1231,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"cash_discount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1234,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1219,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"total_payment_paid\");\n                          },\n                          children: [\"Amount paid\", sortField === \"total_payment_paid\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1250,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"total_payment_paid\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1253,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1239,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1238,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"balance_amount\");\n                          },\n                          children: [\"Balance\", sortField === \"balance_amount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1269,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"balance_amount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1272,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1258,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1257,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payments_count\");\n                          },\n                          children: [\"No.of Payments\", sortField === \"payments_count\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1288,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payments_count\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1291,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1277,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1276,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payment_status\");\n                          },\n                          children: [\"Payment Status\", sortField === \"payment_status\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1307,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payment_status\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1310,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1296,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1295,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payment_methods\");\n                          },\n                          children: [\"Payment Methods\", sortField === \"payment_methods\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1326,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payment_methods\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1329,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1315,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1314,\n                        columnNumber: 49\n                      }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_profit\");\n                          },\n                          children: [\"Net Profit\", sortField === \"net_profit\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1347,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_profit\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1350,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1336,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1335,\n                        columnNumber: 84\n                      }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_loss\");\n                          },\n                          children: [\"Net Loss\", sortField === \"net_loss\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1366,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_loss\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1369,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1355,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1354,\n                        columnNumber: 84\n                      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_by\");\n                          },\n                          children: [\"Created By\", sortField === \"created_by\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1386,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_by\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1389,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1375,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1374,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"customer_name\");\n                          },\n                          children: [\"Customer\", sortField === \"customer_name\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1406,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"customer_name\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1409,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1394,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1393,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_at\");\n                          },\n                          children: [\"Created At\", sortField === \"created_at\" && sortSalesReturn === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1428,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_at\" && sortSalesReturn === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1431,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1417,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1416,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1435,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1142,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1141,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"code\",\n                          onChange: e => searchByFieldValue(\"code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1442,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1441,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"order_code\",\n                          onChange: e => searchByFieldValue(\"order_code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1452,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1451,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            minWidth: \"125px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"date_str\",\n                            value: dateValue,\n                            selected: selectedDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            isClearable: true,\n                            onChange: date => {\n                              if (!date) {\n                                setDateValue(\"\");\n                                searchByDateField(\"date_str\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"date_str\", date);\n                              selectedDate = date;\n                              setSelectedDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1463,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                            style: {\n                              color: \"blue\",\n                              textDecoration: \"underline\",\n                              cursor: \"pointer\"\n                            },\n                            onClick: e => setShowDateRange(!showDateRange),\n                            children: showDateRange ? \"Less..\" : \"More..\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1481,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1491,\n                            columnNumber: 57\n                          }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-left\",\n                            children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                              id: \"from_date\",\n                              value: fromDateValue,\n                              selected: selectedFromDate,\n                              className: \"form-control\",\n                              dateFormat: \"MMM dd yyyy\",\n                              isClearable: true,\n                              onChange: date => {\n                                if (!date) {\n                                  setFromDateValue(\"\");\n                                  searchByDateField(\"from_date\", \"\");\n                                  return;\n                                }\n\n                                searchByDateField(\"from_date\", date);\n                                selectedFromDate = date;\n                                setSelectedFromDate(date);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1496,\n                              columnNumber: 65\n                            }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                              id: \"to_date\",\n                              value: toDateValue,\n                              selected: selectedToDate,\n                              className: \"form-control\",\n                              dateFormat: \"MMM dd yyyy\",\n                              isClearable: true,\n                              onChange: date => {\n                                if (!date) {\n                                  setToDateValue(\"\");\n                                  searchByDateField(\"to_date\", \"\");\n                                  return;\n                                }\n\n                                searchByDateField(\"to_date\", date);\n                                selectedToDate = date;\n                                setSelectedToDate(date);\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1515,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1494,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1462,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1461,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_total\",\n                          onChange: e => searchByFieldValue(\"net_total\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1538,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1537,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"cash_discount\",\n                          onChange: e => searchByFieldValue(\"cash_discount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1548,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1547,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"total_payment_paid\",\n                          onChange: e => searchByFieldValue(\"total_payment_paid\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1558,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1557,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"balance_amount\",\n                          onChange: e => searchByFieldValue(\"balance_amount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1568,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1567,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"payments_count\",\n                          onChange: e => searchByFieldValue(\"payments_count\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1578,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1577,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"payment_status\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"payment_status\", selectedItems);\n                          },\n                          options: paymentStatusOptions,\n                          placeholder: \"Select Payment Status\",\n                          selected: selectedPaymentStatusList,\n                          highlightOnlyResult: true,\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1588,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1587,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"payment_methods\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"payment_methods\", selectedItems);\n                          },\n                          options: paymentMethodOptions,\n                          placeholder: \"Select payment methods\",\n                          selected: selectedPaymentMethodList,\n                          highlightOnlyResult: true,\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1605,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1604,\n                        columnNumber: 49\n                      }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_profit\",\n                          onChange: e => searchByFieldValue(\"net_profit\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1622,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1621,\n                        columnNumber: 84\n                      }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_loss\",\n                          onChange: e => searchByFieldValue(\"net_loss\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1632,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1631,\n                        columnNumber: 84\n                      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"created_by\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"created_by\", selectedItems);\n                          },\n                          options: userOptions,\n                          placeholder: \"Select Users\",\n                          selected: selectedCreatedByUsers,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestUsers(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1642,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1641,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"customer_id\",\n                          labelKey: \"search_label\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"customer_id\", selectedItems);\n                          },\n                          options: customerOptions,\n                          placeholder: \"name or mob\",\n                          selected: selectedCustomers,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestCustomers(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1662,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1661,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"created_at\",\n                          value: createdAtValue,\n                          selected: selectedCreatedAtDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          isClearable: true,\n                          onChange: date => {\n                            if (!date) {\n                              setCreatedAtValue(\"\");\n                              searchByDateField(\"created_at\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"created_at\", date);\n                            selectedCreatedAtDate = date;\n                            setSelectedCreatedAtDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1684,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowCreatedAtDateRange(!showCreatedAtDateRange),\n                          children: showCreatedAtDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1702,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1714,\n                          columnNumber: 53\n                        }, this), showCreatedAtDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_from\",\n                            value: createdAtFromValue,\n                            selected: selectedCreatedAtFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            isClearable: true,\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtFromValue(\"\");\n                                searchByDateField(\"created_at_from\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_from\", date);\n                              selectedCreatedAtFromDate = date;\n                              setSelectedCreatedAtFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1719,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_to\",\n                            value: createdAtToValue,\n                            selected: selectedCreatedAtToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            isClearable: true,\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtToValue(\"\");\n                                searchByDateField(\"created_at_to\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_to\", date);\n                              selectedCreatedAtToDate = date;\n                              setSelectedCreatedAtToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1738,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1717,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1683,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1759,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1440,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1439,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"text-center\",\n                    children: salesreturnList && salesreturnList.map(salesreturn => {\n                      var _salesreturn$cash_dis, _salesreturn$total_pa, _salesreturn$balance_, _salesreturn$net_prof, _salesreturn$net_loss;\n\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: salesreturn.code\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1767,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: salesreturn.order_code\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1768,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: format(new Date(salesreturn.date), \"MMM dd yyyy h:mma\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1769,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [salesreturn.net_total, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1775,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_salesreturn$cash_dis = salesreturn.cash_discount) === null || _salesreturn$cash_dis === void 0 ? void 0 : _salesreturn$cash_dis.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1776,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openPaymentsDialogue(salesreturn);\n                            },\n                            children: (_salesreturn$total_pa = salesreturn.total_payment_paid) === null || _salesreturn$total_pa === void 0 ? void 0 : _salesreturn$total_pa.toFixed(2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1779,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1777,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_salesreturn$balance_ = salesreturn.balance_amount) === null || _salesreturn$balance_ === void 0 ? void 0 : _salesreturn$balance_.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1786,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openPaymentsDialogue(salesreturn);\n                            },\n                            children: salesreturn.payments_count\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1789,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1787,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [salesreturn.payment_status == \"paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-success\",\n                            children: \"Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1798,\n                            columnNumber: 65\n                          }, this) : \"\", salesreturn.payment_status == \"paid_partially\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-warning\",\n                            children: \"Paid Partially\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1802,\n                            columnNumber: 65\n                          }, this) : \"\", salesreturn.payment_status == \"not_paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-danger\",\n                            children: \"Not Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1806,\n                            columnNumber: 65\n                          }, this) : \"\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1796,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: salesreturn.payment_methods && salesreturn.payment_methods.map(name => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-info\",\n                            children: name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1814,\n                            columnNumber: 69\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1810,\n                          columnNumber: 57\n                        }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_salesreturn$net_prof = salesreturn.net_profit) === null || _salesreturn$net_prof === void 0 ? void 0 : _salesreturn$net_prof.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1818,\n                          columnNumber: 92\n                        }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_salesreturn$net_loss = salesreturn.net_loss) === null || _salesreturn$net_loss === void 0 ? void 0 : _salesreturn$net_loss.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1819,\n                          columnNumber: 92\n                        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: salesreturn.created_by_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1820,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: salesreturn.customer_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1821,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: format(new Date(salesreturn.created_at), \"MMM dd yyyy h:mma\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1822,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btn btn-light btn-sm\",\n                            onClick: () => {\n                              openUpdateForm(salesreturn.id);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-pencil\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1837,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1834,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btn btn-primary btn-sm\",\n                            onClick: () => {\n                              openDetailsView(salesreturn.id);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-eye\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1844,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1841,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1828,\n                          columnNumber: 57\n                        }, this)]\n                      }, salesreturn.code, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1766,\n                        columnNumber: 53\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1763,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1140,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1139,\n                columnNumber: 33\n              }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                breakLabel: \"...\",\n                nextLabel: \"next >\",\n                onPageChange: event => {\n                  changePage(event.selected + 1);\n                },\n                pageRangeDisplayed: 5,\n                pageCount: totalPages,\n                previousLabel: \"< previous\",\n                renderOnZeroPageCount: null,\n                className: \"pagination  flex-wrap\",\n                pageClassName: \"page-item\",\n                pageLinkClassName: \"page-link\",\n                activeClassName: \"active\",\n                previousClassName: \"page-item\",\n                nextClassName: \"page-item\",\n                previousLinkClassName: \"page-link\",\n                nextLinkClassName: \"page-link\",\n                forcePage: page - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1873,\n                columnNumber: 47\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSalesReturnPaymentHistory,\n      size: \"lg\",\n      onHide: handlePaymentHistoryClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Payment history of Sales Return #\", selectedSalesReturn.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1901,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handlePaymentHistoryClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1904,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1903,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1900,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(SalesReturnPaymentIndex, {\n          ref: SalesReturnPaymentListRef,\n          showToastMessage: props.showToastMessage,\n          salesReturn: selectedSalesReturn,\n          refreshSalesReturnList: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1914,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1913,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1899,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SalesReturnIndex, \"jMZPVSlENUBMxpZeddyP6QPDolE=\");\n\n_c = SalesReturnIndex;\nexport default SalesReturnIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesReturnIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/sales_return/index.js"],"names":["React","useState","useEffect","useRef","SalesReturnCreate","SalesReturnView","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","Modal","ReactPaginate","NumberFormat","SalesReturnPaymentCreate","SalesReturnPaymentDetailsView","SalesReturnPaymentIndex","ReactExport","ExcelFile","ExcelSheet","SalesReturnIndex","props","cookies","totalSalesReturn","setTotalSalesReturn","vatPrice","setVatPrice","totalDiscount","setTotalDiscount","totalCashDiscount","setTotalCashDiscount","totalPaidSalesReturn","setTotalPaidSalesReturn","totalUnPaidSalesReturn","setTotalUnPaidSalesReturn","totalCashSalesReturn","setTotalCashSalesReturn","totalBankAccountSalesReturn","setTotalBankAccountSalesReturn","salesreturnList","setSalesReturnList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showDateRange","setShowDateRange","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","selectedCreatedAtDate","setSelectedCreatedAtDate","selectedCreatedAtFromDate","setSelectedCreatedAtFromDate","selectedCreatedAtToDate","setSelectedCreatedAtToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","customerOptions","setCustomerOptions","selectedCustomers","setSelectedCustomers","userOptions","setUserOptions","selectedCreatedByUsers","setSelectedCreatedByUsers","statusOptions","id","name","selectedStatusList","setSelectedStatusList","list","allSalesReturns","setAllSalesReturns","excelData","setExcelData","salesReturnReportFileName","setSalesReturnReportFileName","fettingAllRecordsInProgress","setFettingAllRecordsInProgress","prepareExcelData","console","log","groupedByDate","i","length","date","push","columns","title","width","wch","wpx","data","totalAmount","totalTax","invoiceCount","returnDate","value","dayTotal","dayTax","salesReturn","code","customer_name","products","j","product","quantity","toFixed","unit","unit_price","discount","vat_price","total","makeSalesReturnReportFilename","searchParams","getAllSalesReturns","requestOptions","method","headers","Authorization","get","Select","store_id","d","diff","getTimezoneOffset","parseFloat","setSearchParams","queryParams","ObjectToSearchQueryParams","size","salesReturns","pageNo","res","fetch","sortSalesReturn","sortField","then","response","isJson","includes","json","ok","error","errors","Promise","reject","result","catch","concat","setSortField","setSortSalesReturn","object","Object","keys","map","key","join","suggestCustomers","searchTerm","params","queryString","suggestUsers","searchByFieldValue","field","searchByDateField","toUTCString","searchByMultipleValuesField","values","setSelectedPaymentStatusList","setSelectedPaymentMethodList","model","order","order_id","pageCount","parseInt","total_count","meta","total_sales_return","netProfit","net_profit","setNetProfit","loss","net_loss","setLoss","cash_discount","paid_sales_return","unpaid_sales_return","cash_sales_return","bank_account_sales_return","sort","changePageSize","changePage","newPage","DetailsViewRef","openDetailsView","current","open","SalesReturnPaymentCreateRef","openSalesReturnPaymentCreateForm","undefined","SalesReturnPaymentDetailsViewRef","openSalesReturnPaymentDetailsView","openSalesReturnPaymentUpdateForm","sortOrder","setSortOrder","paymentStatusOptions","paymentMethodOptions","selectedPaymentMethodList","selectedPaymentStatusList","selectedSalesReturn","setSelectedSalesReturn","showSalesReturnPaymentHistory","setShowSalesReturnPaymentHistory","openPaymentsDialogue","handlePaymentHistoryClose","CreateFormRef","openUpdateForm","openCreateForm","SalesReturnPaymentListRef","refreshSalesList","showToastMessage","toString","bsalesreturn","e","target","bsalesreturnColor","event","selected","overflowX","textDecoration","cursor","minWidth","color","selectedItems","salesreturn","order_code","net_total","total_payment_paid","balance_amount","payments_count","payment_status","payment_methods","created_by_name","created_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport SalesReturnCreate from \"./create.js\";\nimport SalesReturnView from \"./view.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\n\nimport SalesReturnPaymentCreate from \"./../sales_return_payment/create.js\";\nimport SalesReturnPaymentDetailsView from \"./../sales_return_payment/view.js\";\nimport SalesReturnPaymentIndex from \"./../sales_return_payment/index.js\";\n\n\nimport ReactExport from 'react-data-export';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n\n\nfunction SalesReturnIndex(props) {\n    const cookies = new Cookies();\n\n    let [totalSalesReturn, setTotalSalesReturn] = useState(0.00);\n    let [vatPrice, setVatPrice] = useState(0.00);\n    let [totalDiscount, setTotalDiscount] = useState(0.00);\n    let [totalCashDiscount, setTotalCashDiscount] = useState(0.00);\n    let [totalPaidSalesReturn, setTotalPaidSalesReturn] = useState(0.00);\n    let [totalUnPaidSalesReturn, setTotalUnPaidSalesReturn] = useState(0.00);\n    let [totalCashSalesReturn, setTotalCashSalesReturn] = useState(0.00);\n    let [totalBankAccountSalesReturn, setTotalBankAccountSalesReturn] = useState(0.00);\n\n    //list\n    const [salesreturnList, setSalesReturnList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n\n    let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n    let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n    let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n    \n    const [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Customer Auto Suggestion\n    const [customerOptions, setCustomerOptions] = useState([]);\n    const [selectedCustomers, setSelectedCustomers] = useState([]);\n\n    //Created By User Auto Suggestion\n    const [userOptions, setUserOptions] = useState([]);\n    const [selectedCreatedByUsers, setSelectedCreatedByUsers] = useState([]);\n\n    //Status Auto Suggestion\n    const statusOptions = [\n        {\n            id: \"sent\",\n            name: \"Sent\",\n        },\n        {\n            id: \"pending\",\n            name: \"Pending\",\n        },\n        {\n            id: \"accepted\",\n            name: \"Accepted\",\n        },\n        {\n            id: \"rejected\",\n            name: \"Rejected\",\n        },\n        {\n            id: \"cancelled\",\n            name: \"Cancelled\",\n        },\n        {\n            id: \"deleted\",\n            name: \"Deleted\",\n        },\n    ];\n\n    const [selectedStatusList, setSelectedStatusList] = useState([]);\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    let [allSalesReturns, setAllSalesReturns] = useState([]);\n    let [excelData, setExcelData] = useState([]);\n    let [salesReturnReportFileName, setSalesReturnReportFileName] = useState(\"Sales Return Report\");\n    let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n    function prepareExcelData() {\n        console.log(\"Inside prepareExcelData()\");\n        var groupedByDate = [];\n        for (var i = 0; i < allSalesReturns.length; i++) {\n            let date = format(\n                new Date(allSalesReturns[i].date),\n                \"dd-MMM-yyyy\"\n            );\n            if (!groupedByDate[date]) {\n                groupedByDate[date] = [];\n            }\n\n            groupedByDate[date].push(allSalesReturns[i]);\n\n        }\n\n        console.log(\"groupedByDate:\", groupedByDate);\n\n        excelData = [{\n            columns: [\n                { title: \"Description\", width: { wch: 50 } },//pixels width \n                { title: \"Quantity\", width: { wpx: 90 } },//char width \n                { title: \"Unit\", width: { wpx: 90 } },\n                { title: \"Rate\", width: { wpx: 90 } },\n                { title: \"Gross\", width: { wpx: 90 } },\n                { title: \"Disc %\", width: { wpx: 90 } },\n                { title: \"Disc\", width: { wpx: 90 } },\n                { title: \"Tax %\", width: { wpx: 90 } },\n                { title: \"Tax Amount\", width: { wpx: 90 } },\n                { title: \"Net Amount\", width: { wpx: 90 } },\n            ],\n            data: [],\n        }];\n\n\n        let totalAmount = 0;\n        let totalTax = 0;\n\n        let invoiceCount = 0;\n        for (let returnDate in groupedByDate) {\n\n            console.log(\"returnDate:\", returnDate);\n            excelData[0].data.push([{ value: \"Inv Date: \" + returnDate }]);\n            let dayTotal = 0.00;\n            let dayTax = 0.00;\n\n            for (var i = 0; i < groupedByDate[returnDate].length > 0; i++) {\n                invoiceCount++;\n                let salesReturn = groupedByDate[returnDate][i];\n                excelData[0].data.push([{ value: \"Inv No (\" + salesReturn.code + \") - \" + invoiceCount + \" [\" + salesReturn.customer_name + \"]\" }]);\n\n                if (!salesReturn.products) {\n                    continue;\n                }\n\n                for (var j = 0; j < salesReturn.products.length; j++) {\n\n                    let product = salesReturn.products[j];\n\n                    excelData[0].data.push([\n                        {\n                            value: product.name\n                        },\n                        {\n                            value: product.quantity.toFixed(2),\n                        },\n                        {\n                            value: product.unit ? product.unit : \"PCs\",\n                        },\n                        {\n                            value: product.unit_price ? product.unit_price.toFixed(2) : 0.00,\n                        },\n                        {\n                            value: (product.unit_price * product.quantity).toFixed(2)\n                        },\n                        {\n                            value: \"0.00\",\n                        },\n                        {\n                            value: \"0.00\",\n                        },\n                        {\n                            value: \"15.00\",\n                        },\n                        {\n                            value: ((product.unit_price * product.quantity).toFixed(2) * 0.15).toFixed(2),\n                        },\n                        {\n                            value: (product.unit_price * product.quantity).toFixed(2),\n                        },\n                    ]);\n                }\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Discount\",\n                    }, {\n                        value: salesReturn.discount.toFixed(2),\n                    },\n                ]);\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Tax\",\n                    }, {\n                        value: salesReturn.vat_price.toFixed(2),\n                    },\n                ]);\n\n\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Total\",\n                    }, {\n                        value: (salesReturn.total - salesReturn.discount).toFixed(2),\n                    },\n                ]);\n\n                dayTotal += salesReturn.total - salesReturn.discount;\n                dayTax += salesReturn.vat_price;\n\n            }\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day Tax\",\n                }, {\n                    value: dayTax.toFixed(2),\n                },\n            ]);\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day Total\",\n                }, {\n                    value: dayTotal.toFixed(2),\n                },\n            ]);\n\n            totalAmount += dayTotal;\n            totalTax += dayTax;\n\n\n        }//end for\n\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"\",\n            }, {\n                value: \"\",\n            },\n        ]);\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total Tax\",\n            }, {\n                value: totalTax.toFixed(2),\n            },\n        ]);\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total Amount\",\n            }, {\n                value: totalAmount.toFixed(2),\n            },\n        ]);\n\n\n\n        setExcelData(excelData);\n\n        console.log(\"excelData:\", excelData);\n    }\n\n    function makeSalesReturnReportFilename() {\n        salesReturnReportFileName = \"Sales Return Report\";\n        if (searchParams[\"from_date\"] && searchParams[\"to_date\"]) {\n            salesReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + searchParams[\"to_date\"];\n        } else if (searchParams[\"from_date\"]) {\n            salesReturnReportFileName += \" - From \" + searchParams[\"from_date\"] + \" to \" + format(\n                new Date(),\n                \"dd-MMM-yyyy\"\n            );\n        } else if (searchParams[\"to_date\"]) {\n            salesReturnReportFileName += \" - Upto \" + searchParams[\"to_date\"];\n        } else if (searchParams[\"date_str\"]) {\n            salesReturnReportFileName += \" of \" + searchParams[\"date_str\"];\n        }\n\n        setSalesReturnReportFileName(salesReturnReportFileName);\n    }\n    async function getAllSalesReturns() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,code,date,total,net_total,discount_percent,discount,products,customer_name,created_at,vat_price,loss,net_profit\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        console.log(\"Timezone:\", parseFloat(diff / 60));\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        let size = 500;\n\n        let salesReturns = [];\n        var pageNo = 1;\n\n        makeSalesReturnReportFilename();\n\n        for (; true;) {\n\n            fettingAllRecordsInProgress = true;\n            setFettingAllRecordsInProgress(true);\n            let res = await fetch(\n                \"/v1/sales-return?\" +\n                Select +\n                queryParams +\n                \"&sort=\" +\n                sortSalesReturn +\n                sortField +\n                \"&page=\" +\n                pageNo +\n                \"&limit=\" +\n                size,\n                requestOptions\n            )\n                .then(async (response) => {\n                    const isJson = response.headers\n                        .get(\"content-type\")\n                        ?.includes(\"application/json\");\n                    const data = isJson && (await response.json());\n\n                    // check for error response\n                    if (!response.ok) {\n                        const error = data && data.errors;\n                        return Promise.reject(error);\n                    }\n\n                    setIsListLoading(false);\n                    if (!data.result || data.result.length === 0) {\n                        return [];\n                    }\n\n\n\n\n                    return data.result;\n\n\n                })\n                .catch((error) => {\n                    console.log(error);\n                    return [];\n                    //break;\n\n                });\n            if (res.length === 0) {\n                break;\n            }\n            salesReturns = salesReturns.concat(res);\n            pageNo++;\n        }\n\n        allSalesReturns = salesReturns;\n        setAllSalesReturns(salesReturns);\n\n        console.log(\"allSalesReturns:\", allSalesReturns);\n        prepareExcelData();\n        fettingAllRecordsInProgress = false;\n        setFettingAllRecordsInProgress(false);\n\n    }\n\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortSalesReturn, setSortSalesReturn] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n    async function suggestCustomers(searchTerm) {\n        console.log(\"Inside handle suggestCustomers\");\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = `&${queryString}`;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n        let result = await fetch(\n            `/v1/customer?${Select}${queryString}`,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setCustomerOptions(data.result);\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setCustomerOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setUserOptions(data.result);\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByUsers(values);\n        } else if (field === \"customer_id\") {\n            setSelectedCustomers(values);\n        } else if (field === \"status\") {\n            setSelectedStatusList(values);\n        } else if (field === \"payment_status\") {\n            setSelectedPaymentStatusList(values);\n        } else if (field === \"payment_methods\") {\n            setSelectedPaymentMethodList(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function list() {\n        excelData = [];\n        setExcelData(excelData);\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,code,date,net_total,created_by_name,customer_name,status,created_at,net_profit,net_loss,cash_discount,order_code,order_id,total_payment_paid,payments_count,payment_methods,payment_status,balance_amount,store_id\";\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        if (props.order) {\n            searchParams.order_id = props.order.id;\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\"\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/sales-return?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortSalesReturn +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setSalesReturnList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                totalSalesReturn = data.meta.total_sales_return;\n                setTotalSalesReturn(totalSalesReturn);\n\n                netProfit = data.meta.net_profit;\n                setNetProfit(netProfit);\n\n                loss = data.meta.net_loss;\n                setLoss(loss);\n\n                vatPrice = data.meta.vat_price;\n                setVatPrice(vatPrice);\n\n                totalDiscount = data.meta.discount;\n                setTotalDiscount(totalDiscount);\n\n                totalCashDiscount = data.meta.cash_discount;\n                setTotalCashDiscount(totalCashDiscount);\n\n                totalPaidSalesReturn = data.meta.paid_sales_return;\n                setTotalPaidSalesReturn(totalPaidSalesReturn);\n\n                totalUnPaidSalesReturn = data.meta.unpaid_sales_return;\n                setTotalUnPaidSalesReturn(totalUnPaidSalesReturn);\n\n                totalCashSalesReturn = data.meta.cash_sales_return;\n                setTotalCashSalesReturn(totalCashSalesReturn);\n\n                totalBankAccountSalesReturn = data.meta.bank_account_sales_return;\n                setTotalBankAccountSalesReturn(totalBankAccountSalesReturn);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortSalesReturn = sortSalesReturn === \"-\" ? \"\" : \"-\";\n        setSortSalesReturn(sortSalesReturn);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n\n\n    //Sales Return Payments\n    const SalesReturnPaymentCreateRef = useRef();\n    function openSalesReturnPaymentCreateForm(order) {\n        SalesReturnPaymentCreateRef.current.open(undefined, order);\n    }\n\n    const SalesReturnPaymentDetailsViewRef = useRef();\n    function openSalesReturnPaymentDetailsView(id) {\n        SalesReturnPaymentDetailsViewRef.current.open(id);\n    }\n\n    function openSalesReturnPaymentUpdateForm(id) {\n        SalesReturnPaymentCreateRef.current.open(id);\n    }\n\n    let [netProfit, setNetProfit] = useState(0.00);\n    let [loss, setLoss] = useState(0.00);\n\n\n    let [sortOrder, setSortOrder] = useState(\"-\");\n    const paymentStatusOptions = [\n        {\n            id: \"paid\",\n            name: \"Paid\",\n        },\n        {\n            id: \"not_paid\",\n            name: \"Not Paid\",\n        },\n        {\n            id: \"paid_partially\",\n            name: \"Paid partially\",\n        },\n    ];\n    const paymentMethodOptions = [\n        {\n            id: \"cash\",\n            name: \"cash\",\n        },\n        {\n            id: \"bank_account\",\n            name: \"Bank Account / Debit / Credit card\",\n        },\n    ];\n    const [selectedPaymentMethodList, setSelectedPaymentMethodList] = useState([]);\n    const [selectedPaymentStatusList, setSelectedPaymentStatusList] = useState([]);\n\n    const [selectedSalesReturn, setSelectedSalesReturn] = useState({});\n    let [showSalesReturnPaymentHistory, setShowSalesReturnPaymentHistory] = useState(false);\n\n    function openPaymentsDialogue(salesReturn) {\n        setSelectedSalesReturn(salesReturn);\n        showSalesReturnPaymentHistory = true;\n        setShowSalesReturnPaymentHistory(true);\n    }\n\n    function handlePaymentHistoryClose() {\n        showSalesReturnPaymentHistory = false;\n        setShowSalesReturnPaymentHistory(false);\n        //list();\n    }\n\n    const CreateFormRef = useRef();\n    function openUpdateForm(id) {\n        CreateFormRef.current.open(id);\n    }\n\n    function openCreateForm() {\n        CreateFormRef.current.open(undefined, props.order.id);\n    }\n\n    const SalesReturnPaymentListRef = useRef();\n\n    return (\n        <>\n            <SalesReturnCreate ref={CreateFormRef} refreshList={list} refreshSalesList={props.refreshSalesList} showToastMessage={props.showToastMessage} />\n            <SalesReturnView ref={DetailsViewRef} />\n\n            <SalesReturnPaymentCreate ref={SalesReturnPaymentCreateRef} showToastMessage={props.showToastMessage} openDetailsView={openSalesReturnPaymentDetailsView} />\n            <SalesReturnPaymentDetailsView ref={SalesReturnPaymentDetailsViewRef} openUpdateForm={openSalesReturnPaymentUpdateForm} showToastMessage={props.showToastMessage} />\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n\n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Sales Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalSalesReturn}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Paid Sales Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalPaidSalesReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h4 className=\"text-end\">\n                            Cash Sales Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalCashSalesReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h4>\n                        <h4 className=\"text-end\">\n                            Bank Account Sales Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalBankAccountSalesReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h4>\n                        <h1 className=\"text-end\">\n                            Credit Sales Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalUnPaidSalesReturn.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        {cookies.get('admin') === \"true\" ? <h1 className=\"text-end\">\n                            Net Profit: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={netProfit}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1> : \"\"}\n                        {cookies.get('admin') === \"true\" ? <h1 className=\"text-end\">\n                            Net Loss: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={loss}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1> : \"\"}\n                        <h1 className=\"text-end\">\n                            Sales Return Discount: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalDiscount.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Cash Discount: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalCashDiscount.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            VAT Return: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={vatPrice.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">Sales Returns</h1>\n                    </div>\n\n\n\n                    <div className=\"col text-end\">\n                        <ExcelFile filename={salesReturnReportFileName} element={excelData.length > 0 ? <Button variant=\"success\" className=\"btn btn-primary mb-3 success\" >Download Sales Return Report</Button> : \"\"}>\n                            <ExcelSheet dataSet={excelData} name={salesReturnReportFileName} />\n                        </ExcelFile>\n\n                        {excelData.length == 0 ? <Button variant=\"primary\" className=\"btn btn-primary mb-3\" onClick={getAllSalesReturns} >{fettingAllRecordsInProgress ? \"Preparing..\" : \"Sales Return Report\"}</Button> : \"\"}\n                        &nbsp;&nbsp;\n\n\n                        <div className=\"col text-end\">\n                            {props.order ? <Button\n                                hide={true.toString()}\n                                variant=\"primary\"\n                                className=\"btn btn-primary mb-3\"\n                                onClick={openCreateForm}\n                            >\n                                <i className=\"bi bi-plus-lg\"></i> Create\n                            </Button> : \"\"}\n                        </div>\n\n                        {/*\n                        <Button\n                            hide={true}\n                            variant=\"primary\"\n                            className=\"btn btn-primary mb-3\"\n                            onClick={openCreateForm}\n                        >\n                            <i className=\"bi bi-plus-lg\"></i> Create\n                        </Button>\n                        */}\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No SalesReturns to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ bsalesreturn: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ bsalesreturn: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"bsalesreturn\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        bsalesreturn: \"solid 1px\",\n                                                        bsalesreturnColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\">\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ bsalesreturn: \"solid 0px\" }}>\n\n                                        {totalPages ? < ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"code\");\n                                                        }}\n                                                    >\n                                                        ID\n                                                        {sortField === \"code\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"code\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"order_code\");\n                                                        }}\n                                                    >\n                                                        Order ID\n                                                        {sortField === \"order_code\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"order_code\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"date\");\n                                                        }}\n                                                    >\n                                                        Date\n                                                        {sortField === \"date\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"date\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_total\");\n                                                        }}\n                                                    >\n                                                        Net Total\n                                                        {sortField === \"net_total\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_total\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"cash_discount\");\n                                                        }}\n                                                    >\n                                                        Cash Discount\n                                                        {sortField === \"cash_discount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"cash_discount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"total_payment_paid\");\n                                                        }}\n                                                    >\n                                                        Amount paid\n                                                        {sortField === \"total_payment_paid\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"total_payment_paid\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance_amount\");\n                                                        }}\n                                                    >\n                                                        Balance\n                                                        {sortField === \"balance_amount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance_amount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payments_count\");\n                                                        }}\n                                                    >\n                                                        No.of Payments\n                                                        {sortField === \"payments_count\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payments_count\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payment_status\");\n                                                        }}\n                                                    >\n                                                        Payment Status\n                                                        {sortField === \"payment_status\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payment_status\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payment_methods\");\n                                                        }}\n                                                    >\n                                                        Payment Methods\n                                                        {sortField === \"payment_methods\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payment_methods\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_profit\");\n                                                        }}\n                                                    >\n                                                        Net Profit\n                                                        {sortField === \"net_profit\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_profit\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th> : \"\"}\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_loss\");\n                                                        }}\n                                                    >\n                                                        Net Loss\n                                                        {sortField === \"net_loss\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_loss\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th> : \"\"}\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_by\");\n                                                        }}\n                                                    >\n                                                        Created By\n                                                        {sortField === \"created_by\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_by\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"customer_name\");\n                                                        }}\n                                                    >\n                                                        Customer\n                                                        {sortField === \"customer_name\" &&\n                                                            sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"customer_name\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortSalesReturn === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortSalesReturn === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>Actions</th>\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"order_code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"order_code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <div style={{ minWidth: \"125px\" }}>\n                                                        <DatePicker\n                                                            id=\"date_str\"\n                                                            value={dateValue}\n                                                            selected={selectedDate}\n                                                            className=\"form-control\"\n                                                            dateFormat=\"MMM dd yyyy\"\n                                                            isClearable={true}\n                                                            onChange={(date) => {\n                                                                if (!date) {\n                                                                    setDateValue(\"\");\n                                                                    searchByDateField(\"date_str\", \"\");\n                                                                    return;\n                                                                }\n                                                                searchByDateField(\"date_str\", date);\n                                                                selectedDate = date;\n                                                                setSelectedDate(date);\n                                                            }}\n                                                        />\n                                                        <small\n                                                            style={{\n                                                                color: \"blue\",\n                                                                textDecoration: \"underline\",\n                                                                cursor: \"pointer\",\n                                                            }}\n                                                            onClick={(e) => setShowDateRange(!showDateRange)}\n                                                        >\n                                                            {showDateRange ? \"Less..\" : \"More..\"}\n                                                        </small>\n                                                        <br />\n\n                                                        {showDateRange ? (\n                                                            <span className=\"text-left\">\n                                                                From:{\" \"}\n                                                                <DatePicker\n                                                                    id=\"from_date\"\n                                                                    value={fromDateValue}\n                                                                    selected={selectedFromDate}\n                                                                    className=\"form-control\"\n                                                                    dateFormat=\"MMM dd yyyy\"\n                                                                    isClearable={true}\n                                                                    onChange={(date) => {\n                                                                        if (!date) {\n                                                                            setFromDateValue(\"\");\n                                                                            searchByDateField(\"from_date\", \"\");\n                                                                            return;\n                                                                        }\n                                                                        searchByDateField(\"from_date\", date);\n                                                                        selectedFromDate = date;\n                                                                        setSelectedFromDate(date);\n                                                                    }}\n                                                                />\n                                                                To:{\" \"}\n                                                                <DatePicker\n                                                                    id=\"to_date\"\n                                                                    value={toDateValue}\n                                                                    selected={selectedToDate}\n                                                                    className=\"form-control\"\n                                                                    dateFormat=\"MMM dd yyyy\"\n                                                                    isClearable={true}\n                                                                    onChange={(date) => {\n                                                                        if (!date) {\n                                                                            setToDateValue(\"\");\n                                                                            searchByDateField(\"to_date\", \"\");\n                                                                            return;\n                                                                        }\n                                                                        searchByDateField(\"to_date\", date);\n                                                                        selectedToDate = date;\n                                                                        setSelectedToDate(date);\n                                                                    }}\n                                                                />\n                                                            </span>\n                                                        ) : null}\n                                                    </div>\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_total\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_total\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"cash_discount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"cash_discount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"total_payment_paid\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"total_payment_paid\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"balance_amount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance_amount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"payments_count\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"payments_count\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"payment_status\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"payment_status\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={paymentStatusOptions}\n                                                        placeholder=\"Select Payment Status\"\n                                                        selected={selectedPaymentStatusList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"payment_methods\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"payment_methods\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={paymentMethodOptions}\n                                                        placeholder=\"Select payment methods\"\n                                                        selected={selectedPaymentMethodList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_profit\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_profit\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th> : \"\"}\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_loss\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_loss\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th> : \"\"}\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"created_by\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"created_by\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={userOptions}\n                                                        placeholder=\"Select Users\"\n                                                        selected={selectedCreatedByUsers}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestUsers(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"customer_id\"\n                                                        labelKey=\"search_label\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"customer_id\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={customerOptions}\n                                                        placeholder=\"name or mob\"\n                                                        selected={selectedCustomers}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestCustomers(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n\n\n                                                <th>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedCreatedAtDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        isClearable={true}  \n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                            selectedCreatedAtDate = date;\n                                                            setSelectedCreatedAtDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedCreatedAtFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                isClearable={true}  \n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                    selectedCreatedAtFromDate = date;\n                                                            setSelectedCreatedAtFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedCreatedAtToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                isClearable={true}  \n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtToValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                    selectedCreatedAtToDate = date;\n                                                                    setSelectedCreatedAtToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                <th></th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                            {salesreturnList &&\n                                                salesreturnList.map((salesreturn) => (\n                                                    <tr key={salesreturn.code}>\n                                                        <td>{salesreturn.code}</td>\n                                                        <td>{salesreturn.order_code}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(salesreturn.date),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        <td>{salesreturn.net_total} </td>\n                                                        <td>{salesreturn.cash_discount?.toFixed(2)}</td>\n                                                        <td>\n\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openPaymentsDialogue(salesreturn);\n                                                            }}>\n                                                                {salesreturn.total_payment_paid?.toFixed(2)}\n                                                            </Button>\n\n                                                        </td>\n                                                        <td>{salesreturn.balance_amount?.toFixed(2)}</td>\n                                                        <td>\n\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openPaymentsDialogue(salesreturn);\n                                                            }}>\n                                                                {salesreturn.payments_count}\n                                                            </Button>\n\n                                                        </td>\n                                                        <td>\n                                                            {salesreturn.payment_status == \"paid\" ?\n                                                                <span className=\"badge bg-success\">\n                                                                    Paid\n                                                                </span> : \"\"}\n                                                            {salesreturn.payment_status == \"paid_partially\" ?\n                                                                <span className=\"badge bg-warning\">\n                                                                    Paid Partially\n                                                                </span> : \"\"}\n                                                            {salesreturn.payment_status == \"not_paid\" ?\n                                                                <span className=\"badge bg-danger\">\n                                                                    Not Paid\n                                                                </span> : \"\"}\n                                                        </td>\n                                                        <td>\n\n                                                            {salesreturn.payment_methods &&\n                                                                salesreturn.payment_methods.map((name) => (\n                                                                    <span className=\"badge bg-info\">{name}</span>\n                                                                ))}\n\n                                                        </td>\n                                                        {cookies.get('admin') === \"true\" ? <td>{salesreturn.net_profit?.toFixed(2)}</td> : \"\"}\n                                                        {cookies.get('admin') === \"true\" ? <td>{salesreturn.net_loss?.toFixed(2)}</td> : \"\"}\n                                                        <td>{salesreturn.created_by_name}</td>\n                                                        <td>{salesreturn.customer_name}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(salesreturn.created_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        <td>\n                                                            {/*\n                                                        <SalesReturnUpdate id={salesreturn.id} showUpdateButton={{true}} refreshList={list} showToastMessage={props.showToastMessage} />\n                                                          <SalesReturnView id={salesreturn.id} showViewButton={{true}} show={false} />\n                                                        */}\n\n                                                            <Button className=\"btn btn-light btn-sm\" onClick={() => {\n                                                                openUpdateForm(salesreturn.id);\n                                                            }}>\n                                                                <i className=\"bi bi-pencil\"></i>\n                                                            </Button>\n\n\n                                                            <Button className=\"btn btn-primary btn-sm\" onClick={() => {\n                                                                openDetailsView(salesreturn.id);\n                                                            }}>\n                                                                <i className=\"bi bi-eye\"></i>\n                                                            </Button>\n\n                                                            {/*\n                                                            <button\n                                                                className=\"btn btn-outline-secondary dropdown-toggle\"\n                                                                type=\"button\"\n                                                                data-bs-toggle=\"dropdown\"\n                                                                aria-expanded=\"false\"\n                                                            ></button>\n                                                            <ul className=\"dropdown-menu\">\n                                                                <li>\n                                                                    <button className=\"dropdown-item\" onClick={() => {\n                                                                        openSalesReturnPaymentCreateForm(salesreturn);\n                                                                    }}>\n                                                                        <i className=\"bi bi-plus\"></i>\n                                                                        &nbsp;\n                                                                        Add Payment\n                                                                    </button>\n                                                                </li>\n                                                            </ul>\n                                                                */}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Modal show={showSalesReturnPaymentHistory} size=\"lg\" onHide={handlePaymentHistoryClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Payment history of Sales Return #{selectedSalesReturn.code}</Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handlePaymentHistoryClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <SalesReturnPaymentIndex ref={SalesReturnPaymentListRef} showToastMessage={props.showToastMessage} salesReturn={selectedSalesReturn} refreshSalesReturnList={list} />\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\n\nexport default SalesReturnIndex;\n"]},"metadata":{},"sourceType":"module"}