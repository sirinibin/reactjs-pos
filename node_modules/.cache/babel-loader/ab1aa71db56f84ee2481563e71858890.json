{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SET_BY_CODE;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // constants for internal usage\n\n\nvar SET_A = exports.SET_A = 0;\nvar SET_B = exports.SET_B = 1;\nvar SET_C = exports.SET_C = 2; // Special characters\n\nvar SHIFT = exports.SHIFT = 98;\nvar START_A = exports.START_A = 103;\nvar START_B = exports.START_B = 104;\nvar START_C = exports.START_C = 105;\nvar MODULO = exports.MODULO = 103;\nvar STOP = exports.STOP = 106;\nvar FNC1 = exports.FNC1 = 207; // Get set by start code\n\nvar SET_BY_CODE = exports.SET_BY_CODE = (_SET_BY_CODE = {}, _defineProperty(_SET_BY_CODE, START_A, SET_A), _defineProperty(_SET_BY_CODE, START_B, SET_B), _defineProperty(_SET_BY_CODE, START_C, SET_C), _SET_BY_CODE); // Get next set by code\n\nvar SWAP = exports.SWAP = {\n  101: SET_A,\n  100: SET_B,\n  99: SET_C\n};\nvar A_START_CHAR = exports.A_START_CHAR = String.fromCharCode(208); // START_A + 105\n\nvar B_START_CHAR = exports.B_START_CHAR = String.fromCharCode(209); // START_B + 105\n\nvar C_START_CHAR = exports.C_START_CHAR = String.fromCharCode(210); // START_C + 105\n// 128A (Code Set A)\n// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4\n\nvar A_CHARS = exports.A_CHARS = \"[\\x00-\\x5F\\xC8-\\xCF]\"; // 128B (Code Set B)\n// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4\n\nvar B_CHARS = exports.B_CHARS = \"[\\x20-\\x7F\\xC8-\\xCF]\"; // 128C (Code Set C)\n// 00–99 (encodes two digits with a single code point) and FNC1\n\nvar C_CHARS = exports.C_CHARS = \"(\\xCF*[0-9]{2}\\xCF*)\"; // CODE128 includes 107 symbols:\n// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)\n// Each symbol consist of three black bars (1) and three white spaces (0).\n\nvar BARS = exports.BARS = [11011001100, 11001101100, 11001100110, 10010011000, 10010001100, 10001001100, 10011001000, 10011000100, 10001100100, 11001001000, 11001000100, 11000100100, 10110011100, 10011011100, 10011001110, 10111001100, 10011101100, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 11100100110, 11101100100, 11100110100, 11100110010, 11011011000, 11011000110, 11000110110, 10100011000, 10001011000, 10001000110, 10110001000, 10001101000, 10001100010, 11010001000, 11000101000, 11000100010, 10110111000, 10110001110, 10001101110, 10111011000, 10111000110, 10001110110, 11101110110, 11010001110, 11000101110, 11011101000, 11011100010, 11011101110, 11101011000, 11101000110, 11100010110, 11101101000, 11101100010, 11100011010, 11101111010, 11001000010, 11110001010, 10100110000, 10100001100, 10010110000, 10010000110, 10000101100, 10000100110, 10110010000, 10110000100, 10011010000, 10011000010, 10000110100, 10000110010, 11000010010, 11001010000, 11110111010, 11000010100, 10001111010, 10100111100, 10010111100, 10010011110, 10111100100, 10011110100, 10011110010, 11110100100, 11110010100, 11110010010, 11011011110, 11011110110, 11110110110, 10101111000, 10100011110, 10001011110, 10111101000, 10111100010, 11110101000, 11110100010, 10111011110, 10111101110, 11101011110, 11110101110, 11010000100, 11010010000, 11010011100, 1100011101011];","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/jsbarcode/bin/barcodes/CODE128/constants.js"],"names":["Object","defineProperty","exports","value","_SET_BY_CODE","_defineProperty","obj","key","enumerable","configurable","writable","SET_A","SET_B","SET_C","SHIFT","START_A","START_B","START_C","MODULO","STOP","FNC1","SET_BY_CODE","SWAP","A_START_CHAR","String","fromCharCode","B_START_CHAR","C_START_CHAR","A_CHARS","B_CHARS","C_CHARS","BARS"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _SET_BY_CODE;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// constants for internal usage\nvar SET_A = exports.SET_A = 0;\nvar SET_B = exports.SET_B = 1;\nvar SET_C = exports.SET_C = 2;\n\n// Special characters\nvar SHIFT = exports.SHIFT = 98;\nvar START_A = exports.START_A = 103;\nvar START_B = exports.START_B = 104;\nvar START_C = exports.START_C = 105;\nvar MODULO = exports.MODULO = 103;\nvar STOP = exports.STOP = 106;\nvar FNC1 = exports.FNC1 = 207;\n\n// Get set by start code\nvar SET_BY_CODE = exports.SET_BY_CODE = (_SET_BY_CODE = {}, _defineProperty(_SET_BY_CODE, START_A, SET_A), _defineProperty(_SET_BY_CODE, START_B, SET_B), _defineProperty(_SET_BY_CODE, START_C, SET_C), _SET_BY_CODE);\n\n// Get next set by code\nvar SWAP = exports.SWAP = {\n\t101: SET_A,\n\t100: SET_B,\n\t99: SET_C\n};\n\nvar A_START_CHAR = exports.A_START_CHAR = String.fromCharCode(208); // START_A + 105\nvar B_START_CHAR = exports.B_START_CHAR = String.fromCharCode(209); // START_B + 105\nvar C_START_CHAR = exports.C_START_CHAR = String.fromCharCode(210); // START_C + 105\n\n// 128A (Code Set A)\n// ASCII characters 00 to 95 (0–9, A–Z and control codes), special characters, and FNC 1–4\nvar A_CHARS = exports.A_CHARS = \"[\\x00-\\x5F\\xC8-\\xCF]\";\n\n// 128B (Code Set B)\n// ASCII characters 32 to 127 (0–9, A–Z, a–z), special characters, and FNC 1–4\nvar B_CHARS = exports.B_CHARS = \"[\\x20-\\x7F\\xC8-\\xCF]\";\n\n// 128C (Code Set C)\n// 00–99 (encodes two digits with a single code point) and FNC1\nvar C_CHARS = exports.C_CHARS = \"(\\xCF*[0-9]{2}\\xCF*)\";\n\n// CODE128 includes 107 symbols:\n// 103 data symbols, 3 start symbols (A, B and C), and 1 stop symbol (the last one)\n// Each symbol consist of three black bars (1) and three white spaces (0).\nvar BARS = exports.BARS = [11011001100, 11001101100, 11001100110, 10010011000, 10010001100, 10001001100, 10011001000, 10011000100, 10001100100, 11001001000, 11001000100, 11000100100, 10110011100, 10011011100, 10011001110, 10111001100, 10011101100, 10011100110, 11001110010, 11001011100, 11001001110, 11011100100, 11001110100, 11101101110, 11101001100, 11100101100, 11100100110, 11101100100, 11100110100, 11100110010, 11011011000, 11011000110, 11000110110, 10100011000, 10001011000, 10001000110, 10110001000, 10001101000, 10001100010, 11010001000, 11000101000, 11000100010, 10110111000, 10110001110, 10001101110, 10111011000, 10111000110, 10001110110, 11101110110, 11010001110, 11000101110, 11011101000, 11011100010, 11011101110, 11101011000, 11101000110, 11100010110, 11101101000, 11101100010, 11100011010, 11101111010, 11001000010, 11110001010, 10100110000, 10100001100, 10010110000, 10010000110, 10000101100, 10000100110, 10110010000, 10110000100, 10011010000, 10011000010, 10000110100, 10000110010, 11000010010, 11001010000, 11110111010, 11000010100, 10001111010, 10100111100, 10010111100, 10010011110, 10111100100, 10011110100, 10011110010, 11110100100, 11110010100, 11110010010, 11011011110, 11011110110, 11110110110, 10101111000, 10100011110, 10001011110, 10111101000, 10111100010, 11110101000, 11110100010, 10111011110, 10111101110, 11101011110, 11110101110, 11010000100, 11010010000, 11010011100, 1100011101011];"]},"metadata":{},"sourceType":"script"}