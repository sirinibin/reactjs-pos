{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/account/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AccountIndex(props) {\n  _s();\n\n  const cookies = new Cookies(); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false); //const selectedDate = new Date();\n\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  const [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //list\n\n  const [accountList, setaccountList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n  let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n  let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n  let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n  let [selectedUpdatedAtDate, setSelectedUpdatedAtDate] = useState(new Date());\n  let [selectedUpdatedAtFromDate, setSelectedUpdatedAtFromDate] = useState(new Date());\n  let [selectedUpdatedAtToDate, setSelectedUpdatedAtToDate] = useState(new Date()); //Updated At filter\n\n  const [showUpdatedAtDateRange, setShowUpdatedAtDateRange] = useState(false);\n  const [updatedAtValue, setUpdatedAtValue] = useState(\"\");\n  const [updatedAtFromValue, setUpdatedAtFromValue] = useState(\"\");\n  const [updatedAtToValue, setUpdatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Created By Expense Auto Suggestion\n\n  const [expenseOptions, setExpenseOptions] = useState([]);\n  const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]); //Created By Expense Auto Suggestion\n\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //Search params\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"updated_at\");\n  let [sortaccount, setSortaccount] = useState(\"-\");\n  let [debitBalanceTotal, setDebitBalanceTotal] = useState(0.00);\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + object[key];\n    }).join(\"&\");\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      page = 1;\n      searchParams[field] = \"\";\n      setPage(page);\n      list();\n      return;\n    }\n\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    value = format(d, \"MMM dd yyyy\");\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"updated_at\") {\n      setUpdatedAtValue(value);\n      setUpdatedAtFromValue(\"\");\n      setUpdatedAtToValue(\"\");\n      searchParams[\"updated_at_from\"] = \"\";\n      searchParams[\"updated_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"updated_at_from\") {\n      setUpdatedAtFromValue(value);\n      setUpdatedAtValue(\"\");\n      searchParams[\"updated_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"updated_at_to\") {\n      setUpdatedAtToValue(value);\n      setUpdatedAtValue(\"\");\n      searchParams[\"updated_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByExpenses(values);\n    } else if (field === \"category_id\") {\n      setSelectedExpenseCategories(values);\n    } else if (field === \"account_id\") {\n      setSelectedAccounts(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n  function list() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,type,phone,number,search_label,open,balance,debit_total,credit_total,created_at,updated_at,reference_model,debit_or_credit_balance\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    } // console.log(\"queryParams:\", queryParams);\n    //queryParams = encodeURIComponent(queryParams);\n\n\n    setIsListLoading(true);\n    fetch(\"/v1/account?\" + Select + queryParams + \"&sort=\" + sortaccount + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setaccountList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      debitBalanceTotal = data.meta.debit_balance_total;\n      setDebitBalanceTotal(debitBalanceTotal);\n      creditBalanceTotal = data.meta.credit_balance_total;\n      setCreditBalanceTotal(creditBalanceTotal); //totalExpenses = data.meta.total;\n      //setTotalExpenses(totalExpenses);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortaccount = sortaccount === \"-\" ? \"\" : \"-\";\n    setSortaccount(sortaccount);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start\",\n                    children: \"No Accounts to display\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  bexpense: \"solid 0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-start\",\n                  style: {\n                    border: \"solid 0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setIsRefreshInProcess(true);\n                      list();\n                    },\n                    variant: \"primary\",\n                    disabled: isRefreshInProcess,\n                    children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"bexpense\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-refresh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"visually-hidden\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-center\",\n                  children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"grow\",\n                    variant: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-end\",\n                  children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Size:\\xA0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: pageSize,\n                      onChange: e => {\n                        changePageSize(e.target.value);\n                      },\n                      className: \"form-control pull-right\",\n                      style: {\n                        bexpense: \"solid 1px\",\n                        bexpenseColor: \"silver\",\n                        width: \"55px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5\",\n                        children: \"5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 399,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10\",\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"20\",\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 405,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"40\",\n                        children: \"40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"50\",\n                        children: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"100\",\n                        children: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"200\",\n                        children: \"200\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 409,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"300\",\n                        children: \"300\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"500\",\n                        children: \"500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1000\",\n                        children: \"1000\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"1500\",\n                        children: \"1500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  style: {\n                    bexpense: \"solid 0px\"\n                  },\n                  children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-start\",\n                      children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-end\",\n                      children: [\"page \", page, \" of \", totalPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                style: {\n                  overflowX: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-sm table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"number\");\n                          },\n                          children: [\"Account No.\", sortField === \"number\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 480,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"number\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 483,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 469,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 468,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"name\");\n                          },\n                          children: [\"Account Name\", sortField === \"name\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 500,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"name\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 503,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 489,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"phone\");\n                          },\n                          children: [\"Phone\", sortField === \"phone\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 520,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"phone\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 523,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 509,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 508,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"type\");\n                          },\n                          children: [\"Type\", sortField === \"type\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 540,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"type\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 543,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 529,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 528,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"balance\");\n                          },\n                          children: [\"Balance\", sortField === \"balance\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 563,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"balance\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 566,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 552,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"open\");\n                          },\n                          children: [\"Open\", sortField === \"open\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 583,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"open\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 586,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 572,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 571,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"reference_model\");\n                          },\n                          children: [\"Reference model\", sortField === \"reference_model\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 602,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"reference_model\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 605,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 591,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 590,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"balance\");\n                          },\n                          children: [\"Debit Balance\", sortField === \"balance\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 621,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"balance\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 624,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 610,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 609,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"balance\");\n                          },\n                          children: [\"Credit Balance\", sortField === \"balance\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 640,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"balance\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 643,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 629,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"updated_at\");\n                          },\n                          children: [\"Updated At\", sortField === \"updated_at\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 660,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"updated_at\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 663,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 649,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_at\");\n                          },\n                          children: [\"Created At\", sortField === \"created_at\" && sortaccount === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 680,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_at\" && sortaccount === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 683,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 669,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 668,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"number\",\n                          onChange: e => searchByFieldValue(\"number\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 694,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 693,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"name\",\n                          onChange: e => searchByFieldValue(\"name\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 704,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 703,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"phone\",\n                          onChange: e => searchByFieldValue(\"phone\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 714,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 713,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          onChange: e => searchByFieldValue(\"type\", e.target.value),\n                          className: \"form-control\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"All\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 728,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"drawing\",\n                            children: \"Drawing\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 729,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"expense\",\n                            children: \"Expense\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 730,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"asset\",\n                            children: \"Asset\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 731,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"liability\",\n                            children: \"Liability\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 732,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"equity\",\n                            children: \"Capital / Equity\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 733,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"revenue\",\n                            children: \"Revenue\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 734,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 724,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 723,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"balance\",\n                          onChange: e => searchByFieldValue(\"balance\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 738,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 737,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          minWidth: \"130px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          onChange: e => searchByFieldValue(\"open\", e.target.value),\n                          className: \"form-control\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"All\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 752,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1\",\n                            children: \"Open\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 753,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"0\",\n                            children: \"Closed\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 754,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 748,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 747,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          onChange: e => searchByFieldValue(\"reference_model\", e.target.value),\n                          className: \"form-control\",\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"\",\n                            children: \"All\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 762,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"customer\",\n                            children: \"Customer\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 763,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"vendor\",\n                            children: \"Vendor\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 764,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"user\",\n                            children: \"User\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 765,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 758,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 757,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          onChange: e => searchByFieldValue(\"balance\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 769,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 768,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"110px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          onChange: e => searchByFieldValue(\"balance\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 778,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 777,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          minWidth: \"150px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"updated_at\",\n                          value: updatedAtValue,\n                          selected: selectedUpdatedAtDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              setUpdatedAtValue(\"\");\n                              searchByDateField(\"updated_at\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"updated_at\", date);\n                            selectedUpdatedAtDate = date;\n                            setSelectedUpdatedAtDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 787,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowUpdatedAtDateRange(!showUpdatedAtDateRange),\n                          children: showUpdatedAtDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 804,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 816,\n                          columnNumber: 53\n                        }, this), showUpdatedAtDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"updated_at_from\",\n                            value: updatedAtFromValue,\n                            selected: selectedUpdatedAtFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtFromValue(\"\");\n                                searchByDateField(\"updated_at_from\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"updated_at_from\", date);\n                              selectedUpdatedAtFromDate = date;\n                              setSelectedUpdatedAtFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 821,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"updated_at_to\",\n                            value: updatedAtToValue,\n                            selected: selectedUpdatedAtToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setUpdatedAtFromValue(\"\");\n                                searchByDateField(\"updated_at_to\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"updated_at_to\", date);\n                              selectedUpdatedAtToDate = date;\n                              setSelectedUpdatedAtToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 839,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 819,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 786,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          minWidth: \"150px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"created_at\",\n                          value: createdAtValue,\n                          selected: selectedCreatedAtDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              setCreatedAtValue(\"\");\n                              searchByDateField(\"created_at\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"created_at\", date);\n                            selectedCreatedAtDate = date;\n                            setSelectedCreatedAtDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 861,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowCreatedAtDateRange(!showCreatedAtDateRange),\n                          children: showCreatedAtDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 878,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 890,\n                          columnNumber: 53\n                        }, this), showCreatedAtDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_from\",\n                            value: createdAtFromValue,\n                            selected: selectedCreatedAtFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtFromValue(\"\");\n                                searchByDateField(\"created_at_from\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_from\", date);\n                              selectedCreatedAtFromDate = date;\n                              setSelectedCreatedAtFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 895,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_to\",\n                            value: createdAtToValue,\n                            selected: selectedCreatedAtToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtFromValue(\"\");\n                                searchByDateField(\"created_at_to\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_to\", date);\n                              selectedCreatedAtToDate = date;\n                              setSelectedCreatedAtToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 913,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 893,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 860,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 692,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"text-center\",\n                    children: accountList && accountList.map(account => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"155px\",\n                          maxWidth: \"155px\"\n                        },\n                        children: account.number\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 940,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 941,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.phone\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 942,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 943,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.balance\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 944,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.open ? \"Open\" : \"Closed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.reference_model\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 946,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.debit_or_credit_balance == \"debit_balance\" ? account.balance : \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 947,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        style: {\n                          minWidth: \"120px\",\n                          maxWidth: \"120px\"\n                        },\n                        children: account.debit_or_credit_balance == \"credit_balance\" ? account.balance : \"0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 948,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: format(new Date(account.updated_at), \"MMM dd yyyy h:mma\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 949,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: format(new Date(account.created_at), \"MMM dd yyyy h:mma\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 955,\n                        columnNumber: 57\n                      }, this)]\n                    }, account.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 936,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                breakLabel: \"...\",\n                nextLabel: \"next >\",\n                onPageChange: event => {\n                  changePage(event.selected + 1);\n                },\n                pageRangeDisplayed: 5,\n                pageCount: totalPages,\n                previousLabel: \"< previous\",\n                renderOnZeroPageCount: null,\n                className: \"pagination  flex-wrap\",\n                pageClassName: \"page-item\",\n                pageLinkClassName: \"page-link\",\n                activeClassName: \"active\",\n                previousClassName: \"page-item\",\n                nextClassName: \"page-item\",\n                previousLinkClassName: \"page-link\",\n                nextLinkClassName: \"page-link\",\n                forcePage: page - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 47\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AccountIndex, \"rDbOdhFVFlGdx/Z5ipI3HuJCoRs=\");\n\n_c = AccountIndex;\nexport default AccountIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/account/index.js"],"names":["React","useState","useEffect","useRef","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","ReactPaginate","NumberFormat","AccountIndex","props","cookies","showDateRange","setShowDateRange","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","accountList","setaccountList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","selectedCreatedAtDate","setSelectedCreatedAtDate","selectedCreatedAtFromDate","setSelectedCreatedAtFromDate","selectedCreatedAtToDate","setSelectedCreatedAtToDate","selectedUpdatedAtDate","setSelectedUpdatedAtDate","selectedUpdatedAtFromDate","setSelectedUpdatedAtFromDate","selectedUpdatedAtToDate","setSelectedUpdatedAtToDate","showUpdatedAtDateRange","setShowUpdatedAtDateRange","updatedAtValue","setUpdatedAtValue","updatedAtFromValue","setUpdatedAtFromValue","updatedAtToValue","setUpdatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","expenseOptions","setExpenseOptions","selectedCreatedByExpenses","setSelectedCreatedByExpenses","categoryOptions","setCategoryOptions","selectedExpenseCategories","setSelectedExpenseCategories","list","searchParams","setSearchParams","sortField","setSortField","sortaccount","setSortaccount","debitBalanceTotal","setDebitBalanceTotal","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","searchByDateField","d","toUTCString","selectedAccounts","setSelectedAccounts","searchByMultipleValuesField","values","model","id","totalExpenses","setTotalExpenses","requestOptions","method","headers","Authorization","get","Select","store_id","diff","getTimezoneOffset","parseFloat","queryParams","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","pageCount","parseInt","total_count","length","meta","debit_balance_total","creditBalanceTotal","credit_balance_total","setCreditBalanceTotal","catch","console","log","sort","changePageSize","size","changePage","newPage","bexpense","border","e","target","bexpenseColor","width","event","selected","overflowX","textDecoration","cursor","minWidth","date","color","account","maxWidth","number","name","phone","type","balance","open","reference_model","debit_or_credit_balance","updated_at","created_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\n\nfunction AccountIndex(props) {\n\n    const cookies = new Cookies();\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    //const selectedDate = new Date();\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    const [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //list\n    const [accountList, setaccountList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n    let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n    let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n\n    let [selectedUpdatedAtDate, setSelectedUpdatedAtDate] = useState(new Date());\n    let [selectedUpdatedAtFromDate, setSelectedUpdatedAtFromDate] = useState(new Date());\n    let [selectedUpdatedAtToDate, setSelectedUpdatedAtToDate] = useState(new Date());\n\n      //Updated At filter\n      const [showUpdatedAtDateRange, setShowUpdatedAtDateRange] = useState(false);\n      const [updatedAtValue, setUpdatedAtValue] = useState(\"\");\n      const [updatedAtFromValue, setUpdatedAtFromValue] = useState(\"\");\n      const [updatedAtToValue, setUpdatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Created By Expense Auto Suggestion\n    const [expenseOptions, setExpenseOptions] = useState([]);\n    const [selectedCreatedByExpenses, setSelectedCreatedByExpenses] = useState([]);\n\n    //Created By Expense Auto Suggestion\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedExpenseCategories, setSelectedExpenseCategories] = useState([]);\n\n\n    useEffect(() => {\n        list();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"updated_at\");\n    let [sortaccount, setSortaccount] = useState(\"-\");\n\n    let [debitBalanceTotal, setDebitBalanceTotal]= useState(0.00);\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            page = 1;\n            searchParams[field] = \"\";\n            setPage(page);\n            list();\n            return;\n        }\n\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n\n        value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }else if (field === \"updated_at\") {\n            setUpdatedAtValue(value);\n            setUpdatedAtFromValue(\"\");\n            setUpdatedAtToValue(\"\");\n            searchParams[\"updated_at_from\"] = \"\";\n            searchParams[\"updated_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        \n\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        if (field === \"updated_at_from\") {\n            setUpdatedAtFromValue(value);\n            setUpdatedAtValue(\"\");\n            searchParams[\"updated_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"updated_at_to\") {\n            setUpdatedAtToValue(value);\n            setUpdatedAtValue(\"\");\n            searchParams[\"updated_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    const [selectedAccounts, setSelectedAccounts] = useState([]);\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByExpenses(values);\n        } else if (field === \"category_id\") {\n            setSelectedExpenseCategories(values);\n        } else if (field === \"account_id\") {\n            setSelectedAccounts(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    let [totalExpenses, setTotalExpenses] = useState(0.00);\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,name,type,phone,number,search_label,open,balance,debit_total,credit_total,created_at,updated_at,reference_model,debit_or_credit_balance\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/account?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortaccount +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setaccountList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                debitBalanceTotal = data.meta.debit_balance_total;\n                setDebitBalanceTotal(debitBalanceTotal);\n\n                creditBalanceTotal = data.meta.credit_balance_total;\n                setCreditBalanceTotal(creditBalanceTotal);\n\n              \n\n                //totalExpenses = data.meta.total;\n                //setTotalExpenses(totalExpenses);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortaccount = sortaccount === \"-\" ? \"\" : \"-\";\n        setSortaccount(sortaccount);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }   \n\n\n    return (\n        <>\n            {/*\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    \n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Total: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalExpenses}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" SAR\"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                    </div>\n\n                </div>\n            </div>\n           */}\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">Accounts</h1>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No Accounts to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ bexpense: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"bexpense\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        bexpense: \"solid 1px\",\n                                                        bexpenseColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\" >\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                    <option value=\"200\">200</option>\n                                                    <option value=\"300\">300</option>\n                                                    <option value=\"500\">500</option>\n                                                    <option value=\"1000\">1000</option>\n                                                    <option value=\"1500\">1500</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ bexpense: \"solid 0px\" }}>\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"number\");\n                                                        }}\n                                                    >\n                                                        Account No.\n                                                        {sortField === \"number\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"number\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"name\");\n                                                        }}\n                                                    >\n                                                        Account Name\n                                                        {sortField === \"name\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"name\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"phone\");\n                                                        }}\n                                                    >\n                                                        Phone\n                                                        {sortField === \"phone\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"phone\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"type\");\n                                                        }}\n                                                    >\n                                                        Type\n                                                        {sortField === \"type\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"type\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance\");\n                                                        }}\n                                                    >\n                                                        Balance\n                                                        {sortField === \"balance\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"open\");\n                                                        }}\n                                                    >\n                                                        Open\n                                                        {sortField === \"open\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"open\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"reference_model\");\n                                                        }}\n                                                    >\n                                                        Reference model\n                                                        {sortField === \"reference_model\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"reference_model\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance\");\n                                                        }}\n                                                    >\n                                                        Debit Balance\n                                                        {sortField === \"balance\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance\");\n                                                        }}\n                                                    >\n                                                        Credit Balance\n                                                        {sortField === \"balance\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"updated_at\");\n                                                        }}\n                                                    >\n                                                        Updated At\n                                                        {sortField === \"updated_at\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"updated_at\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortaccount === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortaccount === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"number\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"number\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"name\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"name\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"phone\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"phone\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <select onChange={(e) =>\n                                                        searchByFieldValue(\"type\", e.target.value)\n                                                    }\n                                                        className=\"form-control\">\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"drawing\">Drawing</option>\n                                                        <option value=\"expense\">Expense</option>\n                                                        <option value=\"asset\">Asset</option>\n                                                        <option value=\"liability\">Liability</option>\n                                                        <option value=\"equity\">Capital / Equity</option>\n                                                        <option value=\"revenue\">Revenue</option>\n                                                    </select>\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"balance\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ minWidth: \"130px\" }}>\n                                                    <select onChange={(e) =>\n                                                        searchByFieldValue(\"open\", e.target.value)\n                                                    }\n                                                        className=\"form-control\">\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"1\">Open</option>\n                                                        <option value=\"0\">Closed</option>\n                                                    </select>\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <select onChange={(e) =>\n                                                        searchByFieldValue(\"reference_model\", e.target.value)\n                                                    }\n                                                        className=\"form-control\">\n                                                        <option value=\"\">All</option>\n                                                        <option value=\"customer\">Customer</option>\n                                                        <option value=\"vendor\">Vendor</option>\n                                                        <option value=\"user\">User</option>\n                                                    </select>\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ width: \"110px\" }}>\n                                                    <input\n                                                        type=\"text\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"updated_at\"\n                                                        value={updatedAtValue}\n                                                        selected={selectedUpdatedAtDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setUpdatedAtValue(\"\");\n                                                                searchByDateField(\"updated_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"updated_at\", date);\n                                                            selectedUpdatedAtDate=date;\n                                                            setSelectedUpdatedAtDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowUpdatedAtDateRange(!showUpdatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showUpdatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showUpdatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"updated_at_from\"\n                                                                value={updatedAtFromValue}\n                                                                selected={selectedUpdatedAtFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"updated_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"updated_at_from\", date);\n                                                                    selectedUpdatedAtFromDate=date;\n                                                                    setSelectedUpdatedAtFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"updated_at_to\"\n                                                                value={updatedAtToValue}\n                                                                selected={selectedUpdatedAtToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setUpdatedAtFromValue(\"\");\n                                                                        searchByDateField(\"updated_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"updated_at_to\", date);\n                                                                    selectedUpdatedAtToDate=date;\n                                                                    setSelectedUpdatedAtToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n\n                                                <th style={{ minWidth: \"150px\" }}>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedCreatedAtDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                            selectedCreatedAtDate=date;\n                                                            setSelectedCreatedAtDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedCreatedAtFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                    selectedCreatedAtFromDate=date;\n                                                                    setSelectedCreatedAtFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedCreatedAtToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                    selectedCreatedAtToDate=date;\n                                                                    setSelectedCreatedAtToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                            {accountList &&\n                                                accountList.map((account) => (\n                                                    <tr key={account.id}>\n                                                        <td style={{ minWidth: \"155px\", maxWidth: \"155px\" }} >{account.number}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.name}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.phone}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.type}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.balance}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.open ? \"Open\" : \"Closed\"}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.reference_model}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.debit_or_credit_balance==\"debit_balance\"? account.balance:\"0\"}</td>\n                                                        <td style={{ minWidth: \"120px\", maxWidth: \"120px\" }}>{account.debit_or_credit_balance==\"credit_balance\"? account.balance:\"0\"}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(account.updated_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(account.created_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default AccountIndex;\n"]},"metadata":{},"sourceType":"module"}