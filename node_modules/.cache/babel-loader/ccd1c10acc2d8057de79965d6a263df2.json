{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Invoice = void 0;\n\nvar tag_1 = require(\"./tag\");\n\nvar to_tlv_1 = require(\"../utils/to-tlv\");\n\nvar to_base64_1 = require(\"../utils/to-base64\");\n\nvar qrcode_1 = require(\"qrcode\");\n/**\n * Invoice class\n */\n\n\nvar Invoice =\n/** @class */\nfunction () {\n  function Invoice(invoice) {\n    this._tlv = (0, to_tlv_1.toTlv)([new tag_1.Tag(1, invoice.sellerName), new tag_1.Tag(2, invoice.vatRegistrationNumber), new tag_1.Tag(3, invoice.invoiceTimestamp), new tag_1.Tag(4, invoice.invoiceTotal), new tag_1.Tag(5, invoice.invoiceVatTotal)]);\n  }\n  /**\n   * Returns the TLV representation of the invoice\n   * @return {string}\n   */\n\n\n  Invoice.prototype.toTlv = function () {\n    return this._tlv;\n  };\n  /**\n   * Returns a base64 string representing the invoice\n   * @return {string}\n   */\n\n\n  Invoice.prototype.toBase64 = function () {\n    return (0, to_base64_1.toBase64)(this._tlv);\n  };\n  /**\n   * Returns a QR code as base64 data image\n   * @return {string}\n   */\n\n\n  Invoice.prototype.render = function (options) {\n    return (0, qrcode_1.toDataURL)(this.toBase64(), options);\n  };\n\n  return Invoice;\n}();\n\nexports.Invoice = Invoice;","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/node_modules/@axenda/zatca/lib/models/invoice.js"],"names":["Object","defineProperty","exports","value","Invoice","tag_1","require","to_tlv_1","to_base64_1","qrcode_1","invoice","_tlv","toTlv","Tag","sellerName","vatRegistrationNumber","invoiceTimestamp","invoiceTotal","invoiceVatTotal","prototype","toBase64","render","options","toDataURL"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,QAAD,CAAtB;AACA;AACA;AACA;;;AACA,IAAIF,OAAO;AAAG;AAAe,YAAY;AACrC,WAASA,OAAT,CAAiBM,OAAjB,EAA0B;AACtB,SAAKC,IAAL,GAAY,CAAC,GAAGJ,QAAQ,CAACK,KAAb,EAAoB,CAC5B,IAAIP,KAAK,CAACQ,GAAV,CAAc,CAAd,EAAiBH,OAAO,CAACI,UAAzB,CAD4B,EAE5B,IAAIT,KAAK,CAACQ,GAAV,CAAc,CAAd,EAAiBH,OAAO,CAACK,qBAAzB,CAF4B,EAG5B,IAAIV,KAAK,CAACQ,GAAV,CAAc,CAAd,EAAiBH,OAAO,CAACM,gBAAzB,CAH4B,EAI5B,IAAIX,KAAK,CAACQ,GAAV,CAAc,CAAd,EAAiBH,OAAO,CAACO,YAAzB,CAJ4B,EAK5B,IAAIZ,KAAK,CAACQ,GAAV,CAAc,CAAd,EAAiBH,OAAO,CAACQ,eAAzB,CAL4B,CAApB,CAAZ;AAOH;AACD;AACJ;AACA;AACA;;;AACId,EAAAA,OAAO,CAACe,SAAR,CAAkBP,KAAlB,GAA0B,YAAY;AAClC,WAAO,KAAKD,IAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIP,EAAAA,OAAO,CAACe,SAAR,CAAkBC,QAAlB,GAA6B,YAAY;AACrC,WAAO,CAAC,GAAGZ,WAAW,CAACY,QAAhB,EAA0B,KAAKT,IAA/B,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIP,EAAAA,OAAO,CAACe,SAAR,CAAkBE,MAAlB,GAA2B,UAAUC,OAAV,EAAmB;AAC1C,WAAO,CAAC,GAAGb,QAAQ,CAACc,SAAb,EAAwB,KAAKH,QAAL,EAAxB,EAAyCE,OAAzC,CAAP;AACH,GAFD;;AAGA,SAAOlB,OAAP;AACH,CAhC4B,EAA7B;;AAiCAF,OAAO,CAACE,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Invoice = void 0;\nvar tag_1 = require(\"./tag\");\nvar to_tlv_1 = require(\"../utils/to-tlv\");\nvar to_base64_1 = require(\"../utils/to-base64\");\nvar qrcode_1 = require(\"qrcode\");\n/**\n * Invoice class\n */\nvar Invoice = /** @class */ (function () {\n    function Invoice(invoice) {\n        this._tlv = (0, to_tlv_1.toTlv)([\n            new tag_1.Tag(1, invoice.sellerName),\n            new tag_1.Tag(2, invoice.vatRegistrationNumber),\n            new tag_1.Tag(3, invoice.invoiceTimestamp),\n            new tag_1.Tag(4, invoice.invoiceTotal),\n            new tag_1.Tag(5, invoice.invoiceVatTotal),\n        ]);\n    }\n    /**\n     * Returns the TLV representation of the invoice\n     * @return {string}\n     */\n    Invoice.prototype.toTlv = function () {\n        return this._tlv;\n    };\n    /**\n     * Returns a base64 string representing the invoice\n     * @return {string}\n     */\n    Invoice.prototype.toBase64 = function () {\n        return (0, to_base64_1.toBase64)(this._tlv);\n    };\n    /**\n     * Returns a QR code as base64 data image\n     * @return {string}\n     */\n    Invoice.prototype.render = function (options) {\n        return (0, qrcode_1.toDataURL)(this.toBase64(), options);\n    };\n    return Invoice;\n}());\nexports.Invoice = Invoice;\n"]},"metadata":{},"sourceType":"script"}