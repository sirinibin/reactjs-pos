{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/order/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef } from \"react\";\nimport OrderCreate from \"./create.js\";\nimport OrderView from \"./view.js\";\nimport SalesPaymentIndex from \"./../sales_payment/index.js\";\nimport SalesReturnIndex from \"./../sales_return/index.js\";\nimport SalesReturnCreate from \"./../sales_return/create.js\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport ReactExport from 'react-data-export';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst OrderIndex = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const cookies = new Cookies();\n  let [allOrders, setAllOrders] = useState([]);\n  let [excelData, setExcelData] = useState([]);\n  let [salesReportFileName, setSalesReportFileName] = useState(\"Sales Report\");\n  let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n  function prepareExcelData() {\n    console.log(\"Inside prepareExcelData()\");\n    var groupedByDate = [];\n\n    for (var i = 0; i < allOrders.length; i++) {\n      let date = format(new Date(allOrders[i].date), \"dd-MMM-yyyy\");\n\n      if (!groupedByDate[date]) {\n        groupedByDate[date] = [];\n      }\n\n      groupedByDate[date].push(allOrders[i]);\n    }\n\n    console.log(\"groupedByDate:\", groupedByDate);\n    excelData = [{\n      columns: [{\n        title: \"Description\",\n        width: {\n          wch: 50\n        }\n      }, //pixels width \n      {\n        title: \"Quantity\",\n        width: {\n          wpx: 90\n        }\n      }, //char width \n      {\n        title: \"Unit\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Rate\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Gross\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Disc %\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Disc\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Tax %\",\n        width: {\n          wpx: 90\n        }\n      }, {\n        title: \"Tax Amount\",\n        width: {\n          wpx: 180\n        }\n      }, {\n        title: \"Net Amount\",\n        width: {\n          wpx: 90\n        }\n      }],\n      data: [],\n      filename: salesReportFileName\n    }];\n    let totalAmountBeforeVAT = 0;\n    let totalAmountAfterVAT = 0;\n    let totalVAT = 0;\n    let totalDiscount = 0;\n    let totalAmountAfterDiscount = 0;\n    let totalShippingFees = 0;\n    let invoiceCount = 0;\n\n    for (let orderDate in groupedByDate) {\n      //  console.log(\"orderDate:\", orderDate);\n      excelData[0].data.push([{\n        value: \"Inv Date: \" + orderDate\n      }]);\n      let dayTotalBeforeVAT = 0.00;\n      let dayTotalAfterVAT = 0.00;\n      let dayVAT = 0.00;\n      let dayDiscount = 0.00;\n      let dayShippingFees = 0.00;\n\n      for (var i = 0; i < groupedByDate[orderDate].length > 0; i++) {\n        invoiceCount++;\n        let order = groupedByDate[orderDate][i];\n        excelData[0].data.push([{\n          value: \"Inv No (\" + order.code + \") - \" + invoiceCount\n        }]);\n        excelData[0].data.push([{\n          value: \"Customer: \" + order.customer_name\n        }]);\n\n        if (order.customer && order.customer.vat_no) {\n          excelData[0].data.push([{\n            value: \"Customer VAT NO.: \" + order.customer.vat_no\n          }]);\n        } else {\n          excelData[0].data.push([{\n            value: \"Customer VAT NO.: N/A\"\n          }]);\n        }\n\n        if (!order.products) {\n          continue;\n        }\n\n        for (var j = 0; j < order.products.length; j++) {\n          let product = order.products[j];\n          excelData[0].data.push([{\n            value: product.name\n          }, {\n            value: product.quantity.toFixed(2)\n          }, {\n            value: product.unit ? product.unit : \"PCs\"\n          }, {\n            value: product.unit_price ? product.unit_price.toFixed(2) : 0.00\n          }, {\n            value: (product.unit_price * product.quantity).toFixed(2)\n          }, {\n            value: \"0.00\"\n          }, {\n            value: \"0.00\"\n          }, {\n            value: \"15.00\"\n          }, {\n            value: ((product.unit_price * product.quantity).toFixed(2) * 0.15).toFixed(2)\n          }, {\n            value: (product.unit_price * product.quantity).toFixed(2)\n          }]);\n        }\n\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Shipping/Handling Fees\"\n        }, {\n          value: order.shipping_handling_fees.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Total Amount Before VAT\"\n        }, {\n          value: (order.total + order.shipping_handling_fees).toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Discount\"\n        }, {\n          value: order.discount.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Total Amount After Discount\"\n        }, {\n          value: (order.total + order.shipping_handling_fees - order.discount).toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"VAT Amount\"\n        }, {\n          value: order.vat_price.toFixed(2)\n        }]);\n        excelData[0].data.push([{\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"\"\n        }, {\n          value: \"Total Amount After VAT\"\n        }, {\n          value: (order.total + order.shipping_handling_fees - order.discount + order.vat_price).toFixed(2)\n        }]);\n        dayVAT += order.vat_price;\n        dayTotalBeforeVAT += order.total + order.shipping_handling_fees - order.discount;\n        dayTotalAfterVAT += order.total + order.shipping_handling_fees - order.discount + order.vat_price;\n        dayDiscount += order.discount;\n        dayShippingFees += order.shipping_handling_fees;\n      }\n\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day Total Before VAT\"\n      }, {\n        value: dayTotalBeforeVAT.toFixed(2)\n      }]);\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day VAT\"\n      }, {\n        value: dayVAT.toFixed(2)\n      }]);\n      excelData[0].data.push([{\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"\"\n      }, {\n        value: \"Day Total After VAT\"\n      }, {\n        value: dayTotalAfterVAT.toFixed(2)\n      }]);\n      totalAmountBeforeVAT += dayTotalBeforeVAT;\n      totalAmountAfterVAT += dayTotalAfterVAT;\n      totalVAT += dayVAT;\n    } //end for1\n\n\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total Amount Before VAT\"\n    }, {\n      value: totalAmountBeforeVAT.toFixed(2)\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total VAT\"\n    }, {\n      value: totalVAT.toFixed(2)\n    }]);\n    excelData[0].data.push([{\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"\"\n    }, {\n      value: \"Total Amount After VAT\"\n    }, {\n      value: totalAmountAfterVAT.toFixed(2)\n    }]);\n    setExcelData(excelData);\n    console.log(\"excelData:\", excelData);\n  }\n\n  function makeSalesReportFilename() {\n    salesReportFileName = \"Sales Report\";\n\n    if (searchParams[\"created_at_from\"] && searchParams[\"created_at_to\"]) {\n      salesReportFileName += \" - From \" + searchParams[\"created_at_from\"] + \" to \" + searchParams[\"created_at_to\"];\n    } else if (searchParams[\"created_at_from\"]) {\n      salesReportFileName += \" - From \" + searchParams[\"created_at_from\"] + \" to \" + format(new Date(), \"dd-MMM-yyyy\");\n    } else if (searchParams[\"created_at_to\"]) {\n      salesReportFileName += \" - Upto \" + searchParams[\"created_at_to\"];\n    } else if (searchParams[\"created_at\"]) {\n      salesReportFileName += \" of \" + searchParams[\"created_at\"];\n    }\n\n    setSalesReportFileName(salesReportFileName);\n  }\n\n  async function getAllOrders() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,code,date,total,net_total,shipping_handling_fees,discount_percent,discount,products,customer_name,created_at,vat_price,customer_id,customer.id,customer.vat_no\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    console.log(\"Timezone:\", parseFloat(diff / 60));\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    let size = 500;\n    let orders = [];\n    var pageNo = 1;\n    makeSalesReportFilename();\n\n    for (; true;) {\n      fettingAllRecordsInProgress = true;\n      setFettingAllRecordsInProgress(true);\n      let res = await fetch(\"/v1/order?\" + Select + queryParams + \"&sort=\" + sortOrder + sortField + \"&page=\" + pageNo + \"&limit=\" + size, requestOptions).then(async response => {\n        var _response$headers$get;\n\n        const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n        const data = isJson && (await response.json()); // check for error response\n\n        if (!response.ok) {\n          const error = data && data.errors;\n          return Promise.reject(error);\n        }\n\n        setIsListLoading(false);\n\n        if (!data.result || data.result.length === 0) {\n          return [];\n        } // console.log(\"Orders:\", orders);\n\n\n        return data.result;\n      }).catch(error => {\n        console.log(error);\n        return []; //break;\n      });\n\n      if (res.length === 0) {\n        break;\n      }\n\n      orders = orders.concat(res);\n      pageNo++;\n    }\n\n    allOrders = orders;\n    setAllOrders(orders);\n    console.log(\"allOrders:\", allOrders);\n    prepareExcelData();\n    fettingAllRecordsInProgress = false;\n    setFettingAllRecordsInProgress(false);\n  } //list\n\n\n  const [orderList, setOrderList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Date filter\n\n  const [showDateRange, setShowDateRange] = useState(false);\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date());\n  let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n  let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n  let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n  let [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\"); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Customer Auto Suggestion\n\n  const [customerOptions, setCustomerOptions] = useState([]);\n  const [selectedCustomers, setSelectedCustomers] = useState([]); //Created By User Auto Suggestion\n\n  const [userOptions, setUserOptions] = useState([]);\n  const [selectedCreatedByUsers, setSelectedCreatedByUsers] = useState([]); //Status Auto Suggestion\n\n  const statusOptions = [{\n    id: \"sent\",\n    name: \"Sent\"\n  }, {\n    id: \"pending\",\n    name: \"Pending\"\n  }, {\n    id: \"accepted\",\n    name: \"Accepted\"\n  }, {\n    id: \"rejected\",\n    name: \"Rejected\"\n  }, {\n    id: \"cancelled\",\n    name: \"Cancelled\"\n  }, {\n    id: \"deleted\",\n    name: \"Deleted\"\n  }];\n  const [selectedStatusList, setSelectedStatusList] = useState([]); //Payment Status Auto Suggestion\n\n  const paymentStatusOptions = [{\n    id: \"paid\",\n    name: \"Paid\"\n  }, {\n    id: \"not_paid\",\n    name: \"Not Paid\"\n  }, {\n    id: \"paid_partially\",\n    name: \"Paid partially\"\n  }];\n  const [selectedPaymentStatusList, setSelectedPaymentStatusList] = useState([]);\n  const paymentMethodOptions = [{\n    id: \"cash\",\n    name: \"cash\"\n  }, {\n    id: \"bank_account\",\n    name: \"Bank Account / Debit / Credit card\"\n  }, {\n    id: \"customer_account\",\n    name: \"Customer account\"\n  }];\n  const [selectedPaymentMethodList, setSelectedPaymentMethodList] = useState([]);\n  useEffect(() => {\n    list(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); //Search params\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortOrder, setSortOrder] = useState(\"-\");\n  let [totalSales, setTotalSales] = useState(0.00);\n  let [netProfit, setNetProfit] = useState(0.00);\n  let [vatPrice, setVatPrice] = useState(0.00);\n  let [totalShippingHandlingFees, setTotalShippingHandlingFees] = useState(0.00);\n  let [totalDiscount, setTotalDiscount] = useState(0.00);\n  let [totalCashDiscount, setTotalCashDiscount] = useState(0.00);\n  let [totalPaidSales, setTotalPaidSales] = useState(0.00);\n  let [totalUnPaidSales, setTotalUnPaidSales] = useState(0.00);\n  let [totalCashSales, setTotalCashSales] = useState(0.00);\n  let [totalBankAccountSales, setTotalBankAccountSales] = useState(0.00);\n  let [loss, setLoss] = useState(0.00);\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=${object[key]}`;\n    }).join(\"&\");\n  }\n\n  async function suggestCustomers(searchTerm) {\n    console.log(\"Inside handle suggestCustomers\");\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = `&${queryString}`;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n    let result = await fetch(`/v1/customer?${Select}${queryString}`, requestOptions);\n    let data = await result.json();\n    setCustomerOptions(data.result);\n  }\n\n  async function suggestUsers(searchTerm) {\n    console.log(\"Inside handle suggestUsers\");\n    setCustomerOptions([]);\n    console.log(\"searchTerm:\" + searchTerm);\n\n    if (!searchTerm) {\n      return;\n    }\n\n    var params = {\n      name: searchTerm\n    };\n    var queryString = ObjectToSearchQueryParams(params);\n\n    if (queryString !== \"\") {\n      queryString = \"&\" + queryString;\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,name\";\n    let result = await fetch(\"/v1/user?\" + Select + queryString, requestOptions);\n    let data = await result.json();\n    setUserOptions(data.result);\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      searchParams[field] = \"\";\n      page = 1;\n      setPage(page);\n      list();\n      return;\n    }\n\n    if (value) {\n      let d = new Date(value);\n      value = format(d, \"MMM dd yyyy\");\n      console.log(\"value2:\", value);\n      console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n    } else {\n      value = \"\";\n    }\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n      console.log(\"searchParams[field]:\", searchParams[field]);\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {\n      setSelectedCreatedByUsers(values);\n    } else if (field === \"customer_id\") {\n      setSelectedCustomers(values);\n    } else if (field === \"status\") {\n      setSelectedStatusList(values);\n    } else if (field === \"payment_status\") {\n      setSelectedPaymentStatusList(values);\n    } else if (field === \"payment_methods\") {\n      setSelectedPaymentMethodList(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function list() {\n    excelData = [];\n    setExcelData(excelData);\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"select=id,code,date,net_total,return_count,cash_discount,total_payment_received,payments_count,payment_methods,balance_amount,discount_percent,discount,created_by_name,customer_name,status,payment_status,payment_method,created_at,loss,net_loss,net_profit,store_id,total\";\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    const d = new Date();\n    let diff = d.getTimezoneOffset();\n    console.log(\"Timezone:\", parseFloat(diff / 60));\n    searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n    searchParams[\"stats\"] = \"1\";\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    }\n\n    setIsListLoading(true);\n    fetch(\"/v1/order?\" + Select + queryParams + \"&sort=\" + sortOrder + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get2;\n\n      const isJson = (_response$headers$get2 = response.headers.get(\"content-type\")) === null || _response$headers$get2 === void 0 ? void 0 : _response$headers$get2.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setOrderList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      totalSales = data.meta.total_sales;\n      setTotalSales(totalSales);\n      netProfit = data.meta.net_profit;\n      setNetProfit(netProfit);\n      loss = data.meta.net_loss;\n      setLoss(loss);\n      vatPrice = data.meta.vat_price;\n      setVatPrice(vatPrice);\n      totalShippingHandlingFees = data.meta.shipping_handling_fees;\n      setTotalShippingHandlingFees(totalShippingHandlingFees);\n      totalDiscount = data.meta.discount;\n      setTotalDiscount(totalDiscount);\n      totalCashDiscount = data.meta.cash_discount;\n      setTotalCashDiscount(totalCashDiscount);\n      totalPaidSales = data.meta.paid_sales;\n      setTotalPaidSales(totalPaidSales);\n      totalUnPaidSales = data.meta.unpaid_sales;\n      setTotalUnPaidSales(totalUnPaidSales);\n      totalCashSales = data.meta.cash_sales;\n      setTotalCashSales(totalCashSales);\n      totalBankAccountSales = data.meta.bank_account_sales;\n      setTotalBankAccountSales(totalBankAccountSales);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortOrder = sortOrder === \"-\" ? \"\" : \"-\";\n    setSortOrder(sortOrder);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  let [showOrderPaymentHistory, setShowOrderPaymentHistory] = useState(false);\n  const [selectedOrder, setSelectedOrder] = useState({});\n\n  function openOrderPaymentsDialogue(order) {\n    setSelectedOrder(order);\n    showOrderPaymentHistory = true;\n    setShowOrderPaymentHistory(true);\n  }\n\n  function handleOrderPaymentHistoryClose() {\n    showOrderPaymentHistory = false;\n    setShowOrderPaymentHistory(false); //list();\n  }\n\n  let [showOrderReturns, setShowOrderReturns] = useState(false);\n\n  function openOrderReturnsDialogue(order) {\n    setSelectedOrder(order);\n    showOrderReturns = true;\n    setShowOrderReturns(true);\n  }\n\n  function handleOrderReturnsClose() {\n    showOrderReturns = false;\n    setShowOrderReturns(false);\n  }\n\n  const DetailsViewRef = useRef();\n\n  function openDetailsView(id) {\n    DetailsViewRef.current.open(id);\n  }\n\n  const CreateFormRef = useRef();\n\n  function openCreateForm() {\n    CreateFormRef.current.open();\n  }\n\n  function openUpdateForm(id) {\n    CreateFormRef.current.open(id);\n  } //Cash Discounts\n\n\n  const SalesCashDiscountCreateRef = useRef();\n\n  function openSalesCashDiscountCreateForm(order) {\n    SalesCashDiscountCreateRef.current.open(undefined, order);\n  }\n\n  const SalesCashDiscountDetailsViewRef = useRef();\n\n  function openSalesCashDiscountDetailsView(id) {\n    SalesCashDiscountDetailsViewRef.current.open(id);\n  }\n\n  function openSalesCashDiscountUpdateForm(id) {\n    SalesCashDiscountCreateRef.current.open(id);\n  }\n\n  const SalesReturnListRef = useRef(); //Sales Payments\n\n  const SalesPaymentListRef = useRef();\n\n  function openSalesPaymentList(order) {// SalesPaymentListRef.current.open(undefined, order);\n  } //Sales Return\n\n\n  const SalesReturnCreateRef = useRef();\n\n  function openSalesReturnCreateForm(id) {\n    SalesReturnCreateRef.current.open(undefined, id);\n  }\n  /*\n   const SalesReturnCreateRef = useRef();\n   function openSalesReturnCreateForm(order) {\n       SalesReturnCreateRef.current.open(undefined, order);\n   }\n   */\n\n\n  const SalesReturnDetailsViewRef = useRef();\n\n  function openSalesReturnDetailsView(id) {\n    SalesReturnDetailsViewRef.current.open(id);\n  }\n\n  function openSalesReturnUpdateForm(id) {\n    SalesReturnCreateRef.current.open(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrderCreate, {\n      ref: CreateFormRef,\n      refreshList: list,\n      showToastMessage: props.showToastMessage,\n      openCreateForm: openCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OrderView, {\n      ref: DetailsViewRef,\n      openCreateForm: openCreateForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SalesReturnCreate, {\n      ref: SalesReturnCreateRef,\n      showToastMessage: props.showToastMessage,\n      refreshSalesList: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Sales: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalSales.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Paid Sales: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalPaidSales.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-end\",\n            children: [\"Cash Sales: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalCashSales.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-end\",\n            children: [\"Bank Account Sales: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalBankAccountSales.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Credit Sales: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalUnPaidSales.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Cash Discounts: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalCashDiscount.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1083,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Sales Discounts: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalDiscount.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Shipping/Handling fees: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: totalShippingHandlingFees.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"VAT Collected: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: vatPrice.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 25\n          }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Net Profit: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: netProfit.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1128,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 60\n          }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-end\",\n            children: [\"Loss: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                value: loss.toFixed(2),\n                displayType: \"text\",\n                thousandSeparator: true,\n                suffix: \" \",\n                renderText: (value, props) => value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 60\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h3\",\n            children: \"Sales Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col text-end\",\n          children: [/*#__PURE__*/_jsxDEV(ExcelFile, {\n            filename: salesReportFileName,\n            element: excelData.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"btn btn-primary mb-3 success\",\n              children: \"Download Sales Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 99\n            }, this) : \"\",\n            children: /*#__PURE__*/_jsxDEV(ExcelSheet, {\n              dataSet: excelData,\n              name: salesReportFileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 25\n          }, this), excelData.length == 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn btn-primary mb-3\",\n            onClick: getAllOrders,\n            children: fettingAllRecordsInProgress ? \"Preparing..\" : \"Sales Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 50\n          }, this) : \"\", \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n            hide: true.toString(),\n            variant: \"primary\",\n            className: \"btn btn-primary mb-3\",\n            onClick: openCreateForm,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-plus-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 29\n            }, this), \" Create\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-start\",\n                    children: \"No Orders to display\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1191,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                style: {\n                  border: \"solid 0px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-start\",\n                  style: {\n                    border: \"solid 0px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      setIsRefreshInProcess(true);\n                      list();\n                    },\n                    variant: \"primary\",\n                    disabled: isRefreshInProcess,\n                    children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                      as: \"span\",\n                      animation: \"border\",\n                      size: \"sm\",\n                      role: \"status\",\n                      \"aria-hidden\": true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1206,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-refresh\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1214,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"visually-hidden\",\n                      children: \"Loading...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1216,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1197,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1196,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-center\",\n                  children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"grow\",\n                    variant: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1219,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col text-end\",\n                  children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-label\",\n                      children: \"Size:\\xA0\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1227,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: pageSize,\n                      onChange: e => {\n                        changePageSize(e.target.value);\n                      },\n                      className: \"form-control pull-right\",\n                      style: {\n                        border: \"solid 1px\",\n                        borderColor: \"silver\",\n                        width: \"55px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"5\",\n                        children: \"5\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1240,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"10\",\n                        children: \"10\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1243,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"20\",\n                        children: \"20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1246,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"40\",\n                        children: \"40\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1247,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"50\",\n                        children: \"50\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1248,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"100\",\n                        children: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1249,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1228,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1224,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  style: {\n                    border: \"solid 0px\",\n                    width: \"100%\"\n                  },\n                  children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 55\n                  }, this) : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1258,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-start\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-start\",\n                      children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1285,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col text-end\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-end\",\n                      children: [\"page \", page, \" of \", totalPages]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1292,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1291,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1281,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                style: {\n                  overflowX: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"table table-striped table-sm table-bordered\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"code\");\n                          },\n                          children: [\"ID\", sortField === \"code\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1315,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"code\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1318,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1304,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1303,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"date\");\n                          },\n                          children: [\"Date\", sortField === \"date\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1334,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"date\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1337,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1323,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1322,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_total\");\n                          },\n                          children: [\"Net Total\", sortField === \"net_total\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1353,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_total\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1356,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1342,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1341,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"cash_discount\");\n                          },\n                          children: [\"Cash Discount\", sortField === \"cash_discount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1372,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"cash_discount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1375,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1361,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1360,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"total_payment_received\");\n                          },\n                          children: [\"Amount Paid\", sortField === \"total_payment_received\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1391,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"total_payment_received\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1394,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1380,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1379,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"balance_amount\");\n                          },\n                          children: [\"Balance\", sortField === \"balance_amount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1410,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"balance_amount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1413,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1399,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1398,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payments_count\");\n                          },\n                          children: [\"No.of Payments\", sortField === \"payments_count\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1429,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payments_count\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1432,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1418,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1417,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payment_status\");\n                          },\n                          children: [\"Payment Status\", sortField === \"payment_status\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1448,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payment_status\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1451,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1437,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1436,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"payment_methods\");\n                          },\n                          children: [\"Payment Methods\", sortField === \"payment_methods\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1467,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"payment_methods\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1470,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1456,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1455,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"discount\");\n                          },\n                          children: [\"Sales Discount\", sortField === \"discount\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1486,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"discount\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1489,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1475,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1474,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"discount_percent\");\n                          },\n                          children: [\"Sales Discount %\", sortField === \"discount_percent\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1505,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"discount_percent\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1508,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1494,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1493,\n                        columnNumber: 49\n                      }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_profit\");\n                          },\n                          children: [\"Net Profit\", sortField === \"net_profit\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1524,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_profit\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1527,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1513,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1512,\n                        columnNumber: 84\n                      }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"net_loss\");\n                          },\n                          children: [\"Net Loss\", sortField === \"net_loss\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1543,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"net_loss\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1546,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1532,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1531,\n                        columnNumber: 84\n                      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_by\");\n                          },\n                          children: [\"Created By\", sortField === \"created_by\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1562,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_by\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1565,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1551,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1550,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"return_count\");\n                          },\n                          children: [\"Returns\", sortField === \"return_count\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1581,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"return_count\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-numeric-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1584,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1570,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1569,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"customer_name\");\n                          },\n                          children: [\"Customer\", sortField === \"customer_name\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up-alt\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1601,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"customer_name\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-alpha-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1604,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1589,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1588,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          style: {\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: () => {\n                            sort(\"created_at\");\n                          },\n                          children: [\"Created At\", sortField === \"created_at\" && sortOrder === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-down\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1622,\n                            columnNumber: 61\n                          }, this) : null, sortField === \"created_at\" && sortOrder === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-sort-up\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1625,\n                            columnNumber: 61\n                          }, this) : null]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1611,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1610,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Actions\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1651,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1302,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"code\",\n                          onChange: e => searchByFieldValue(\"code\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1658,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1657,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"200px\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"date_str\",\n                          value: dateValue,\n                          selected: selectedDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              setDateValue(\"\");\n                              searchByDateField(\"date_str\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"date_str\", date);\n                            selectedDate = date;\n                            setSelectedDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1668,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowDateRange(!showDateRange),\n                          children: showDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1685,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1695,\n                          columnNumber: 53\n                        }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"from_date\",\n                            value: fromDateValue,\n                            selected: selectedFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setFromDateValue(\"\");\n                                searchByDateField(\"from_date\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"from_date\", date);\n                              selectedFromDate = date;\n                              setSelectedFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1700,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"to_date\",\n                            value: toDateValue,\n                            selected: selectedToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setToDateValue(\"\");\n                                searchByDateField(\"to_date\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"to_date\", date);\n                              selectedToDate = date;\n                              setSelectedToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1718,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1698,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1667,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_total\",\n                          onChange: e => searchByFieldValue(\"net_total\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1739,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1738,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"cash_discount\",\n                          onChange: e => searchByFieldValue(\"cash_discount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1749,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1748,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"total_payment_received\",\n                          onChange: e => searchByFieldValue(\"total_payment_received\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1759,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1758,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"balance_amount\",\n                          onChange: e => searchByFieldValue(\"balance_amount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1769,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1768,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"payments_count\",\n                          onChange: e => searchByFieldValue(\"payments_count\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1779,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1778,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"payment_status\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"payment_status\", selectedItems);\n                          },\n                          options: paymentStatusOptions,\n                          placeholder: \"Select Payment Status\",\n                          selected: selectedPaymentStatusList,\n                          highlightOnlyResult: true,\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1789,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1788,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"payment_methods\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"payment_methods\", selectedItems);\n                          },\n                          options: paymentMethodOptions,\n                          placeholder: \"Select payment methods\",\n                          selected: selectedPaymentMethodList,\n                          highlightOnlyResult: true,\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1806,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1805,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"discount\",\n                          onChange: e => searchByFieldValue(\"discount\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1823,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1822,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"discount_percent\",\n                          onChange: e => searchByFieldValue(\"discount_percent\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1833,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1832,\n                        columnNumber: 49\n                      }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_profit\",\n                          onChange: e => searchByFieldValue(\"net_profit\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1843,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1842,\n                        columnNumber: 84\n                      }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"net_loss\",\n                          onChange: e => searchByFieldValue(\"net_loss\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1853,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1852,\n                        columnNumber: 84\n                      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"created_by\",\n                          labelKey: \"name\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"created_by\", selectedItems);\n                          },\n                          options: userOptions,\n                          placeholder: \"Select Users\",\n                          selected: selectedCreatedByUsers,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestUsers(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1863,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1862,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          id: \"return_count\",\n                          onChange: e => searchByFieldValue(\"return_count\", e.target.value),\n                          className: \"form-control\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1883,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1882,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: /*#__PURE__*/_jsxDEV(Typeahead, {\n                          id: \"customer_id\",\n                          labelKey: \"search_label\",\n                          onChange: selectedItems => {\n                            searchByMultipleValuesField(\"customer_id\", selectedItems);\n                          },\n                          options: customerOptions,\n                          placeholder: \"name or mob\",\n                          selected: selectedCustomers,\n                          highlightOnlyResult: true,\n                          onInputChange: (searchTerm, e) => {\n                            suggestCustomers(searchTerm);\n                          },\n                          multiple: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1893,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1892,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                          id: \"created_at\",\n                          value: createdAtValue,\n                          selected: selectedCreatedAtDate,\n                          className: \"form-control\",\n                          dateFormat: \"MMM dd yyyy\",\n                          onChange: date => {\n                            if (!date) {\n                              //  createdAtValue = \"\";\n                              setCreatedAtValue(\"\");\n                              searchByDateField(\"created_at\", \"\");\n                              return;\n                            }\n\n                            searchByDateField(\"created_at\", date);\n                            selectedCreatedAtDate = date;\n                            setSelectedCreatedAtDate(date);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1914,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                          style: {\n                            color: \"blue\",\n                            textDecoration: \"underline\",\n                            cursor: \"pointer\"\n                          },\n                          onClick: e => setShowCreatedAtDateRange(!showCreatedAtDateRange),\n                          children: showCreatedAtDateRange ? \"Less..\" : \"More..\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1932,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1944,\n                          columnNumber: 53\n                        }, this), showCreatedAtDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-left\",\n                          children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_from\",\n                            value: createdAtFromValue,\n                            selected: selectedCreatedAtFromDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtFromValue(\"\");\n                                searchByDateField(\"created_at_from\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_from\", date);\n                              selectedCreatedAtFromDate = date;\n                              setSelectedCreatedAtFromDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1949,\n                            columnNumber: 61\n                          }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                            id: \"created_at_to\",\n                            value: createdAtToValue,\n                            selected: selectedCreatedAtToDate,\n                            className: \"form-control\",\n                            dateFormat: \"MMM dd yyyy\",\n                            onChange: date => {\n                              if (!date) {\n                                setCreatedAtToValue(\"\");\n                                searchByDateField(\"created_at_to\", \"\");\n                                return;\n                              }\n\n                              searchByDateField(\"created_at_to\", date);\n                              selectedCreatedAtToDate = date;\n                              setSelectedCreatedAtToDate(date);\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1967,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1947,\n                          columnNumber: 57\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1913,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: \"150px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2007,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1656,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1655,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"text-center\",\n                    children: orderList && orderList.map(order => {\n                      var _order$net_total, _order$cash_discount, _order$total_payment_, _order$balance_amount, _order$net_profit, _order$net_loss;\n\n                      return /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: order.code\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2015,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: format(new Date(order.date), \"MMM dd yyyy h:mma\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2016,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_order$net_total = order.net_total) === null || _order$net_total === void 0 ? void 0 : _order$net_total.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2019,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_order$cash_discount = order.cash_discount) === null || _order$cash_discount === void 0 ? void 0 : _order$cash_discount.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2020,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openOrderPaymentsDialogue(order);\n                            },\n                            children: (_order$total_payment_ = order.total_payment_received) === null || _order$total_payment_ === void 0 ? void 0 : _order$total_payment_.toFixed(2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2024,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2021,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: (_order$balance_amount = order.balance_amount) === null || _order$balance_amount === void 0 ? void 0 : _order$balance_amount.toFixed(2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2031,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openOrderPaymentsDialogue(order);\n                            },\n                            children: order.payments_count\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2035,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2032,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [order.payment_status == \"paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-success\",\n                            children: \"Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2044,\n                            columnNumber: 65\n                          }, this) : \"\", order.payment_status == \"paid_partially\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-warning\",\n                            children: \"Paid Partially\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2048,\n                            columnNumber: 65\n                          }, this) : \"\", order.payment_status == \"not_paid\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-danger\",\n                            children: \"Not Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2052,\n                            columnNumber: 65\n                          }, this) : \"\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2042,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: order.payment_methods && order.payment_methods.map(name => /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"badge bg-info\",\n                            children: name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2060,\n                            columnNumber: 69\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2056,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [order.discount.toFixed(2), \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2064,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [order.discount_percent.toFixed(2), \" %\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2065,\n                          columnNumber: 57\n                        }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [(_order$net_profit = order.net_profit) === null || _order$net_profit === void 0 ? void 0 : _order$net_profit.toFixed(2), \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2066,\n                          columnNumber: 92\n                        }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [(_order$net_loss = order.net_loss) === null || _order$net_loss === void 0 ? void 0 : _order$net_loss.toFixed(2), \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2067,\n                          columnNumber: 92\n                        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: order.created_by_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2068,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"link\",\n                            onClick: () => {\n                              openOrderReturnsDialogue(order);\n                            },\n                            children: order.return_count\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2072,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2069,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: order.customer_name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2079,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: format(new Date(order.created_at), \"MMM dd yyyy h:mma\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2080,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [/*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btn btn-light btn-sm\",\n                            onClick: () => {\n                              openUpdateForm(order.id);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-pencil\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2102,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2099,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"btn btn-primary btn-sm\",\n                            onClick: () => {\n                              openDetailsView(order.id);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-eye\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2109,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2106,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-dark btn-sm\",\n                            \"data-bs-toggle\": \"tooltip\",\n                            \"data-bs-placement\": \"top\",\n                            title: \"Create Sales Return\",\n                            onClick: () => {\n                              openSalesReturnCreateForm(order.id);\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-arrow-left\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2120,\n                              columnNumber: 65\n                            }, this), \" Return\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2111,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2093,\n                          columnNumber: 57\n                        }, this)]\n                      }, order.code, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2014,\n                        columnNumber: 53\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2011,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1300,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1299,\n                columnNumber: 33\n              }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                breakLabel: \"...\",\n                nextLabel: \"next >\",\n                onPageChange: event => {\n                  changePage(event.selected + 1);\n                },\n                pageRangeDisplayed: 5,\n                pageCount: totalPages,\n                previousLabel: \"< previous\",\n                renderOnZeroPageCount: null,\n                className: \"pagination  flex-wrap\",\n                pageClassName: \"page-item\",\n                pageLinkClassName: \"page-link\",\n                activeClassName: \"active\",\n                previousClassName: \"page-item\",\n                nextClassName: \"page-item\",\n                previousLinkClassName: \"page-link\",\n                nextLinkClassName: \"page-link\",\n                forcePage: page - 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2160,\n                columnNumber: 47\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showOrderPaymentHistory,\n      size: \"lg\",\n      onHide: handleOrderPaymentHistoryClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Payment history of Order #\", selectedOrder.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleOrderPaymentHistoryClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2192,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(SalesPaymentIndex, {\n          ref: SalesPaymentListRef,\n          showToastMessage: props.showToastMessage,\n          order: selectedOrder,\n          refreshSalesList: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showOrderReturns,\n      size: \"lg\",\n      onHide: handleOrderReturnsClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Sales Returns of Sale Order #\", selectedOrder.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleOrderReturnsClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(SalesReturnIndex, {\n          ref: SalesReturnListRef,\n          showToastMessage: props.showToastMessage,\n          order: selectedOrder,\n          refreshSalesList: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2221,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2220,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"xrAZSluuItQxjvjIWwbQuk7UZWw=\"));\n_c2 = OrderIndex;\nexport default OrderIndex;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderIndex$forwardRef\");\n$RefreshReg$(_c2, \"OrderIndex\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/order/index.js"],"names":["React","useState","useEffect","useRef","forwardRef","OrderCreate","OrderView","SalesPaymentIndex","SalesReturnIndex","SalesReturnCreate","Cookies","Typeahead","format","DatePicker","Button","Spinner","Badge","Modal","ReactPaginate","NumberFormat","ReactExport","ExcelFile","ExcelSheet","OrderIndex","props","ref","cookies","allOrders","setAllOrders","excelData","setExcelData","salesReportFileName","setSalesReportFileName","fettingAllRecordsInProgress","setFettingAllRecordsInProgress","prepareExcelData","console","log","groupedByDate","i","length","date","Date","push","columns","title","width","wch","wpx","data","filename","totalAmountBeforeVAT","totalAmountAfterVAT","totalVAT","totalDiscount","totalAmountAfterDiscount","totalShippingFees","invoiceCount","orderDate","value","dayTotalBeforeVAT","dayTotalAfterVAT","dayVAT","dayDiscount","dayShippingFees","order","code","customer_name","customer","vat_no","products","j","product","name","quantity","toFixed","unit","unit_price","shipping_handling_fees","total","discount","vat_price","makeSalesReportFilename","searchParams","getAllOrders","requestOptions","method","headers","Authorization","get","Select","store_id","d","diff","getTimezoneOffset","parseFloat","setSearchParams","queryParams","ObjectToSearchQueryParams","size","orders","pageNo","res","fetch","sortOrder","sortField","then","response","isJson","includes","json","ok","error","errors","Promise","reject","setIsListLoading","result","catch","concat","orderList","setOrderList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showDateRange","setShowDateRange","selectedDate","setSelectedDate","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","selectedCreatedAtDate","setSelectedCreatedAtDate","selectedCreatedAtFromDate","setSelectedCreatedAtFromDate","selectedCreatedAtToDate","setSelectedCreatedAtToDate","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","isRefreshInProcess","setIsRefreshInProcess","customerOptions","setCustomerOptions","selectedCustomers","setSelectedCustomers","userOptions","setUserOptions","selectedCreatedByUsers","setSelectedCreatedByUsers","statusOptions","id","selectedStatusList","setSelectedStatusList","paymentStatusOptions","selectedPaymentStatusList","setSelectedPaymentStatusList","paymentMethodOptions","selectedPaymentMethodList","setSelectedPaymentMethodList","list","setSortField","setSortOrder","totalSales","setTotalSales","netProfit","setNetProfit","vatPrice","setVatPrice","totalShippingHandlingFees","setTotalShippingHandlingFees","setTotalDiscount","totalCashDiscount","setTotalCashDiscount","totalPaidSales","setTotalPaidSales","totalUnPaidSales","setTotalUnPaidSales","totalCashSales","setTotalCashSales","totalBankAccountSales","setTotalBankAccountSales","loss","setLoss","object","Object","keys","map","key","join","suggestCustomers","searchTerm","params","queryString","suggestUsers","searchByFieldValue","field","searchByDateField","Intl","DateTimeFormat","resolvedOptions","timeZone","searchByMultipleValuesField","values","model","pageCount","parseInt","total_count","meta","total_sales","net_profit","net_loss","cash_discount","paid_sales","unpaid_sales","cash_sales","bank_account_sales","sort","changePageSize","changePage","newPage","showOrderPaymentHistory","setShowOrderPaymentHistory","selectedOrder","setSelectedOrder","openOrderPaymentsDialogue","handleOrderPaymentHistoryClose","showOrderReturns","setShowOrderReturns","openOrderReturnsDialogue","handleOrderReturnsClose","DetailsViewRef","openDetailsView","current","open","CreateFormRef","openCreateForm","openUpdateForm","SalesCashDiscountCreateRef","openSalesCashDiscountCreateForm","undefined","SalesCashDiscountDetailsViewRef","openSalesCashDiscountDetailsView","openSalesCashDiscountUpdateForm","SalesReturnListRef","SalesPaymentListRef","openSalesPaymentList","SalesReturnCreateRef","openSalesReturnCreateForm","SalesReturnDetailsViewRef","openSalesReturnDetailsView","openSalesReturnUpdateForm","showToastMessage","toString","border","e","target","borderColor","event","selected","overflowX","textDecoration","cursor","color","selectedItems","net_total","total_payment_received","balance_amount","payments_count","payment_status","payment_methods","discount_percent","created_by_name","return_count","created_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from \"react\";\nimport OrderCreate from \"./create.js\";\nimport OrderView from \"./view.js\";\n\nimport SalesPaymentIndex from \"./../sales_payment/index.js\";\nimport SalesReturnIndex from \"./../sales_return/index.js\";\nimport SalesReturnCreate from \"./../sales_return/create.js\";\n\n\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Badge, Modal } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\n\n\nimport ReactExport from 'react-data-export';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n\n\nconst OrderIndex = forwardRef((props, ref) => {\n\n\n    const cookies = new Cookies();\n\n\n    let [allOrders, setAllOrders] = useState([]);\n    let [excelData, setExcelData] = useState([]);\n    let [salesReportFileName, setSalesReportFileName] = useState(\"Sales Report\");\n    let [fettingAllRecordsInProgress, setFettingAllRecordsInProgress] = useState(false);\n\n    function prepareExcelData() {\n        console.log(\"Inside prepareExcelData()\");\n        var groupedByDate = [];\n        for (var i = 0; i < allOrders.length; i++) {\n            let date = format(\n                new Date(allOrders[i].date),\n                \"dd-MMM-yyyy\"\n            );\n            if (!groupedByDate[date]) {\n                groupedByDate[date] = [];\n            }\n\n            groupedByDate[date].push(allOrders[i]);\n\n        }\n\n        console.log(\"groupedByDate:\", groupedByDate);\n\n        excelData = [{\n            columns: [\n                { title: \"Description\", width: { wch: 50 } },//pixels width \n                { title: \"Quantity\", width: { wpx: 90 } },//char width \n                { title: \"Unit\", width: { wpx: 90 } },\n                { title: \"Rate\", width: { wpx: 90 } },\n                { title: \"Gross\", width: { wpx: 90 } },\n                { title: \"Disc %\", width: { wpx: 90 } },\n                { title: \"Disc\", width: { wpx: 90 } },\n                { title: \"Tax %\", width: { wpx: 90 } },\n                { title: \"Tax Amount\", width: { wpx: 180 } },\n                { title: \"Net Amount\", width: { wpx: 90 } },\n            ],\n            data: [],\n            filename: salesReportFileName,\n        }];\n\n        let totalAmountBeforeVAT = 0;\n        let totalAmountAfterVAT = 0;\n        let totalVAT = 0;\n        let totalDiscount = 0;\n        let totalAmountAfterDiscount = 0;\n        let totalShippingFees = 0;\n\n        let invoiceCount = 0;\n        for (let orderDate in groupedByDate) {\n\n            //  console.log(\"orderDate:\", orderDate);\n            excelData[0].data.push([{ value: \"Inv Date: \" + orderDate }]);\n            let dayTotalBeforeVAT = 0.00;\n            let dayTotalAfterVAT = 0.00;\n            let dayVAT = 0.00;\n            let dayDiscount = 0.00;\n            let dayShippingFees = 0.00;\n\n            for (var i = 0; i < groupedByDate[orderDate].length > 0; i++) {\n                invoiceCount++;\n                let order = groupedByDate[orderDate][i];\n                excelData[0].data.push([{ value: \"Inv No (\" + order.code + \") - \" + invoiceCount }]);\n                excelData[0].data.push([{ value: \"Customer: \" + order.customer_name }]);\n                if (order.customer && order.customer.vat_no) {\n                    excelData[0].data.push([{ value: \"Customer VAT NO.: \" + order.customer.vat_no }]);\n                } else {\n                    excelData[0].data.push([{ value: \"Customer VAT NO.: N/A\" }]);\n                }\n\n                if (!order.products) {\n                    continue;\n                }\n\n                for (var j = 0; j < order.products.length; j++) {\n\n                    let product = order.products[j];\n\n                    excelData[0].data.push([\n                        {\n                            value: product.name\n                        },\n                        {\n                            value: product.quantity.toFixed(2),\n                        },\n                        {\n                            value: product.unit ? product.unit : \"PCs\",\n                        },\n                        {\n                            value: product.unit_price ? product.unit_price.toFixed(2) : 0.00,\n                        },\n                        {\n                            value: (product.unit_price * product.quantity).toFixed(2)\n                        },\n                        {\n                            value: \"0.00\",\n                        },\n                        {\n                            value: \"0.00\",\n                        },\n                        {\n                            value: \"15.00\",\n                        },\n                        {\n                            value: ((product.unit_price * product.quantity).toFixed(2) * 0.15).toFixed(2),\n                        },\n                        {\n                            value: (product.unit_price * product.quantity).toFixed(2),\n                        },\n                    ]);\n                }\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Shipping/Handling Fees\",\n                    }, {\n                        value: order.shipping_handling_fees.toFixed(2),\n                    },\n                ]);\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Total Amount Before VAT\",\n                    }, {\n                        value: ((order.total + order.shipping_handling_fees)).toFixed(2),\n                    },\n                ]);\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Discount\",\n                    }, {\n                        value: order.discount.toFixed(2),\n                    },\n                ]);\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Total Amount After Discount\",\n                    }, {\n                        value: ((order.total + order.shipping_handling_fees) - order.discount).toFixed(2),\n                    },\n                ]);\n\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"VAT Amount\",\n                    }, {\n                        value: order.vat_price.toFixed(2),\n                    },\n                ]);\n\n\n\n                excelData[0].data.push([\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    { value: \"\", },\n                    {\n                        value: \"Total Amount After VAT\",\n                    }, {\n                        value: ((order.total + order.shipping_handling_fees) - order.discount + order.vat_price).toFixed(2),\n                    },\n                ]);\n\n\n                dayVAT += order.vat_price;\n                dayTotalBeforeVAT += (order.total + order.shipping_handling_fees) - order.discount;\n                dayTotalAfterVAT += (order.total + order.shipping_handling_fees) - order.discount + order.vat_price;\n                dayDiscount += order.discount;\n                dayShippingFees += order.shipping_handling_fees;\n\n            }\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day Total Before VAT\",\n                }, {\n                    value: dayTotalBeforeVAT.toFixed(2),\n                },\n            ]);\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day VAT\",\n                }, {\n                    value: dayVAT.toFixed(2),\n                },\n            ]);\n\n            excelData[0].data.push([\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                { value: \"\", },\n                {\n                    value: \"Day Total After VAT\",\n                }, {\n                    value: dayTotalAfterVAT.toFixed(2),\n                },\n            ]);\n\n            totalAmountBeforeVAT += dayTotalBeforeVAT;\n            totalAmountAfterVAT += dayTotalAfterVAT;\n            totalVAT += dayVAT;\n\n\n        }//end for1\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"\",\n            }, {\n                value: \"\",\n            },\n        ]);\n\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total Amount Before VAT\",\n            }, {\n                value: totalAmountBeforeVAT.toFixed(2),\n            },\n        ]);\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total VAT\",\n            }, {\n                value: totalVAT.toFixed(2),\n            },\n        ]);\n\n        excelData[0].data.push([\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            { value: \"\", },\n            {\n                value: \"Total Amount After VAT\",\n            }, {\n                value: totalAmountAfterVAT.toFixed(2),\n            },\n        ]);\n\n\n        setExcelData(excelData);\n\n        console.log(\"excelData:\", excelData);\n    }\n\n    function makeSalesReportFilename() {\n        salesReportFileName = \"Sales Report\";\n        if (searchParams[\"created_at_from\"] && searchParams[\"created_at_to\"]) {\n            salesReportFileName += \" - From \" + searchParams[\"created_at_from\"] + \" to \" + searchParams[\"created_at_to\"];\n        } else if (searchParams[\"created_at_from\"]) {\n            salesReportFileName += \" - From \" + searchParams[\"created_at_from\"] + \" to \" + format(\n                new Date(),\n                \"dd-MMM-yyyy\"\n            );\n        } else if (searchParams[\"created_at_to\"]) {\n            salesReportFileName += \" - Upto \" + searchParams[\"created_at_to\"];\n        } else if (searchParams[\"created_at\"]) {\n            salesReportFileName += \" of \" + searchParams[\"created_at\"];\n        }\n\n        setSalesReportFileName(salesReportFileName);\n    }\n    async function getAllOrders() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,code,date,total,net_total,shipping_handling_fees,discount_percent,discount,products,customer_name,created_at,vat_price,customer_id,customer.id,customer.vat_no\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        console.log(\"Timezone:\", parseFloat(diff / 60));\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        let size = 500;\n\n        let orders = [];\n        var pageNo = 1;\n\n        makeSalesReportFilename();\n\n        for (; true;) {\n\n            fettingAllRecordsInProgress = true;\n            setFettingAllRecordsInProgress(true);\n            let res = await fetch(\n                \"/v1/order?\" +\n                Select +\n                queryParams +\n                \"&sort=\" +\n                sortOrder +\n                sortField +\n                \"&page=\" +\n                pageNo +\n                \"&limit=\" +\n                size,\n                requestOptions\n            )\n                .then(async (response) => {\n                    const isJson = response.headers\n                        .get(\"content-type\")\n                        ?.includes(\"application/json\");\n                    const data = isJson && (await response.json());\n\n                    // check for error response\n                    if (!response.ok) {\n                        const error = data && data.errors;\n                        return Promise.reject(error);\n                    }\n\n                    setIsListLoading(false);\n                    if (!data.result || data.result.length === 0) {\n                        return [];\n                    }\n\n\n                    // console.log(\"Orders:\", orders);\n\n                    return data.result;\n\n\n                })\n                .catch((error) => {\n                    console.log(error);\n                    return [];\n                    //break;\n\n                });\n            if (res.length === 0) {\n                break;\n            }\n            orders = orders.concat(res);\n            pageNo++;\n        }\n\n        allOrders = orders;\n        setAllOrders(orders);\n\n        console.log(\"allOrders:\", allOrders);\n        prepareExcelData();\n        fettingAllRecordsInProgress = false;\n        setFettingAllRecordsInProgress(false);\n\n    }\n\n\n\n\n    //list\n    const [orderList, setOrderList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n    //Date filter\n    const [showDateRange, setShowDateRange] = useState(false);\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n    let [selectedCreatedAtDate, setSelectedCreatedAtDate] = useState(new Date());\n    let [selectedCreatedAtFromDate, setSelectedCreatedAtFromDate] = useState(new Date());\n    let [selectedCreatedAtToDate, setSelectedCreatedAtToDate] = useState(new Date());\n\n    let [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Customer Auto Suggestion\n    const [customerOptions, setCustomerOptions] = useState([]);\n    const [selectedCustomers, setSelectedCustomers] = useState([]);\n\n    //Created By User Auto Suggestion\n    const [userOptions, setUserOptions] = useState([]);\n    const [selectedCreatedByUsers, setSelectedCreatedByUsers] = useState([]);\n\n    //Status Auto Suggestion\n    const statusOptions = [\n        {\n            id: \"sent\",\n            name: \"Sent\",\n        },\n        {\n            id: \"pending\",\n            name: \"Pending\",\n        },\n        {\n            id: \"accepted\",\n            name: \"Accepted\",\n        },\n        {\n            id: \"rejected\",\n            name: \"Rejected\",\n        },\n        {\n            id: \"cancelled\",\n            name: \"Cancelled\",\n        },\n        {\n            id: \"deleted\",\n            name: \"Deleted\",\n        },\n    ];\n\n    const [selectedStatusList, setSelectedStatusList] = useState([]);\n\n\n    //Payment Status Auto Suggestion\n    const paymentStatusOptions = [\n        {\n            id: \"paid\",\n            name: \"Paid\",\n        },\n        {\n            id: \"not_paid\",\n            name: \"Not Paid\",\n        },\n        {\n            id: \"paid_partially\",\n            name: \"Paid partially\",\n        },\n    ];\n    const [selectedPaymentStatusList, setSelectedPaymentStatusList] = useState([]);\n\n    const paymentMethodOptions = [\n        {\n            id: \"cash\",\n            name: \"cash\",\n        },\n        {\n            id: \"bank_account\",\n            name: \"Bank Account / Debit / Credit card\",\n        },\n        {\n            id: \"customer_account\",\n            name: \"Customer account\",\n        },\n    ];\n    const [selectedPaymentMethodList, setSelectedPaymentMethodList] = useState([]);\n\n\n    useEffect(() => {\n        list();\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortOrder, setSortOrder] = useState(\"-\");\n\n\n    let [totalSales, setTotalSales] = useState(0.00);\n    let [netProfit, setNetProfit] = useState(0.00);\n    let [vatPrice, setVatPrice] = useState(0.00);\n    let [totalShippingHandlingFees, setTotalShippingHandlingFees] = useState(0.00);\n    let [totalDiscount, setTotalDiscount] = useState(0.00);\n    let [totalCashDiscount, setTotalCashDiscount] = useState(0.00);\n    let [totalPaidSales, setTotalPaidSales] = useState(0.00);\n    let [totalUnPaidSales, setTotalUnPaidSales] = useState(0.00);\n    let [totalCashSales, setTotalCashSales] = useState(0.00);\n    let [totalBankAccountSales, setTotalBankAccountSales] = useState(0.00);\n\n\n    let [loss, setLoss] = useState(0.00);\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=${object[key]}`;\n            })\n            .join(\"&\");\n    }\n\n    async function suggestCustomers(searchTerm) {\n        console.log(\"Inside handle suggestCustomers\");\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = `&${queryString}`;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name,phone,name_in_arabic,phone_in_arabic,search_label\";\n        let result = await fetch(\n            `/v1/customer?${Select}${queryString}`,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setCustomerOptions(data.result);\n    }\n\n    async function suggestUsers(searchTerm) {\n        console.log(\"Inside handle suggestUsers\");\n        setCustomerOptions([]);\n\n        console.log(\"searchTerm:\" + searchTerm);\n        if (!searchTerm) {\n            return;\n        }\n\n        var params = {\n            name: searchTerm,\n        };\n        var queryString = ObjectToSearchQueryParams(params);\n        if (queryString !== \"\") {\n            queryString = \"&\" + queryString;\n        }\n\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n\n        let Select = \"select=id,name\";\n        let result = await fetch(\n            \"/v1/user?\" + Select + queryString,\n            requestOptions\n        );\n        let data = await result.json();\n\n        setUserOptions(data.result);\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            searchParams[field] = \"\";\n            page = 1;\n            setPage(page);\n            list();\n            return;\n        }\n\n        if (value) {\n            let d = new Date(value);\n            value = format(d, \"MMM dd yyyy\");\n            console.log(\"value2:\", value);\n            console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)\n        } else {\n            value = \"\";\n        }\n\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n            console.log(\"searchParams[field]:\", searchParams[field]);\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            setSelectedCreatedByUsers(values);\n        } else if (field === \"customer_id\") {\n            setSelectedCustomers(values);\n        } else if (field === \"status\") {\n            setSelectedStatusList(values);\n        } else if (field === \"payment_status\") {\n            setSelectedPaymentStatusList(values);\n        } else if (field === \"payment_methods\") {\n            setSelectedPaymentMethodList(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function list() {\n        excelData = [];\n        setExcelData(excelData);\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select =\n            \"select=id,code,date,net_total,return_count,cash_discount,total_payment_received,payments_count,payment_methods,balance_amount,discount_percent,discount,created_by_name,customer_name,status,payment_status,payment_method,created_at,loss,net_loss,net_profit,store_id,total\";\n\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n\n        const d = new Date();\n        let diff = d.getTimezoneOffset();\n        console.log(\"Timezone:\", parseFloat(diff / 60));\n        searchParams[\"timezone_offset\"] = parseFloat(diff / 60);\n        searchParams[\"stats\"] = \"1\";\n\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/order?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortOrder +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setOrderList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                totalSales = data.meta.total_sales;\n                setTotalSales(totalSales);\n\n                netProfit = data.meta.net_profit;\n                setNetProfit(netProfit);\n\n                loss = data.meta.net_loss;\n                setLoss(loss);\n\n                vatPrice = data.meta.vat_price;\n                setVatPrice(vatPrice);\n\n                totalShippingHandlingFees = data.meta.shipping_handling_fees;\n                setTotalShippingHandlingFees(totalShippingHandlingFees);\n\n                totalDiscount = data.meta.discount;\n                setTotalDiscount(totalDiscount);\n\n                totalCashDiscount = data.meta.cash_discount;\n                setTotalCashDiscount(totalCashDiscount);\n\n                totalPaidSales = data.meta.paid_sales;\n                setTotalPaidSales(totalPaidSales);\n\n                totalUnPaidSales = data.meta.unpaid_sales;\n                setTotalUnPaidSales(totalUnPaidSales);\n\n                totalCashSales = data.meta.cash_sales;\n                setTotalCashSales(totalCashSales);\n\n                totalBankAccountSales = data.meta.bank_account_sales;\n                setTotalBankAccountSales(totalBankAccountSales);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortOrder = sortOrder === \"-\" ? \"\" : \"-\";\n        setSortOrder(sortOrder);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    let [showOrderPaymentHistory, setShowOrderPaymentHistory] = useState(false);\n\n    const [selectedOrder, setSelectedOrder] = useState({});\n\n    function openOrderPaymentsDialogue(order) {\n        setSelectedOrder(order);\n        showOrderPaymentHistory = true;\n        setShowOrderPaymentHistory(true);\n    }\n\n\n\n    function handleOrderPaymentHistoryClose() {\n        showOrderPaymentHistory = false;\n        setShowOrderPaymentHistory(false);\n        //list();\n    }\n\n    let [showOrderReturns, setShowOrderReturns] = useState(false);\n    function openOrderReturnsDialogue(order) {\n        setSelectedOrder(order);\n        showOrderReturns = true;\n        setShowOrderReturns(true);\n    }\n\n    function handleOrderReturnsClose() {\n        showOrderReturns = false;\n        setShowOrderReturns(false);\n    }\n\n\n    const DetailsViewRef = useRef();\n    function openDetailsView(id) {\n        DetailsViewRef.current.open(id);\n    }\n\n\n\n    const CreateFormRef = useRef();\n    function openCreateForm() {\n        CreateFormRef.current.open();\n    }\n\n    function openUpdateForm(id) {\n        CreateFormRef.current.open(id);\n    }\n\n    //Cash Discounts\n    const SalesCashDiscountCreateRef = useRef();\n    function openSalesCashDiscountCreateForm(order) {\n        SalesCashDiscountCreateRef.current.open(undefined, order);\n    }\n\n    const SalesCashDiscountDetailsViewRef = useRef();\n    function openSalesCashDiscountDetailsView(id) {\n        SalesCashDiscountDetailsViewRef.current.open(id);\n    }\n\n    function openSalesCashDiscountUpdateForm(id) {\n        SalesCashDiscountCreateRef.current.open(id);\n    }\n\n    const SalesReturnListRef = useRef();\n\n    //Sales Payments\n\n    const SalesPaymentListRef = useRef();\n    function openSalesPaymentList(order) {\n        // SalesPaymentListRef.current.open(undefined, order);\n    }\n\n\n    //Sales Return\n    const SalesReturnCreateRef = useRef();\n    function openSalesReturnCreateForm(id) {\n        SalesReturnCreateRef.current.open(undefined, id);\n    }\n\n    /*\n     const SalesReturnCreateRef = useRef();\n     function openSalesReturnCreateForm(order) {\n         SalesReturnCreateRef.current.open(undefined, order);\n     }\n     */\n\n    const SalesReturnDetailsViewRef = useRef();\n    function openSalesReturnDetailsView(id) {\n        SalesReturnDetailsViewRef.current.open(id);\n    }\n\n    function openSalesReturnUpdateForm(id) {\n        SalesReturnCreateRef.current.open(id);\n    }\n\n\n    return (\n        <>\n            <OrderCreate ref={CreateFormRef} refreshList={list} showToastMessage={props.showToastMessage} openCreateForm={openCreateForm} />\n            <OrderView ref={DetailsViewRef} openCreateForm={openCreateForm} />\n            <SalesReturnCreate ref={SalesReturnCreateRef} showToastMessage={props.showToastMessage} refreshSalesList={list} />\n\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"text-end\">\n                            Sales: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalSales.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Paid Sales: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalPaidSales.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h4 className=\"text-end\">\n                            Cash Sales: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalCashSales.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h4>\n                        <h4 className=\"text-end\">\n                            Bank Account Sales: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalBankAccountSales.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h4>\n                        <h1 className=\"text-end\">\n                            Credit Sales: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalUnPaidSales.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Cash Discounts: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalCashDiscount.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            Sales Discounts: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalDiscount.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n\n                        <h1 className=\"text-end\">\n                            Shipping/Handling fees: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={totalShippingHandlingFees.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n                        <h1 className=\"text-end\">\n                            VAT Collected: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={vatPrice.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1>\n\n                        {cookies.get('admin') === \"true\" ? <h1 className=\"text-end\">\n                            Net Profit: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={netProfit.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1> : \"\"}\n                        {cookies.get('admin') === \"true\" ? <h1 className=\"text-end\">\n                            Loss: <Badge bg=\"secondary\">\n                                <NumberFormat\n                                    value={loss.toFixed(2)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    suffix={\" \"}\n                                    renderText={(value, props) => value}\n                                />\n                            </Badge>\n                        </h1> : \"\"}\n\n                    </div>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"h3\">Sales Orders</h1>\n                    </div>\n\n\n                    <div className=\"col text-end\">\n\n                        <ExcelFile filename={salesReportFileName} element={excelData.length > 0 ? <Button variant=\"success\" className=\"btn btn-primary mb-3 success\" >Download Sales Report</Button> : \"\"}>\n                            <ExcelSheet dataSet={excelData} name={salesReportFileName} />\n                        </ExcelFile>\n\n                        {excelData.length == 0 ? <Button variant=\"primary\" className=\"btn btn-primary mb-3\" onClick={getAllOrders} >{fettingAllRecordsInProgress ? \"Preparing..\" : \"Sales Report\"}</Button> : \"\"}\n                        &nbsp;&nbsp;\n\n                        <Button\n                            hide={true.toString()}\n                            variant=\"primary\"\n                            className=\"btn btn-primary mb-3\"\n                            onClick={openCreateForm}\n                        >\n                            <i className=\"bi bi-plus-lg\"></i> Create\n                        </Button>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className=\"card\">\n                            {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    {totalItems === 0 && (\n                                        <div className=\"col\">\n                                            <p className=\"text-start\">No Orders to display</p>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"row\" style={{ border: \"solid 0px\" }}>\n                                    <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                        <Button\n                                            onClick={() => {\n                                                setIsRefreshInProcess(true);\n                                                list();\n                                            }}\n                                            variant=\"primary\"\n                                            disabled={isRefreshInProcess}\n                                        >\n                                            {isRefreshInProcess ? (\n                                                <Spinner\n                                                    as=\"span\"\n                                                    animation=\"border\"\n                                                    size=\"sm\"\n                                                    role=\"status\"\n                                                    aria-hidden={true}\n                                                />\n                                            ) : (\n                                                <i className=\"fa fa-refresh\"></i>\n                                            )}\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </Button>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        {isListLoading && (\n                                            <Spinner animation=\"grow\" variant=\"primary\" />\n                                        )}\n                                    </div>\n                                    <div className=\"col text-end\">\n                                        {totalItems > 0 && (\n                                            <>\n                                                <label className=\"form-label\">Size:&nbsp;</label>\n                                                <select\n                                                    value={pageSize}\n                                                    onChange={(e) => {\n                                                        changePageSize(e.target.value);\n                                                    }}\n                                                    className=\"form-control pull-right\"\n                                                    style={{\n                                                        border: \"solid 1px\",\n                                                        borderColor: \"silver\",\n                                                        width: \"55px\",\n                                                    }}\n                                                >\n                                                    <option value=\"5\">\n                                                        5\n                                                    </option>\n                                                    <option value=\"10\">\n                                                        10\n                                                    </option>\n                                                    <option value=\"20\">20</option>\n                                                    <option value=\"40\">40</option>\n                                                    <option value=\"50\">50</option>\n                                                    <option value=\"100\">100</option>\n                                                </select>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n\n                                <br />\n                                <div className=\"row\">\n                                    <div className=\"col\" style={{ border: \"solid 0px\", width: \"100%\" }}>\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {totalItems > 0 && (\n                                        <>\n                                            <div className=\"col text-start\">\n                                                <p className=\"text-start\">\n                                                    showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                    {totalItems}\n                                                </p>\n                                            </div>\n\n                                            <div className=\"col text-end\">\n                                                <p className=\"text-end\">\n                                                    page {page} of {totalPages}\n                                                </p>\n                                            </div>\n                                        </>\n                                    )}\n                                </div>\n                                <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                    <table className=\"table table-striped table-sm table-bordered\">\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"code\");\n                                                        }}\n                                                    >\n                                                        ID\n                                                        {sortField === \"code\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"code\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th >\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"date\");\n                                                        }}\n                                                    >\n                                                        Date\n                                                        {sortField === \"date\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"date\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_total\");\n                                                        }}\n                                                    >\n                                                        Net Total\n                                                        {sortField === \"net_total\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_total\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"cash_discount\");\n                                                        }}\n                                                    >\n                                                        Cash Discount\n                                                        {sortField === \"cash_discount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"cash_discount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"total_payment_received\");\n                                                        }}\n                                                    >\n                                                        Amount Paid\n                                                        {sortField === \"total_payment_received\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"total_payment_received\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"balance_amount\");\n                                                        }}\n                                                    >\n                                                        Balance\n                                                        {sortField === \"balance_amount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"balance_amount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payments_count\");\n                                                        }}\n                                                    >\n                                                        No.of Payments\n                                                        {sortField === \"payments_count\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payments_count\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payment_status\");\n                                                        }}\n                                                    >\n                                                        Payment Status\n                                                        {sortField === \"payment_status\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payment_status\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"payment_methods\");\n                                                        }}\n                                                    >\n                                                        Payment Methods\n                                                        {sortField === \"payment_methods\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"payment_methods\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"discount\");\n                                                        }}\n                                                    >\n                                                        Sales Discount\n                                                        {sortField === \"discount\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"discount\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"discount_percent\");\n                                                        }}\n                                                    >\n                                                        Sales Discount %\n                                                        {sortField === \"discount_percent\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"discount_percent\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_profit\");\n                                                        }}\n                                                    >\n                                                        Net Profit\n                                                        {sortField === \"net_profit\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_profit\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th> : \"\"}\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"net_loss\");\n                                                        }}\n                                                    >\n                                                        Net Loss\n                                                        {sortField === \"net_loss\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"net_loss\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th> : \"\"}\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_by\");\n                                                        }}\n                                                    >\n                                                        Created By\n                                                        {sortField === \"created_by\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_by\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"return_count\");\n                                                        }}\n                                                    >\n                                                        Returns\n                                                        {sortField === \"return_count\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-numeric-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"return_count\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-numeric-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"customer_name\");\n                                                        }}\n                                                    >\n                                                        Customer\n                                                        {sortField === \"customer_name\" &&\n                                                            sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"customer_name\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n\n\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"created_at\");\n                                                        }}\n                                                    >\n                                                        Created At\n                                                        {sortField === \"created_at\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-down\"></i>\n                                                        ) : null}\n                                                        {sortField === \"created_at\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                {/*\n                                                <th>\n                                                    <b\n                                                        style={{\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={() => {\n                                                            sort(\"status\");\n                                                        }}\n                                                    >\n                                                        Status\n                                                        {sortField === \"status\" && sortOrder === \"-\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                        ) : null}\n                                                        {sortField === \"status\" && sortOrder === \"\" ? (\n                                                            <i className=\"bi bi-sort-alpha-up\"></i>\n                                                        ) : null}\n                                                    </b>\n                                                </th>\n                                                        */}\n\n                                                <th>Actions</th>\n                                            </tr>\n                                        </thead>\n\n                                        <thead>\n                                            <tr className=\"text-center\">\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"code\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"code\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th style={{width:\"200px\"}}>\n                                                    <DatePicker\n                                                        id=\"date_str\"\n                                                        value={dateValue}\n                                                        selected={selectedDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                setDateValue(\"\");\n                                                                searchByDateField(\"date_str\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"date_str\", date);\n                                                            selectedDate = date;\n                                                            setSelectedDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) => setShowDateRange(!showDateRange)}\n                                                    >\n                                                        {showDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"from_date\"\n                                                                value={fromDateValue}\n                                                                selected={selectedFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setFromDateValue(\"\");\n                                                                        searchByDateField(\"from_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"from_date\", date);\n                                                                    selectedFromDate = date;\n                                                                    setSelectedFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"to_date\"\n                                                                value={toDateValue}\n                                                                selected={selectedToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setToDateValue(\"\");\n                                                                        searchByDateField(\"to_date\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"to_date\", date);\n                                                                    selectedToDate = date;\n                                                                    setSelectedToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_total\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_total\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"cash_discount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"cash_discount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"total_payment_received\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"total_payment_received\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"balance_amount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"balance_amount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"payments_count\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"payments_count\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"payment_status\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"payment_status\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={paymentStatusOptions}\n                                                        placeholder=\"Select Payment Status\"\n                                                        selected={selectedPaymentStatusList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"payment_methods\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"payment_methods\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={paymentMethodOptions}\n                                                        placeholder=\"Select payment methods\"\n                                                        selected={selectedPaymentMethodList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"discount\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"discount\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"discount_percent\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"discount_percent\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_profit\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_profit\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th> : \"\"}\n                                                {cookies.get('admin') === \"true\" ? <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"net_loss\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"net_loss\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th> : \"\"}\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"created_by\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"created_by\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={userOptions}\n                                                        placeholder=\"Select Users\"\n                                                        selected={selectedCreatedByUsers}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestUsers(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <input\n                                                        type=\"text\"\n                                                        id=\"return_count\"\n                                                        onChange={(e) =>\n                                                            searchByFieldValue(\"return_count\", e.target.value)\n                                                        }\n                                                        className=\"form-control\"\n                                                    />\n                                                </th>\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"customer_id\"\n                                                        labelKey=\"search_label\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"customer_id\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={customerOptions}\n                                                        placeholder=\"name or mob\"\n                                                        selected={selectedCustomers}\n                                                        highlightOnlyResult={true}\n                                                        onInputChange={(searchTerm, e) => {\n                                                            suggestCustomers(searchTerm);\n                                                        }}\n                                                        multiple\n                                                    />\n                                                </th>\n\n                                                <th>\n                                                    <DatePicker\n                                                        id=\"created_at\"\n                                                        value={createdAtValue}\n                                                        selected={selectedCreatedAtDate}\n                                                        className=\"form-control\"\n                                                        dateFormat=\"MMM dd yyyy\"\n                                                        onChange={(date) => {\n                                                            if (!date) {\n                                                                //  createdAtValue = \"\";\n                                                                setCreatedAtValue(\"\");\n                                                                searchByDateField(\"created_at\", \"\");\n                                                                return;\n                                                            }\n                                                            searchByDateField(\"created_at\", date);\n                                                            selectedCreatedAtDate = date;\n                                                            setSelectedCreatedAtDate(date);\n                                                        }}\n                                                    />\n                                                    <small\n                                                        style={{\n                                                            color: \"blue\",\n                                                            textDecoration: \"underline\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={(e) =>\n                                                            setShowCreatedAtDateRange(!showCreatedAtDateRange)\n                                                        }\n                                                    >\n                                                        {showCreatedAtDateRange ? \"Less..\" : \"More..\"}\n                                                    </small>\n                                                    <br />\n\n                                                    {showCreatedAtDateRange ? (\n                                                        <span className=\"text-left\">\n                                                            From:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_from\"\n                                                                value={createdAtFromValue}\n                                                                selected={selectedCreatedAtFromDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtFromValue(\"\");\n                                                                        searchByDateField(\"created_at_from\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_from\", date);\n                                                                    selectedCreatedAtFromDate = date;\n                                                                    setSelectedCreatedAtFromDate(date);\n                                                                }}\n                                                            />\n                                                            To:{\" \"}\n                                                            <DatePicker\n                                                                id=\"created_at_to\"\n                                                                value={createdAtToValue}\n                                                                selected={selectedCreatedAtToDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setCreatedAtToValue(\"\");\n                                                                        searchByDateField(\"created_at_to\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"created_at_to\", date);\n                                                                    selectedCreatedAtToDate = date;\n                                                                    setSelectedCreatedAtToDate(date);\n                                                                }}\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </th>\n                                                {/*\n                                                <th>\n                                                    <Typeahead\n                                                        id=\"status\"\n                                                        labelKey=\"name\"\n                                                        onChange={(selectedItems) => {\n                                                            searchByMultipleValuesField(\n                                                                \"status\",\n                                                                selectedItems\n                                                            );\n                                                        }}\n                                                        options={statusOptions}\n                                                        placeholder=\"Select Status\"\n                                                        selected={selectedStatusList}\n                                                        highlightOnlyResult={true}\n                                                        multiple\n                                                    />\n                                                </th>\n                                                    */}\n\n                                                <th style={{ width: \"150px\" }}></th>\n                                            </tr>\n                                        </thead>\n\n                                        <tbody className=\"text-center\">\n                                            {orderList &&\n                                                orderList.map((order) => (\n                                                    <tr key={order.code}>\n                                                        <td>{order.code}</td>\n                                                        <td >\n                                                            {format(new Date(order.date), \"MMM dd yyyy h:mma\")}\n                                                        </td>\n                                                        <td>{order.net_total?.toFixed(2)}</td>\n                                                        <td>{order.cash_discount?.toFixed(2)}</td>\n                                                        <td>\n\n\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openOrderPaymentsDialogue(order);\n                                                            }}>\n                                                                {order.total_payment_received?.toFixed(2)}\n                                                            </Button>\n\n                                                        </td>\n                                                        <td>{order.balance_amount?.toFixed(2)}</td>\n                                                        <td>\n\n\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openOrderPaymentsDialogue(order);\n                                                            }}>\n                                                                {order.payments_count}\n                                                            </Button>\n\n                                                        </td>\n                                                        <td>\n                                                            {order.payment_status == \"paid\" ?\n                                                                <span className=\"badge bg-success\">\n                                                                    Paid\n                                                                </span> : \"\"}\n                                                            {order.payment_status == \"paid_partially\" ?\n                                                                <span className=\"badge bg-warning\">\n                                                                    Paid Partially\n                                                                </span> : \"\"}\n                                                            {order.payment_status == \"not_paid\" ?\n                                                                <span className=\"badge bg-danger\">\n                                                                    Not Paid\n                                                                </span> : \"\"}\n                                                        </td>\n                                                        <td>\n\n                                                            {order.payment_methods &&\n                                                                order.payment_methods.map((name) => (\n                                                                    <span className=\"badge bg-info\">{name}</span>\n                                                                ))}\n\n                                                        </td>\n                                                        <td>{order.discount.toFixed(2)} </td>\n                                                        <td>{order.discount_percent.toFixed(2)} %</td>\n                                                        {cookies.get('admin') === \"true\" ? <td>{order.net_profit?.toFixed(2)} </td> : \"\"}\n                                                        {cookies.get('admin') === \"true\" ? <td>{order.net_loss?.toFixed(2)} </td> : \"\"}\n                                                        <td>{order.created_by_name}</td>\n                                                        <td>\n\n\n                                                            <Button variant=\"link\" onClick={() => {\n                                                                openOrderReturnsDialogue(order);\n                                                            }}>\n                                                                {order.return_count}\n                                                            </Button>\n\n                                                        </td>\n                                                        <td>{order.customer_name}</td>\n                                                        <td>\n                                                            {format(\n                                                                new Date(order.created_at),\n                                                                \"MMM dd yyyy h:mma\"\n                                                            )}\n                                                        </td>\n                                                        {/*\n                                                        <td>\n                                                            <span className=\"badge bg-success\">\n                                                                {order.status}\n                                                            </span>\n                                                            </td>*/}\n\n                                                        <td>\n                                                            {/*\n                                                        <OrderUpdate id={order.id} showUpdateButton={{true}} refreshList={list} showToastMessage={props.showToastMessage} />\n                                                          <OrderView id={order.id} showViewButton={{true}} show={false} />\n                                                        */}\n\n                                                            <Button className=\"btn btn-light btn-sm\" onClick={() => {\n                                                                openUpdateForm(order.id);\n                                                            }}>\n                                                                <i className=\"bi bi-pencil\"></i>\n                                                            </Button>\n\n\n                                                            <Button className=\"btn btn-primary btn-sm\" onClick={() => {\n                                                                openDetailsView(order.id);\n                                                            }}>\n                                                                <i className=\"bi bi-eye\"></i>\n                                                            </Button>\n                                                            <button\n                                                                className=\"btn btn-dark btn-sm\"\n                                                                data-bs-toggle=\"tooltip\"\n                                                                data-bs-placement=\"top\"\n                                                                title=\"Create Sales Return\"\n                                                                onClick={() => {\n                                                                    openSalesReturnCreateForm(order.id);\n                                                                }}\n                                                            >\n                                                                <i className=\"bi bi-arrow-left\"></i> Return\n                                                            </button>\n\n\n                                                            {/*<button\n                                                                className=\"btn btn-outline-secondary dropdown-toggle\"\n                                                                type=\"button\"\n                                                                data-bs-toggle=\"dropdown\"\n                                                                aria-expanded=\"false\"\n                                                            ></button>\n                                                            <ul className=\"dropdown-menu\">\n\n                                                                \n                                                                <li>\n                                                                    <button className=\"dropdown-item\" onClick={() => {\n                                                                        openSalesCashDiscountCreateForm(order);\n                                                                    }}>\n                                                                        <i className=\"bi bi-plus\"></i>\n                                                                        &nbsp;\n                                                                        Add Cash Discount\n                                                                    </button>\n                                                                </li>\n                                                                <li>\n                                                                    <button className=\"dropdown-item\" onClick={() => {\n                                                                        openSalesPaymentCreateForm(order);\n                                                                    }}>\n                                                                        <i className=\"bi bi-plus\"></i>\n                                                                        &nbsp;\n                                                                        Add Payment\n                                                                    </button>\n                                                                </li>\n\n                                                                </ul>*/}\n                                                        </td>\n                                                    </tr>\n                                                ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                {totalPages ? <ReactPaginate\n                                    breakLabel=\"...\"\n                                    nextLabel=\"next >\"\n                                    onPageChange={(event) => {\n                                        changePage(event.selected + 1);\n                                    }}\n                                    pageRangeDisplayed={5}\n                                    pageCount={totalPages}\n                                    previousLabel=\"< previous\"\n                                    renderOnZeroPageCount={null}\n                                    className=\"pagination  flex-wrap\"\n                                    pageClassName=\"page-item\"\n                                    pageLinkClassName=\"page-link\"\n                                    activeClassName=\"active\"\n                                    previousClassName=\"page-item\"\n                                    nextClassName=\"page-item\"\n                                    previousLinkClassName=\"page-link\"\n                                    nextLinkClassName=\"page-link\"\n                                    forcePage={page - 1}\n                                /> : \"\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <Modal show={showOrderPaymentHistory} size=\"lg\" onHide={handleOrderPaymentHistoryClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Payment history of Order #{selectedOrder.code}</Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleOrderPaymentHistoryClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <SalesPaymentIndex ref={SalesPaymentListRef} showToastMessage={props.showToastMessage} order={selectedOrder} refreshSalesList={list} />\n                </Modal.Body>\n            </Modal>\n\n            <Modal show={showOrderReturns} size=\"lg\" onHide={handleOrderReturnsClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Sales Returns of Sale Order #{selectedOrder.code}</Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleOrderReturnsClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <SalesReturnIndex ref={SalesReturnListRef} showToastMessage={props.showToastMessage} order={selectedOrder} refreshSalesList={list} />\n                </Modal.Body>\n            </Modal>\n\n        </>\n    );\n});\n\nexport default OrderIndex;\n"]},"metadata":{},"sourceType":"module"}