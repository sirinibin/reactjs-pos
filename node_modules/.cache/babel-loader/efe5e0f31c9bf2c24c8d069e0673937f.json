{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/product/sales_history.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Modal, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport OrderView from \"./../order/view.js\";\nimport CustomerView from \"./../customer/view.js\"; //function ProductIndex(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SalesHistory = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    open(model) {\n      product = model;\n      setProduct({ ...product\n      });\n      list();\n      SetShow(true);\n    }\n\n  }));\n  let [product, setProduct] = useState({});\n  const cookies = new Cookies();\n  let [selectedDate, setSelectedDate] = useState(new Date());\n  let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n  let [selectedToDate, setSelectedToDate] = useState(new Date()); //list\n\n  const [historyList, setHistoryList] = useState([]); //pagination\n\n  let [pageSize, setPageSize] = useState(5);\n  let [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalItems, setTotalItems] = useState(1);\n  const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n  const [offset, setOffset] = useState(0); //Created At filter\n\n  const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n  const [createdAtValue, setCreatedAtValue] = useState(\"\");\n  const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n  const [createdAtToValue, setCreatedAtToValue] = useState(\"\"); //loader flag\n\n  const [isListLoading, setIsListLoading] = useState(false);\n  const [isRefreshInProcess, setIsRefreshInProcess] = useState(false); //Search params\n\n  const [searchParams, setSearchParams] = useState({});\n  let [sortField, setSortField] = useState(\"created_at\");\n  let [sortProduct, setSortProduct] = useState(\"-\");\n\n  function ObjectToSearchQueryParams(object) {\n    return Object.keys(object).map(function (key) {\n      return `search[${key}]=` + object[key];\n    }).join(\"&\");\n  }\n\n  function searchByFieldValue(field, value) {\n    searchParams[field] = value;\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  const [showDateRange, setShowDateRange] = useState(false);\n  let [dateValue, setDateValue] = useState(\"\");\n  const [fromDateValue, setFromDateValue] = useState(\"\");\n  const [toDateValue, setToDateValue] = useState(\"\");\n\n  function searchByDateField(field, value) {\n    if (!value) {\n      searchParams[field] = \"\";\n      page = 1;\n      setPage(page);\n      list();\n      return;\n    }\n\n    if (value) {\n      let d = new Date(value);\n      value = format(d, \"MMM dd yyyy\");\n      console.log(\"value2:\", value);\n      console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n    } else {\n      value = \"\";\n    }\n    /*\n    let d = new Date(value);\n    d = new Date(d.toUTCString());\n    */\n    //value = format(d, \"MMM dd yyyy\");\n\n\n    if (field === \"date_str\") {\n      setDateValue(value);\n      setFromDateValue(\"\");\n      setToDateValue(\"\");\n      searchParams[\"from_date\"] = \"\";\n      searchParams[\"to_date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"from_date\") {\n      setFromDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"to_date\") {\n      setToDateValue(value);\n      setDateValue(\"\");\n      searchParams[\"date\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at\") {\n      setCreatedAtValue(value);\n      setCreatedAtFromValue(\"\");\n      setCreatedAtToValue(\"\");\n      searchParams[\"created_at_from\"] = \"\";\n      searchParams[\"created_at_to\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    if (field === \"created_at_from\") {\n      setCreatedAtFromValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    } else if (field === \"created_at_to\") {\n      setCreatedAtToValue(value);\n      setCreatedAtValue(\"\");\n      searchParams[\"created_at\"] = \"\";\n      searchParams[field] = value;\n    }\n\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function searchByMultipleValuesField(field, values) {\n    if (field === \"created_by\") {// setSelectedCreatedByProducts(values);\n    } else if (field === \"category_id\") {//setSelectedProductCategories(values);\n    }\n\n    searchParams[field] = Object.values(values).map(function (model) {\n      return model.id;\n    }).join(\",\");\n    page = 1;\n    setPage(page);\n    list();\n  }\n\n  function list() {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: cookies.get(\"access_token\")\n      }\n    };\n    let Select = \"\";\n    /*\n    let Select =\n        \"select=id,store_id,store_name,customer_id,customer_name,order_id,order_code,quantity,\";\n        */\n\n    if (cookies.get(\"store_id\")) {\n      searchParams.store_id = cookies.get(\"store_id\");\n    }\n\n    searchParams[\"product_id\"] = product.id;\n    setSearchParams(searchParams);\n    let queryParams = ObjectToSearchQueryParams(searchParams);\n\n    if (queryParams !== \"\") {\n      queryParams = \"&\" + queryParams;\n    } // console.log(\"queryParams:\", queryParams);\n    //queryParams = encodeURIComponent(queryParams);\n\n\n    setIsListLoading(true);\n    fetch(\"/v1/sales/history?\" + Select + queryParams + \"&sort=\" + sortProduct + sortField + \"&page=\" + page + \"&limit=\" + pageSize, requestOptions).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\");\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        const error = data && data.errors;\n        return Promise.reject(error);\n      }\n\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      setHistoryList(data.result);\n      let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n      setTotalPages(pageCount);\n      setTotalItems(data.total_count);\n      setOffset((page - 1) * pageSize);\n      setCurrentPageItemsCount(data.result.length);\n      totalSales = data.meta.total_sales;\n      setTotalSales(totalSales);\n      totalProfit = data.meta.total_profit;\n      setTotalProfit(totalProfit);\n      totalLoss = data.meta.total_loss;\n      setTotalLoss(totalLoss);\n      totalVat = data.meta.total_vat;\n      setTotalVat(totalVat);\n    }).catch(error => {\n      setIsListLoading(false);\n      setIsRefreshInProcess(false);\n      console.log(error);\n    });\n  }\n\n  function sort(field) {\n    sortField = field;\n    setSortField(sortField);\n    sortProduct = sortProduct === \"-\" ? \"\" : \"-\";\n    setSortProduct(sortProduct);\n    list();\n  }\n\n  function changePageSize(size) {\n    pageSize = parseInt(size);\n    setPageSize(pageSize);\n    list();\n  }\n\n  function changePage(newPage) {\n    page = parseInt(newPage);\n    setPage(page);\n    list();\n  }\n\n  const [show, SetShow] = useState(false);\n\n  function handleClose() {\n    SetShow(false);\n  }\n\n  ;\n  let [totalSales, setTotalSales] = useState(0.00);\n  let [totalProfit, setTotalProfit] = useState(0.00);\n  let [totalVat, setTotalVat] = useState(0.00);\n  let [totalLoss, setTotalLoss] = useState(0.00);\n  const OrderDetailsViewRef = useRef();\n\n  function openOrderDetailsView(id) {\n    OrderDetailsViewRef.current.open(id);\n  }\n\n  const CustomerDetailsViewRef = useRef();\n\n  function openCustomerDetailsView(id) {\n    CustomerDetailsViewRef.current.open(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrderView, {\n      ref: OrderDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomerView, {\n      ref: CustomerDetailsViewRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      size: \"xl\",\n      onHide: handleClose,\n      animation: false,\n      scrollable: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Sales History of \", product.name, \" \", product.name_in_arabic ? \" / \" + product.name_in_arabic : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col align-self-end text-end\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-close\",\n            onClick: handleClose,\n            \"aria-label\": \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-end\",\n                children: [\"Sales: \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: totalSales,\n                    displayType: \"text\",\n                    thousandSeparator: true,\n                    suffix: \" \",\n                    renderText: (value, props) => value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-end\",\n                children: [\"Net Profit: \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: totalProfit,\n                    displayType: \"text\",\n                    thousandSeparator: true,\n                    suffix: \" \",\n                    renderText: (value, props) => value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 68\n              }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-end\",\n                children: [\"Loss: \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: totalLoss,\n                    displayType: \"text\",\n                    thousandSeparator: true,\n                    suffix: \" \",\n                    renderText: (value, props) => value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 43\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 68\n              }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-end\",\n                children: [\"VAT Collected: \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: totalVat.toFixed(2),\n                    displayType: \"text\",\n                    thousandSeparator: true,\n                    suffix: \" \",\n                    renderText: (value, props) => value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: totalItems === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-start\",\n                        children: \"No Sales History to display\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    style: {\n                      bproduct: \"solid 0px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-start\",\n                      style: {\n                        border: \"solid 0px\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => {\n                          setIsRefreshInProcess(true);\n                          list();\n                        },\n                        variant: \"primary\",\n                        disabled: isRefreshInProcess,\n                        children: [isRefreshInProcess ? /*#__PURE__*/_jsxDEV(Spinner, {\n                          as: \"span\",\n                          animation: \"bproduct\",\n                          size: \"sm\",\n                          role: \"status\",\n                          \"aria-hidden\": true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 395,\n                          columnNumber: 57\n                        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-refresh\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"visually-hidden\",\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-center\",\n                      children: isListLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n                        animation: \"grow\",\n                        variant: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col text-end\",\n                      children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-label\",\n                          children: \"Size:\\xA0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 416,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          value: pageSize,\n                          onChange: e => {\n                            changePageSize(e.target.value);\n                          },\n                          className: \"form-control pull-right\",\n                          style: {\n                            bproduct: \"solid 1px\",\n                            bproductColor: \"silver\",\n                            width: \"55px\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"5\",\n                            children: \"5\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 429,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"10\",\n                            children: \"10\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 432,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"20\",\n                            children: \"20\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 435,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"40\",\n                            children: \"40\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 436,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"50\",\n                            children: \"50\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 437,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"100\",\n                            children: \"100\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 438,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"200\",\n                            children: \"200\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 439,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"300\",\n                            children: \"300\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 440,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"500\",\n                            children: \"500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 441,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1000\",\n                            children: \"1000\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 442,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"1500\",\n                            children: \"1500\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 443,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      style: {\n                        bproduct: \"solid 0px\"\n                      },\n                      children: totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                        breakLabel: \"...\",\n                        nextLabel: \"next >\",\n                        onPageChange: event => {\n                          changePage(event.selected + 1);\n                        },\n                        pageRangeDisplayed: 5,\n                        pageCount: totalPages,\n                        previousLabel: \"< previous\",\n                        renderOnZeroPageCount: null,\n                        className: \"pagination  flex-wrap\",\n                        pageClassName: \"page-item\",\n                        pageLinkClassName: \"page-link\",\n                        activeClassName: \"active\",\n                        previousClassName: \"page-item\",\n                        nextClassName: \"page-item\",\n                        previousLinkClassName: \"page-link\",\n                        nextLinkClassName: \"page-link\",\n                        forcePage: page - 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 63\n                      }, this) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: totalItems > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col text-start\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-start\",\n                          children: [\"showing \", offset + 1, \"-\", offset + currentPageItemsCount, \" of\", \" \", totalItems]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 479,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col text-end\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"text-end\",\n                          children: [\"page \", page, \" of \", totalPages]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 486,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    style: {\n                      overflowX: \"auto\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-striped table-sm table-bordered\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"date\");\n                              },\n                              children: [\"Date\", sortField === \"date\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-down\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 510,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"date\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 513,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 499,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 498,\n                            columnNumber: 57\n                          }, this), !cookies.get(\"store_id\") ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"store_name\");\n                              },\n                              children: [\"Store\", sortField === \"store_name\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 530,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"store_name\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 533,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 519,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 518,\n                            columnNumber: 85\n                          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"order_code\");\n                              },\n                              children: [\"Order ID\", sortField === \"order_code\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 549,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"order_code\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 552,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 538,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 537,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"customer_name\");\n                              },\n                              children: [\"Customer\", sortField === \"customer_name\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 569,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"customer_name\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 572,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 558,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 557,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"quantity\");\n                              },\n                              children: [\"Quantity\", sortField === \"quantity\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 589,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"quantity\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 592,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 578,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 577,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"unit_price\");\n                              },\n                              children: [\"Unit Price\", sortField === \"unit_price\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 609,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"unit_price\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 612,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 598,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 597,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"price\");\n                              },\n                              children: [\"Price\", sortField === \"price\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 630,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"price\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 633,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 619,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 617,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"vat_price\");\n                              },\n                              children: [\"VAT\", sortField === \"vat_price\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 650,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"vat_price\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 653,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 639,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 638,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"net_price\");\n                              },\n                              children: [\"Net Price\", sortField === \"net_price\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 670,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"net_price\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 673,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 659,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 658,\n                            columnNumber: 57\n                          }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"profit\");\n                              },\n                              children: [\"Profit\", sortField === \"profit\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 691,\n                                columnNumber: 73\n                              }, this) : null, sortField === \"profit\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 694,\n                                columnNumber: 73\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 680,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 679,\n                            columnNumber: 61\n                          }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"b\", {\n                              style: {\n                                textDecoration: \"underline\",\n                                cursor: \"pointer\"\n                              },\n                              onClick: () => {\n                                sort(\"loss\");\n                              },\n                              children: [\"Loss\", sortField === \"loss\" && sortProduct === \"-\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up-alt\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 712,\n                                columnNumber: 69\n                              }, this) : null, sortField === \"loss\" && sortProduct === \"\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"bi bi-sort-alpha-up\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 715,\n                                columnNumber: 69\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 701,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 700,\n                            columnNumber: 92\n                          }, this) : \"\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: \"text-center\",\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                minWidth: \"90px\"\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                                id: \"date\",\n                                value: dateValue,\n                                selected: selectedDate,\n                                className: \"form-control\",\n                                dateFormat: \"MMM dd yyyy\",\n                                isClearable: true,\n                                onChange: date => {\n                                  if (!date) {\n                                    setDateValue(\"\");\n                                    searchByDateField(\"date_str\", \"\");\n                                    return;\n                                  }\n\n                                  searchByDateField(\"date_str\", date);\n                                  selectedDate = date;\n                                  setSelectedDate(date);\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 727,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                                style: {\n                                  color: \"blue\",\n                                  textDecoration: \"underline\",\n                                  cursor: \"pointer\"\n                                },\n                                onClick: e => setShowDateRange(!showDateRange),\n                                children: showDateRange ? \"Less..\" : \"More..\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 746,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 758,\n                                columnNumber: 61\n                              }, this), showDateRange ? /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"text-left\",\n                                children: [\"From:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  id: \"date_from\",\n                                  value: fromDateValue,\n                                  selected: selectedFromDate,\n                                  className: \"form-control\",\n                                  dateFormat: \"MMM dd yyyy\",\n                                  isClearable: true,\n                                  onChange: date => {\n                                    if (!date) {\n                                      setFromDateValue(\"\");\n                                      searchByDateField(\"from_date\", \"\");\n                                      return;\n                                    }\n\n                                    searchByDateField(\"from_date\", date);\n                                    selectedFromDate = date;\n                                    setSelectedFromDate(date);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 763,\n                                  columnNumber: 69\n                                }, this), \"To:\", \" \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  id: \"date_to\",\n                                  value: toDateValue,\n                                  selected: selectedToDate,\n                                  isClearable: true,\n                                  className: \"form-control\",\n                                  dateFormat: \"MMM dd yyyy\",\n                                  onChange: date => {\n                                    if (!date) {\n                                      setToDateValue(\"\");\n                                      searchByDateField(\"to_date\", \"\");\n                                      return;\n                                    }\n\n                                    searchByDateField(\"to_date\", date);\n                                    selectedToDate = date;\n                                    setSelectedToDate(date);\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 782,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 761,\n                                columnNumber: 65\n                              }, this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 726,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 725,\n                            columnNumber: 57\n                          }, this), !cookies.get(\"store_id\") ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"store_name\",\n                              onChange: e => searchByFieldValue(\"store_name\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 805,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 804,\n                            columnNumber: 85\n                          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"order_code\",\n                              onChange: e => searchByFieldValue(\"order_code\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 815,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 814,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"customer_name\",\n                              onChange: e => searchByFieldValue(\"customer_name\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 825,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 824,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"quantity\",\n                              onChange: e => searchByFieldValue(\"quantity\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 836,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 835,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"unit_price\",\n                              onChange: e => searchByFieldValue(\"unit_price\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 846,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 845,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"price\",\n                              onChange: e => searchByFieldValue(\"price\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 856,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 855,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"vat_price\",\n                              onChange: e => searchByFieldValue(\"vat_price\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 866,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 865,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"net_price\",\n                              onChange: e => searchByFieldValue(\"net_price\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 876,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 875,\n                            columnNumber: 57\n                          }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"profit\",\n                              onChange: e => searchByFieldValue(\"profit\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 887,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 886,\n                            columnNumber: 61\n                          }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              id: \"loss\",\n                              onChange: e => searchByFieldValue(\"loss\", e.target.value),\n                              className: \"form-control\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 898,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 897,\n                            columnNumber: 61\n                          }, this) : \"\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 724,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 723,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        className: \"text-center\",\n                        children: historyList && historyList.map(history => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.date ? format(new Date(history.date), \"MMM dd yyyy h:mma\") : \"Not set\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 914,\n                            columnNumber: 65\n                          }, this), !cookies.get(\"store_id\") ? /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.store_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 920,\n                            columnNumber: 93\n                          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textDecoration: \"underline\",\n                              color: \"blue\",\n                              cursor: \"pointer\"\n                            },\n                            onClick: () => {\n                              openOrderDetailsView(history.order_id);\n                            },\n                            children: history.order_code\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 921,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textDecoration: \"underline\",\n                              color: \"blue\",\n                              cursor: \"pointer\"\n                            },\n                            onClick: () => {\n                              openCustomerDetailsView(history.customer_id);\n                            },\n                            children: history.customer_name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 930,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: [history.quantity, history.unit ? history.unit : \"\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 939,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.unit_price.toFixed(2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 940,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.price.toFixed(2) + \" \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 941,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.vat_price.toFixed(2) + \"   (\" + history.vat_percent.toFixed(2) + \"%)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 942,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.net_price.toFixed(2) + \" \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 943,\n                            columnNumber: 65\n                          }, this), cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.profit.toFixed(2) + \" \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 944,\n                            columnNumber: 100\n                          }, this) : \"\", cookies.get('admin') === \"true\" ? /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: history.loss.toFixed(2) + \" \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 945,\n                            columnNumber: 100\n                          }, this) : \"\"]\n                        }, history.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 913,\n                          columnNumber: 61\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 910,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 41\n                  }, this), totalPages ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n                    breakLabel: \"...\",\n                    nextLabel: \"next >\",\n                    onPageChange: event => {\n                      changePage(event.selected + 1);\n                    },\n                    pageRangeDisplayed: 5,\n                    pageCount: totalPages,\n                    previousLabel: \"< previous\",\n                    renderOnZeroPageCount: null,\n                    className: \"pagination  flex-wrap\",\n                    pageClassName: \"page-item\",\n                    pageLinkClassName: \"page-link\",\n                    activeClassName: \"active\",\n                    previousClassName: \"page-item\",\n                    nextClassName: \"page-item\",\n                    previousLinkClassName: \"page-link\",\n                    nextLinkClassName: \"page-link\",\n                    forcePage: page - 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 55\n                  }, this) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}, \"YM1dTHS3bkTgcPwY/8WHk13OS10=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = SalesHistory;\nexport default SalesHistory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SalesHistory$forwardRef\");\n$RefreshReg$(_c2, \"SalesHistory\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/product/sales_history.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Cookies","Typeahead","format","DatePicker","Button","Spinner","Modal","Badge","ReactPaginate","NumberFormat","OrderView","CustomerView","SalesHistory","props","ref","open","model","product","setProduct","list","SetShow","cookies","selectedDate","setSelectedDate","Date","selectedFromDate","setSelectedFromDate","selectedToDate","setSelectedToDate","historyList","setHistoryList","pageSize","setPageSize","page","setPage","totalPages","setTotalPages","totalItems","setTotalItems","currentPageItemsCount","setCurrentPageItemsCount","offset","setOffset","showCreatedAtDateRange","setShowCreatedAtDateRange","createdAtValue","setCreatedAtValue","createdAtFromValue","setCreatedAtFromValue","createdAtToValue","setCreatedAtToValue","isListLoading","setIsListLoading","isRefreshInProcess","setIsRefreshInProcess","searchParams","setSearchParams","sortField","setSortField","sortProduct","setSortProduct","ObjectToSearchQueryParams","object","Object","keys","map","key","join","searchByFieldValue","field","value","showDateRange","setShowDateRange","dateValue","setDateValue","fromDateValue","setFromDateValue","toDateValue","setToDateValue","searchByDateField","d","console","log","Intl","DateTimeFormat","resolvedOptions","timeZone","searchByMultipleValuesField","values","id","requestOptions","method","headers","Authorization","get","Select","store_id","queryParams","fetch","then","response","isJson","includes","data","json","ok","error","errors","Promise","reject","result","pageCount","parseInt","total_count","length","totalSales","meta","total_sales","setTotalSales","totalProfit","total_profit","setTotalProfit","totalLoss","total_loss","setTotalLoss","totalVat","total_vat","setTotalVat","catch","sort","changePageSize","size","changePage","newPage","show","handleClose","OrderDetailsViewRef","openOrderDetailsView","current","CustomerDetailsViewRef","openCustomerDetailsView","name","name_in_arabic","toFixed","bproduct","border","e","target","bproductColor","width","event","selected","overflowX","textDecoration","cursor","minWidth","date","color","history","store_name","order_id","order_code","customer_id","customer_name","quantity","unit","unit_price","price","vat_price","vat_percent","net_price","profit","loss"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { format } from \"date-fns\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Button, Spinner, Modal, Badge } from \"react-bootstrap\";\nimport ReactPaginate from \"react-paginate\";\nimport NumberFormat from \"react-number-format\";\nimport OrderView from \"./../order/view.js\";\nimport CustomerView from \"./../customer/view.js\";\n\n//function ProductIndex(props) {\n\nconst SalesHistory = forwardRef((props, ref) => {\n\n    useImperativeHandle(ref, () => ({\n        open(model) {\n            product = model;\n            setProduct({ ...product });\n            list();\n            SetShow(true);\n        },\n\n    }));\n\n    let [product, setProduct] = useState({});\n\n    const cookies = new Cookies();\n\n    let [selectedDate, setSelectedDate] = useState(new Date());\n    let [selectedFromDate, setSelectedFromDate] = useState(new Date());\n    let [selectedToDate, setSelectedToDate] = useState(new Date());\n\n    //list\n    const [historyList, setHistoryList] = useState([]);\n\n    //pagination\n    let [pageSize, setPageSize] = useState(5);\n    let [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(0);\n    const [totalItems, setTotalItems] = useState(1);\n    const [currentPageItemsCount, setCurrentPageItemsCount] = useState(0);\n    const [offset, setOffset] = useState(0);\n\n\n    //Created At filter\n    const [showCreatedAtDateRange, setShowCreatedAtDateRange] = useState(false);\n    const [createdAtValue, setCreatedAtValue] = useState(\"\");\n    const [createdAtFromValue, setCreatedAtFromValue] = useState(\"\");\n    const [createdAtToValue, setCreatedAtToValue] = useState(\"\");\n\n    //loader flag\n    const [isListLoading, setIsListLoading] = useState(false);\n    const [isRefreshInProcess, setIsRefreshInProcess] = useState(false);\n\n    //Search params\n    const [searchParams, setSearchParams] = useState({});\n    let [sortField, setSortField] = useState(\"created_at\");\n    let [sortProduct, setSortProduct] = useState(\"-\");\n\n    function ObjectToSearchQueryParams(object) {\n        return Object.keys(object)\n            .map(function (key) {\n                return `search[${key}]=` + object[key];\n            })\n            .join(\"&\");\n    }\n\n    function searchByFieldValue(field, value) {\n        searchParams[field] = value;\n\n        page = 1;\n        setPage(page);\n        list();\n    }\n\n    const [showDateRange, setShowDateRange] = useState(false);\n    let [dateValue, setDateValue] = useState(\"\");\n    const [fromDateValue, setFromDateValue] = useState(\"\");\n    const [toDateValue, setToDateValue] = useState(\"\");\n\n    function searchByDateField(field, value) {\n        if (!value) {\n            searchParams[field] = \"\";\n            page = 1;\n            setPage(page);\n            list();\n            return;\n        }\n\n        if (value) {\n            let d = new Date(value);\n            value = format(d, \"MMM dd yyyy\");\n            console.log(\"value2:\", value);\n            console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)\n        } else {\n            value = \"\";\n        }\n\n        /*\n        let d = new Date(value);\n        d = new Date(d.toUTCString());\n        */\n\n        //value = format(d, \"MMM dd yyyy\");\n\n        if (field === \"date_str\") {\n            setDateValue(value);\n            setFromDateValue(\"\");\n            setToDateValue(\"\");\n            searchParams[\"from_date\"] = \"\";\n            searchParams[\"to_date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"from_date\") {\n            setFromDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"to_date\") {\n            setToDateValue(value);\n            setDateValue(\"\");\n            searchParams[\"date\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at\") {\n            setCreatedAtValue(value);\n            setCreatedAtFromValue(\"\");\n            setCreatedAtToValue(\"\");\n            searchParams[\"created_at_from\"] = \"\";\n            searchParams[\"created_at_to\"] = \"\";\n            searchParams[field] = value;\n        }\n        if (field === \"created_at_from\") {\n            setCreatedAtFromValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        } else if (field === \"created_at_to\") {\n            setCreatedAtToValue(value);\n            setCreatedAtValue(\"\");\n            searchParams[\"created_at\"] = \"\";\n            searchParams[field] = value;\n        }\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function searchByMultipleValuesField(field, values) {\n        if (field === \"created_by\") {\n            // setSelectedCreatedByProducts(values);\n        } else if (field === \"category_id\") {\n            //setSelectedProductCategories(values);\n        }\n\n        searchParams[field] = Object.values(values)\n            .map(function (model) {\n                return model.id;\n            })\n            .join(\",\");\n\n        page = 1;\n        setPage(page);\n\n        list();\n    }\n\n    function list() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: cookies.get(\"access_token\"),\n            },\n        };\n        let Select = \"\";\n        /*\n        let Select =\n            \"select=id,store_id,store_name,customer_id,customer_name,order_id,order_code,quantity,\";\n            */\n        if (cookies.get(\"store_id\")) {\n            searchParams.store_id = cookies.get(\"store_id\");\n        }\n        searchParams[\"product_id\"] = product.id;\n        setSearchParams(searchParams);\n        let queryParams = ObjectToSearchQueryParams(searchParams);\n        if (queryParams !== \"\") {\n            queryParams = \"&\" + queryParams;\n        }\n\n        // console.log(\"queryParams:\", queryParams);\n        //queryParams = encodeURIComponent(queryParams);\n\n        setIsListLoading(true);\n        fetch(\n            \"/v1/sales/history?\" +\n            Select +\n            queryParams +\n            \"&sort=\" +\n            sortProduct +\n            sortField +\n            \"&page=\" +\n            page +\n            \"&limit=\" +\n            pageSize,\n            requestOptions\n        )\n            .then(async (response) => {\n                const isJson = response.headers\n                    .get(\"content-type\")\n                    ?.includes(\"application/json\");\n                const data = isJson && (await response.json());\n\n                // check for error response\n                if (!response.ok) {\n                    const error = data && data.errors;\n                    return Promise.reject(error);\n                }\n\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                setHistoryList(data.result);\n\n                let pageCount = parseInt((data.total_count + pageSize - 1) / pageSize);\n\n                setTotalPages(pageCount);\n                setTotalItems(data.total_count);\n                setOffset((page - 1) * pageSize);\n                setCurrentPageItemsCount(data.result.length);\n\n                totalSales = data.meta.total_sales;\n                setTotalSales(totalSales);\n\n                totalProfit = data.meta.total_profit;\n                setTotalProfit(totalProfit);\n\n                totalLoss = data.meta.total_loss;\n                setTotalLoss(totalLoss);\n\n                totalVat = data.meta.total_vat;\n                setTotalVat(totalVat);\n\n            })\n            .catch((error) => {\n                setIsListLoading(false);\n                setIsRefreshInProcess(false);\n                console.log(error);\n            });\n    }\n\n    function sort(field) {\n        sortField = field;\n        setSortField(sortField);\n        sortProduct = sortProduct === \"-\" ? \"\" : \"-\";\n        setSortProduct(sortProduct);\n        list();\n    }\n\n    function changePageSize(size) {\n        pageSize = parseInt(size);\n        setPageSize(pageSize);\n        list();\n    }\n\n    function changePage(newPage) {\n        page = parseInt(newPage);\n        setPage(page);\n        list();\n    }\n\n    const [show, SetShow] = useState(false);\n\n    function handleClose() {\n        SetShow(false);\n    };\n\n    let [totalSales, setTotalSales] = useState(0.00);\n    let [totalProfit, setTotalProfit] = useState(0.00);\n    let [totalVat, setTotalVat] = useState(0.00);\n    let [totalLoss, setTotalLoss] = useState(0.00);\n\n    const OrderDetailsViewRef = useRef();\n    function openOrderDetailsView(id) {\n        OrderDetailsViewRef.current.open(id);\n    }\n\n\n    const CustomerDetailsViewRef = useRef();\n    function openCustomerDetailsView(id) {\n        CustomerDetailsViewRef.current.open(id);\n    }\n\n\n\n    return (\n        <>\n            <OrderView ref={OrderDetailsViewRef} />\n            <CustomerView ref={CustomerDetailsViewRef} />\n            <Modal show={show} size=\"xl\" onHide={handleClose} animation={false} scrollable={true}>\n                <Modal.Header>\n                    <Modal.Title>Sales History of {product.name} {product.name_in_arabic ? \" / \" + product.name_in_arabic : \"\"}</Modal.Title>\n\n                    <div className=\"col align-self-end text-end\">\n                        <button\n                            type=\"button\"\n                            className=\"btn-close\"\n                            onClick={handleClose}\n                            aria-label=\"Close\"\n                        ></button>\n\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container-fluid p-0\">\n                        <div className=\"row\">\n\n                            <div className=\"col\">\n                                <h1 className=\"text-end\">\n                                    Sales: <Badge bg=\"secondary\">\n                                        <NumberFormat\n                                            value={totalSales}\n                                            displayType={\"text\"}\n                                            thousandSeparator={true}\n                                            suffix={\" \"}\n                                            renderText={(value, props) => value}\n                                        />\n                                    </Badge>\n                                </h1>\n                                {cookies.get('admin') === \"true\" ? <h1 className=\"text-end\">\n                                    Net Profit: <Badge bg=\"secondary\">\n                                        <NumberFormat\n                                            value={totalProfit}\n                                            displayType={\"text\"}\n                                            thousandSeparator={true}\n                                            suffix={\" \"}\n                                            renderText={(value, props) => value}\n                                        />\n                                    </Badge>\n                                </h1> : \"\"}\n                                {cookies.get('admin') === \"true\" ? <h1 className=\"text-end\">\n                                    Loss: <Badge bg=\"secondary\">\n                                        <NumberFormat\n                                            value={totalLoss}\n                                            displayType={\"text\"}\n                                            thousandSeparator={true}\n                                            suffix={\" \"}\n                                            renderText={(value, props) => value}\n                                        />\n                                    </Badge>\n                                </h1> : \"\"}\n                                <h1 className=\"text-end\">\n                                    VAT Collected: <Badge bg=\"secondary\">\n                                        <NumberFormat\n                                            value={totalVat.toFixed(2)}\n                                            displayType={\"text\"}\n                                            thousandSeparator={true}\n                                            suffix={\" \"}\n                                            renderText={(value, props) => value}\n                                        />\n                                    </Badge>\n                                </h1>\n                            </div>\n\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <div className=\"card\">\n                                    {/*\n  <div   className=\"card-header\">\n                        <h5   className=\"card-title mb-0\"></h5>\n                    </div>\n                    */}\n                                    <div className=\"card-body\">\n                                        <div className=\"row\">\n                                            {totalItems === 0 && (\n                                                <div className=\"col\">\n                                                    <p className=\"text-start\">No Sales History to display</p>\n                                                </div>\n                                            )}\n                                        </div>\n                                        <div className=\"row\" style={{ bproduct: \"solid 0px\" }}>\n                                            <div className=\"col text-start\" style={{ border: \"solid 0px\" }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        setIsRefreshInProcess(true);\n                                                        list();\n                                                    }}\n                                                    variant=\"primary\"\n                                                    disabled={isRefreshInProcess}\n                                                >\n                                                    {isRefreshInProcess ? (\n                                                        <Spinner\n                                                            as=\"span\"\n                                                            animation=\"bproduct\"\n                                                            size=\"sm\"\n                                                            role=\"status\"\n                                                            aria-hidden={true}\n                                                        />\n                                                    ) : (\n                                                        <i className=\"fa fa-refresh\"></i>\n                                                    )}\n                                                    <span className=\"visually-hidden\">Loading...</span>\n                                                </Button>\n                                            </div>\n                                            <div className=\"col text-center\">\n                                                {isListLoading && (\n                                                    <Spinner animation=\"grow\" variant=\"primary\" />\n                                                )}\n                                            </div>\n                                            <div className=\"col text-end\">\n                                                {totalItems > 0 && (\n                                                    <>\n                                                        <label className=\"form-label\">Size:&nbsp;</label>\n                                                        <select\n                                                            value={pageSize}\n                                                            onChange={(e) => {\n                                                                changePageSize(e.target.value);\n                                                            }}\n                                                            className=\"form-control pull-right\"\n                                                            style={{\n                                                                bproduct: \"solid 1px\",\n                                                                bproductColor: \"silver\",\n                                                                width: \"55px\",\n                                                            }}\n                                                        >\n                                                            <option value=\"5\">\n                                                                5\n                                                            </option>\n                                                            <option value=\"10\" >\n                                                                10\n                                                            </option>\n                                                            <option value=\"20\">20</option>\n                                                            <option value=\"40\">40</option>\n                                                            <option value=\"50\">50</option>\n                                                            <option value=\"100\">100</option>\n                                                            <option value=\"200\">200</option>\n                                                            <option value=\"300\">300</option>\n                                                            <option value=\"500\">500</option>\n                                                            <option value=\"1000\">1000</option>\n                                                            <option value=\"1500\">1500</option>\n                                                        </select>\n                                                    </>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <br />\n                                        <div className=\"row\">\n                                            <div className=\"col\" style={{ bproduct: \"solid 0px\" }}>\n                                                {totalPages ? <ReactPaginate\n                                                    breakLabel=\"...\"\n                                                    nextLabel=\"next >\"\n                                                    onPageChange={(event) => {\n                                                        changePage(event.selected + 1);\n                                                    }}\n                                                    pageRangeDisplayed={5}\n                                                    pageCount={totalPages}\n                                                    previousLabel=\"< previous\"\n                                                    renderOnZeroPageCount={null}\n                                                    className=\"pagination  flex-wrap\"\n                                                    pageClassName=\"page-item\"\n                                                    pageLinkClassName=\"page-link\"\n                                                    activeClassName=\"active\"\n                                                    previousClassName=\"page-item\"\n                                                    nextClassName=\"page-item\"\n                                                    previousLinkClassName=\"page-link\"\n                                                    nextLinkClassName=\"page-link\"\n                                                    forcePage={page - 1}\n                                                /> : \"\"}\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            {totalItems > 0 && (\n                                                <>\n                                                    <div className=\"col text-start\">\n                                                        <p className=\"text-start\">\n                                                            showing {offset + 1}-{offset + currentPageItemsCount} of{\" \"}\n                                                            {totalItems}\n                                                        </p>\n                                                    </div>\n\n                                                    <div className=\"col text-end\">\n                                                        <p className=\"text-end\">\n                                                            page {page} of {totalPages}\n                                                        </p>\n                                                    </div>\n                                                </>\n                                            )}\n                                        </div>\n                                        <div className=\"table-responsive\" style={{ overflowX: \"auto\" }}>\n                                            <table className=\"table table-striped table-sm table-bordered\">\n                                                <thead>\n                                                    <tr className=\"text-center\">\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"date\");\n                                                                }}\n                                                            >\n                                                                Date\n                                                                {sortField === \"date\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-down\"></i>\n                                                                ) : null}\n                                                                {sortField === \"date\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        {!cookies.get(\"store_id\") ? <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"store_name\");\n                                                                }}\n                                                            >\n                                                                Store\n                                                                {sortField === \"store_name\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"store_name\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th> : \"\"}\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"order_code\");\n                                                                }}\n                                                            >\n                                                                Order ID\n                                                                {sortField === \"order_code\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"order_code\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"customer_name\");\n                                                                }}\n                                                            >\n                                                                Customer\n                                                                {sortField === \"customer_name\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"customer_name\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"quantity\");\n                                                                }}\n                                                            >\n                                                                Quantity\n                                                                {sortField === \"quantity\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"quantity\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"unit_price\");\n                                                                }}\n                                                            >\n                                                                Unit Price\n                                                                {sortField === \"unit_price\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"unit_price\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"price\");\n                                                                }}\n                                                            >\n                                                                Price\n                                                                {sortField === \"price\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"price\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"vat_price\");\n                                                                }}\n                                                            >\n                                                                VAT\n                                                                {sortField === \"vat_price\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"vat_price\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"net_price\");\n                                                                }}\n                                                            >\n                                                                Net Price\n                                                                {sortField === \"net_price\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"net_price\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th>\n\n                                                        {cookies.get('admin') === \"true\" ?\n                                                            <th>\n                                                                <b\n                                                                    style={{\n                                                                        textDecoration: \"underline\",\n                                                                        cursor: \"pointer\",\n                                                                    }}\n                                                                    onClick={() => {\n                                                                        sort(\"profit\");\n                                                                    }}\n                                                                >\n                                                                    Profit\n                                                                    {sortField === \"profit\" && sortProduct === \"-\" ? (\n                                                                        <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                    ) : null}\n                                                                    {sortField === \"profit\" && sortProduct === \"\" ? (\n                                                                        <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                    ) : null}\n                                                                </b>\n\n\n                                                            </th> : \"\"}\n                                                        {cookies.get('admin') === \"true\" ? <th>\n                                                            <b\n                                                                style={{\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={() => {\n                                                                    sort(\"loss\");\n                                                                }}\n                                                            >\n                                                                Loss\n                                                                {sortField === \"loss\" && sortProduct === \"-\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up-alt\"></i>\n                                                                ) : null}\n                                                                {sortField === \"loss\" && sortProduct === \"\" ? (\n                                                                    <i className=\"bi bi-sort-alpha-up\"></i>\n                                                                ) : null}\n                                                            </b>\n                                                        </th> : \"\"}\n\n                                                    </tr>\n                                                </thead>\n\n                                                <thead>\n                                                    <tr className=\"text-center\">\n                                                        <th>\n                                                            <div style={{minWidth:\"90px\"}}>\n                                                            <DatePicker\n                                                                id=\"date\"\n                                                                value={dateValue}\n                                                                selected={selectedDate}\n                                                                className=\"form-control\"\n                                                                dateFormat=\"MMM dd yyyy\"\n                                                                isClearable={true}  \n                                                                onChange={(date) => {\n                                                                    if (!date) {\n                                                                        setDateValue(\"\");\n                                                                        searchByDateField(\"date_str\", \"\");\n                                                                        return;\n                                                                    }\n                                                                    searchByDateField(\"date_str\", date);\n                                                                    selectedDate = date;\n                                                                    setSelectedDate(date);\n\n                                                                }}\n                                                            />\n                                                            <small\n                                                                style={{\n                                                                    color: \"blue\",\n                                                                    textDecoration: \"underline\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                onClick={(e) =>\n                                                                    setShowDateRange(!showDateRange)\n                                                                }\n                                                            >\n                                                                {showDateRange ? \"Less..\" : \"More..\"}\n                                                            </small>\n                                                            <br />\n\n                                                            {showDateRange ? (\n                                                                <span className=\"text-left\">\n                                                                    From:{\" \"}\n                                                                    <DatePicker\n                                                                        id=\"date_from\"\n                                                                        value={fromDateValue}\n                                                                        selected={selectedFromDate}\n                                                                        className=\"form-control\"\n                                                                        dateFormat=\"MMM dd yyyy\"\n                                                                        isClearable={true}  \n                                                                        onChange={(date) => {\n                                                                            if (!date) {\n                                                                                setFromDateValue(\"\");\n                                                                                searchByDateField(\"from_date\", \"\");\n                                                                                return;\n                                                                            }\n                                                                            searchByDateField(\"from_date\", date);\n                                                                            selectedFromDate = date;\n                                                                            setSelectedFromDate(date);\n                                                                        }}\n                                                                    />\n                                                                    To:{\" \"}\n                                                                    <DatePicker\n                                                                        id=\"date_to\"\n                                                                        value={toDateValue}\n                                                                        selected={selectedToDate}\n                                                                        isClearable={true}  \n                                                                        className=\"form-control\"\n                                                                        dateFormat=\"MMM dd yyyy\"\n                                                                        onChange={(date) => {\n                                                                            if (!date) {\n                                                                                setToDateValue(\"\");\n                                                                                searchByDateField(\"to_date\", \"\");\n                                                                                return;\n                                                                            }\n                                                                            searchByDateField(\"to_date\", date);\n                                                                            selectedToDate = date;\n                                                                            setSelectedToDate(date);\n                                                                        }}\n                                                                    />\n                                                                </span>\n                                                            ) : null}\n                                                            </div>\n                                                        </th>\n                                                        {!cookies.get(\"store_id\") ? <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"store_name\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"store_name\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th> : \"\"}\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"order_code\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"order_code\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"customer_name\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"customer_name\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"quantity\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"quantity\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"unit_price\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"unit_price\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"price\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"price\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"vat_price\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"vat_price\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        <th>\n                                                            <input\n                                                                type=\"text\"\n                                                                id=\"net_price\"\n                                                                onChange={(e) =>\n                                                                    searchByFieldValue(\"net_price\", e.target.value)\n                                                                }\n                                                                className=\"form-control\"\n                                                            />\n                                                        </th>\n                                                        {cookies.get('admin') === \"true\" ?\n                                                            <th>\n                                                                <input\n                                                                    type=\"text\"\n                                                                    id=\"profit\"\n                                                                    onChange={(e) =>\n                                                                        searchByFieldValue(\"profit\", e.target.value)\n                                                                    }\n                                                                    className=\"form-control\"\n                                                                />\n                                                            </th> : \"\"}\n                                                        {cookies.get('admin') === \"true\" ?\n                                                            <th>\n                                                                <input\n                                                                    type=\"text\"\n                                                                    id=\"loss\"\n                                                                    onChange={(e) =>\n                                                                        searchByFieldValue(\"loss\", e.target.value)\n                                                                    }\n                                                                    className=\"form-control\"\n                                                                />\n                                                            </th> : \"\"}\n                                                    </tr>\n                                                </thead>\n\n                                                <tbody className=\"text-center\">\n                                                    {historyList &&\n                                                        historyList.map((history) => (\n                                                            <tr key={history.id}>\n                                                                <td>\n                                                                    {history.date?format(\n                                                                        new Date(history.date),\n                                                                        \"MMM dd yyyy h:mma\"\n                                                                    ):\"Not set\"}\n                                                                </td>\n                                                                {!cookies.get(\"store_id\") ? <td>{history.store_name}</td> : \"\"}\n                                                                <td style={{\n                                                                    textDecoration: \"underline\",\n                                                                    color: \"blue\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                    onClick={() => {\n                                                                        openOrderDetailsView(history.order_id);\n                                                                    }}>{history.order_code}\n                                                                </td>\n                                                                <td style={{\n                                                                    textDecoration: \"underline\",\n                                                                    color: \"blue\",\n                                                                    cursor: \"pointer\",\n                                                                }}\n                                                                    onClick={() => {\n                                                                        openCustomerDetailsView(history.customer_id);\n                                                                    }}>{history.customer_name}\n                                                                </td>\n                                                                <td>{history.quantity}{history.unit ? history.unit : \"\"}</td>\n                                                                <td>{history.unit_price.toFixed(2)}</td>\n                                                                <td>{history.price.toFixed(2) + \" \"}</td>\n                                                                <td>{history.vat_price.toFixed(2) + \"   (\" + history.vat_percent.toFixed(2) + \"%)\"}</td>\n                                                                <td>{history.net_price.toFixed(2) + \" \"}</td>\n                                                                {cookies.get('admin') === \"true\" ? <td>{history.profit.toFixed(2) + \" \"}</td> : \"\"}\n                                                                {cookies.get('admin') === \"true\" ? <td>{history.loss.toFixed(2) + \" \"}</td> : \"\"}\n\n                                                                {/* <td>   \n                                                        <button\n                                                            className=\"btn btn-outline-secondary dropdown-toggle\"\n                                                            type=\"button\"\n                                                            data-bs-toggle=\"dropdown\"\n                                                            aria-expanded=\"false\"\n                                                        ></button>\n                                                        <ul className=\"dropdown-menu\">\n                                                            <li>\n                                                                <a href=\"/\" className=\"dropdown-item\">\n                                                                    <i className=\"bi bi-download\"></i>\n                                                                    Download\n                                                                </a>\n                                                            </li>\n                                                        </ul>\n                                                      \n                                                                </td>\n                                                                 */}\n                                                            </tr>\n                                                        ))}\n                                                </tbody>\n                                            </table>\n                                        </div>\n\n                                        {totalPages ? <ReactPaginate\n                                            breakLabel=\"...\"\n                                            nextLabel=\"next >\"\n                                            onPageChange={(event) => {\n                                                changePage(event.selected + 1);\n                                            }}\n                                            pageRangeDisplayed={5}\n                                            pageCount={totalPages}\n                                            previousLabel=\"< previous\"\n                                            renderOnZeroPageCount={null}\n                                            className=\"pagination  flex-wrap\"\n                                            pageClassName=\"page-item\"\n                                            pageLinkClassName=\"page-link\"\n                                            activeClassName=\"active\"\n                                            previousClassName=\"page-item\"\n                                            nextClassName=\"page-item\"\n                                            previousLinkClassName=\"page-link\"\n                                            nextLinkClassName=\"page-link\"\n                                            forcePage={page - 1}\n                                        /> : \"\"}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </>);\n\n\n});\n\nexport default SalesHistory;\n\n"]},"metadata":{},"sourceType":"module"}