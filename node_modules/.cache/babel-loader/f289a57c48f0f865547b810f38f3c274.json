{"ast":null,"code":"var _jsxFileName = \"/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/analytics/sales/calendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Chart } from \"react-google-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  useImperativeHandle(ref, () => ({\n    init() {\n      if (props.allOrders.length > 0) {\n        makeData();\n      }\n    }\n\n  }));\n  let [calendarAllSales, setCalendarAllSales] = useState([]);\n  let [calendarAllSalesProfit, setCalendarAllSalesProfit] = useState([]);\n  let [calendarAllExpenses, setCalendarAllExpenses] = useState([]);\n  let [calendarAllPurchases, setCalendarAllPurchases] = useState([]);\n  let [calendarAllSalesReturns, setCalendarAllSalesReturns] = useState([]);\n  let [calendarAllPurchaseReturns, setCalendarAllPurchaseReturns] = useState([]);\n\n  function makeData() {\n    let calendarSalesData = [[{\n      type: \"date\",\n      id: \"Date\"\n    }, {\n      type: \"number\",\n      id: \"Sales\"\n    }]];\n    let calendarSalesProfitData = [[{\n      type: \"date\",\n      id: \"Date\"\n    }, {\n      type: \"number\",\n      id: \"Profit\"\n    }]];\n    let calendarExpenseData = [[{\n      type: \"date\",\n      id: \"Date\"\n    }, {\n      type: \"number\",\n      id: \"Expense\"\n    }]];\n    let calendarPurchaseData = [[{\n      type: \"date\",\n      id: \"Date\"\n    }, {\n      type: \"number\",\n      id: \"Purchase\"\n    }]];\n    let calendarSalesReturnData = [[{\n      type: \"date\",\n      id: \"Date\"\n    }, {\n      type: \"number\",\n      id: \"Sales Return\"\n    }]];\n    let calendarPurchaseReturnData = [[{\n      type: \"date\",\n      id: \"Date\"\n    }, {\n      type: \"number\",\n      id: \"Purchase Return\"\n    }]];\n    let dailySales = [];\n    let dailySalesProfit = [];\n\n    for (const sale of props.allOrders) {\n      let dt = new Date(sale.date);\n      let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n\n      if (!dailySales[dtStr]) {\n        dailySales[dtStr] = 0;\n      }\n\n      if (!dailySalesProfit[dtStr]) {\n        dailySalesProfit[dtStr] = 0;\n      }\n\n      dailySales[dtStr] += parseFloat(sale.net_total);\n      dailySalesProfit[dtStr] += parseFloat(sale.net_profit);\n    }\n\n    for (let saleDate in dailySales) {\n      let parts = saleDate.split('-');\n      calendarSalesData.push([new Date(parts[0], parts[1], parts[2]), parseFloat(dailySales[saleDate].toFixed(2))]);\n      calendarSalesProfitData.push([new Date(parts[0], parts[1], parts[2]), parseFloat(dailySalesProfit[saleDate].toFixed(2))]);\n    }\n\n    calendarAllSales = calendarSalesData;\n    setCalendarAllSales(calendarSalesData);\n    console.log(\"calendarSalesProfitData:\", calendarSalesProfitData);\n    calendarAllSalesProfit = calendarSalesProfitData;\n    setCalendarAllSalesProfit(calendarSalesProfitData);\n    let dailyExpenses = [];\n\n    for (const expense of props.allExpenses) {\n      let dt = new Date(expense.date);\n      let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n\n      if (!dailyExpenses[dtStr]) {\n        dailyExpenses[dtStr] = 0;\n      }\n\n      dailyExpenses[dtStr] += parseFloat(expense.amount);\n    }\n\n    for (let expenseDate in dailyExpenses) {\n      let parts = expenseDate.split('-');\n      calendarExpenseData.push([new Date(parts[0], parts[1], parts[2]), parseFloat(dailyExpenses[expenseDate].toFixed(2))]);\n    }\n\n    calendarAllExpenses = calendarExpenseData;\n    setCalendarAllExpenses(calendarExpenseData);\n    let dailyPurchases = [];\n\n    for (const purchase of props.allPurchases) {\n      let dt = new Date(purchase.date);\n      let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n\n      if (!dailyPurchases[dtStr]) {\n        dailyPurchases[dtStr] = 0;\n      }\n\n      dailyPurchases[dtStr] += parseFloat(purchase.net_total);\n    }\n\n    for (let purchaseDate in dailyPurchases) {\n      let parts = purchaseDate.split('-');\n      calendarPurchaseData.push([new Date(parts[0], parts[1], parts[2]), parseFloat(dailyPurchases[purchaseDate].toFixed(2))]);\n    }\n\n    calendarAllPurchases = calendarPurchaseData;\n    setCalendarAllPurchases(calendarPurchaseData); //sales returns\n\n    let dailySalesReturns = [];\n\n    for (const salesReturn of props.allSalesReturns) {\n      let dt = new Date(salesReturn.date);\n      let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n\n      if (!dailySalesReturns[dtStr]) {\n        dailySalesReturns[dtStr] = 0;\n      }\n\n      dailySalesReturns[dtStr] += parseFloat(salesReturn.net_total);\n    }\n\n    for (let salesReturnDate in dailySalesReturns) {\n      let parts = salesReturnDate.split('-');\n      calendarSalesReturnData.push([new Date(parts[0], parts[1], parts[2]), parseFloat(dailySalesReturns[salesReturnDate].toFixed(2))]);\n    }\n\n    calendarAllSalesReturns = calendarSalesReturnData;\n    setCalendarAllSalesReturns(calendarSalesReturnData); //purchase returns\n\n    let dailyPurchaseReturns = [];\n\n    for (const purchaseReturn of props.allPurchaseReturns) {\n      let dt = new Date(purchaseReturn.date);\n      let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n\n      if (!dailyPurchaseReturns[dtStr]) {\n        dailyPurchaseReturns[dtStr] = 0;\n      }\n\n      dailyPurchaseReturns[dtStr] += parseFloat(purchaseReturn.net_total);\n    }\n\n    for (let purchaseReturnDate in dailyPurchaseReturns) {\n      let parts = purchaseReturnDate.split('-');\n      calendarPurchaseReturnData.push([new Date(parts[0], parts[1], parts[2]), parseFloat(dailyPurchaseReturns[purchaseReturnDate].toFixed(2))]);\n    }\n\n    calendarAllPurchaseReturns = calendarPurchaseReturnData;\n    setCalendarAllPurchaseReturns(calendarPurchaseReturnData);\n  }\n\n  const [calendarSalesOptions, setCalendarSalesOptions] = useState({\n    title: 'Daily Sales'\n  });\n  const [calendarSalesProfitOptions, setCalendarSalesProfitOptions] = useState({\n    title: 'Daily Profit'\n  });\n  const [calendarExpenseOptions, setCalendarExpenseOptions] = useState({\n    title: 'Daily Expenses'\n  });\n  const [calendarPurchaseOptions, setCalendarPurchaseOptions] = useState({\n    title: 'Daily Purchases'\n  });\n  const [calendarSalesReturnOptions, setCalendarSalesReturnOptions] = useState({\n    title: 'Daily Sales Returns'\n  });\n  const [calendarPurchaseReturnOptions, setCalendarPurchaseReturnOptions] = useState({\n    title: 'Daily Purchase Returns'\n  });\n  useEffect(() => {\n    console.log(\"Inside useEffect\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: calendarAllSales && calendarAllSales.length > 0 ? /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"Calendar\",\n          width: \"100%\",\n          height: \"400px\",\n          data: calendarAllSales,\n          options: calendarSalesOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 72\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: calendarAllSalesProfit && calendarAllSalesProfit.length > 0 ? /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"Calendar\",\n          width: \"100%\",\n          height: \"400px\",\n          data: calendarAllSalesProfit,\n          options: calendarSalesProfitOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 84\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: calendarAllExpenses && calendarAllExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"Calendar\",\n          width: \"100%\",\n          height: \"400px\",\n          data: calendarAllExpenses,\n          options: calendarExpenseOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 78\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          overflowY: \"scroll\",\n          height: \"700px\"\n        },\n        children: calendarAllPurchases && calendarAllPurchases.length > 0 ? /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"Calendar\",\n          width: \"100%\",\n          height: \"700px\",\n          data: calendarAllPurchases,\n          options: calendarPurchaseOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 80\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: calendarAllSalesReturns && calendarAllSalesReturns.length > 0 ? /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"Calendar\",\n          width: \"100%\",\n          height: \"400px\",\n          data: calendarAllSalesReturns,\n          options: calendarSalesReturnOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 86\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: calendarAllPurchaseReturns && calendarAllPurchaseReturns.length > 0 ? /*#__PURE__*/_jsxDEV(Chart, {\n          chartType: \"Calendar\",\n          width: \"100%\",\n          height: \"400px\",\n          data: calendarAllPurchaseReturns,\n          options: calendarPurchaseReturnOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 92\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"AuZojg8WK/9YiSubwppLiKaoco0=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = Calendar;\nexport default Calendar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Calendar$forwardRef\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"sources":["/Users/sirin/go/src/github.com/sirinibin/reactjs-pos/src/analytics/sales/calendar.js"],"names":["React","useState","useEffect","useRef","forwardRef","useImperativeHandle","Cookies","Chart","Calendar","props","ref","init","allOrders","length","makeData","calendarAllSales","setCalendarAllSales","calendarAllSalesProfit","setCalendarAllSalesProfit","calendarAllExpenses","setCalendarAllExpenses","calendarAllPurchases","setCalendarAllPurchases","calendarAllSalesReturns","setCalendarAllSalesReturns","calendarAllPurchaseReturns","setCalendarAllPurchaseReturns","calendarSalesData","type","id","calendarSalesProfitData","calendarExpenseData","calendarPurchaseData","calendarSalesReturnData","calendarPurchaseReturnData","dailySales","dailySalesProfit","sale","dt","Date","date","dtStr","getFullYear","getMonth","getDate","parseFloat","net_total","net_profit","saleDate","parts","split","push","toFixed","console","log","dailyExpenses","expense","allExpenses","amount","expenseDate","dailyPurchases","purchase","allPurchases","purchaseDate","dailySalesReturns","salesReturn","allSalesReturns","salesReturnDate","dailyPurchaseReturns","purchaseReturn","allPurchaseReturns","purchaseReturnDate","calendarSalesOptions","setCalendarSalesOptions","title","calendarSalesProfitOptions","setCalendarSalesProfitOptions","calendarExpenseOptions","setCalendarExpenseOptions","calendarPurchaseOptions","setCalendarPurchaseOptions","calendarSalesReturnOptions","setCalendarSalesReturnOptions","calendarPurchaseReturnOptions","setCalendarPurchaseReturnOptions","overflowY","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,UAA7C,EAAyDC,mBAAzD,QAAoF,OAApF;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,KAAT,QAAsB,qBAAtB;;;AAIA,MAAMC,QAAQ,gBAAGJ,UAAU,SAAC,CAACK,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACxCL,EAAAA,mBAAmB,CAACK,GAAD,EAAM,OAAO;AAC5BC,IAAAA,IAAI,GAAG;AACH,UAAIF,KAAK,CAACG,SAAN,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC5BC,QAAAA,QAAQ;AACX;AACJ;;AAL2B,GAAP,CAAN,CAAnB;AAUA,MAAI,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAtD;AACA,MAAI,CAACgB,sBAAD,EAAyBC,yBAAzB,IAAsDjB,QAAQ,CAAC,EAAD,CAAlE;AACA,MAAI,CAACkB,mBAAD,EAAsBC,sBAAtB,IAAgDnB,QAAQ,CAAC,EAAD,CAA5D;AACA,MAAI,CAACoB,oBAAD,EAAuBC,uBAAvB,IAAkDrB,QAAQ,CAAC,EAAD,CAA9D;AACA,MAAI,CAACsB,uBAAD,EAA0BC,0BAA1B,IAAwDvB,QAAQ,CAAC,EAAD,CAApE;AACA,MAAI,CAACwB,0BAAD,EAA6BC,6BAA7B,IAA8DzB,QAAQ,CAAC,EAAD,CAA1E;;AAIA,WAASa,QAAT,GAAoB;AAEhB,QAAIa,iBAAiB,GAAG,CACpB,CACI;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADJ,EAEI;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFJ,CADoB,CAAxB;AAOA,QAAIC,uBAAuB,GAAG,CAC1B,CACI;AAAEF,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADJ,EAEI;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFJ,CAD0B,CAA9B;AAOA,QAAIE,mBAAmB,GAAG,CACtB,CACI;AAAEH,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADJ,EAEI;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFJ,CADsB,CAA1B;AAOA,QAAIG,oBAAoB,GAAG,CACvB,CACI;AAAEJ,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADJ,EAEI;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFJ,CADuB,CAA3B;AAOA,QAAII,uBAAuB,GAAG,CAC1B,CACI;AAAEL,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADJ,EAEI;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFJ,CAD0B,CAA9B;AAOA,QAAIK,0BAA0B,GAAG,CAC7B,CACI;AAAEN,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KADJ,EAEI;AAAED,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAFJ,CAD6B,CAAjC;AAOA,QAAIM,UAAU,GAAG,EAAjB;AACA,QAAIC,gBAAgB,GAAG,EAAvB;;AAEA,SAAK,MAAMC,IAAX,IAAmB5B,KAAK,CAACG,SAAzB,EAAoC;AAChC,UAAI0B,EAAE,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,IAAd,CAAT;AACA,UAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,KAAmB,GAAnB,GAAyBJ,EAAE,CAACK,QAAH,EAAzB,GAAyC,GAAzC,GAA+CL,EAAE,CAACM,OAAH,EAA3D;;AACA,UAAI,CAACT,UAAU,CAACM,KAAD,CAAf,EAAwB;AACpBN,QAAAA,UAAU,CAACM,KAAD,CAAV,GAAoB,CAApB;AACH;;AAED,UAAI,CAACL,gBAAgB,CAACK,KAAD,CAArB,EAA8B;AAC1BL,QAAAA,gBAAgB,CAACK,KAAD,CAAhB,GAA0B,CAA1B;AACH;;AAEDN,MAAAA,UAAU,CAACM,KAAD,CAAV,IAAqBI,UAAU,CAACR,IAAI,CAACS,SAAN,CAA/B;AACAV,MAAAA,gBAAgB,CAACK,KAAD,CAAhB,IAA2BI,UAAU,CAACR,IAAI,CAACU,UAAN,CAArC;AACH;;AAGD,SAAK,IAAIC,QAAT,IAAqBb,UAArB,EAAiC;AAC7B,UAAIc,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAZ;AACAvB,MAAAA,iBAAiB,CAACwB,IAAlB,CAAuB,CACnB,IAAIZ,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CADmB,EAEnBJ,UAAU,CAACV,UAAU,CAACa,QAAD,CAAV,CAAqBI,OAArB,CAA6B,CAA7B,CAAD,CAFS,CAAvB;AAKAtB,MAAAA,uBAAuB,CAACqB,IAAxB,CAA6B,CACzB,IAAIZ,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CADyB,EAEzBJ,UAAU,CAACT,gBAAgB,CAACY,QAAD,CAAhB,CAA2BI,OAA3B,CAAmC,CAAnC,CAAD,CAFe,CAA7B;AAIH;;AAGDrC,IAAAA,gBAAgB,GAAGY,iBAAnB;AACAX,IAAAA,mBAAmB,CAACW,iBAAD,CAAnB;AAEA0B,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCxB,uBAAxC;AACAb,IAAAA,sBAAsB,GAAGa,uBAAzB;AACAZ,IAAAA,yBAAyB,CAACY,uBAAD,CAAzB;AAEA,QAAIyB,aAAa,GAAG,EAApB;;AACA,SAAK,MAAMC,OAAX,IAAsB/C,KAAK,CAACgD,WAA5B,EAAyC;AACrC,UAAInB,EAAE,GAAG,IAAIC,IAAJ,CAASiB,OAAO,CAAChB,IAAjB,CAAT;AACA,UAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,KAAmB,GAAnB,GAAyBJ,EAAE,CAACK,QAAH,EAAzB,GAAyC,GAAzC,GAA+CL,EAAE,CAACM,OAAH,EAA3D;;AACA,UAAI,CAACW,aAAa,CAACd,KAAD,CAAlB,EAA2B;AACvBc,QAAAA,aAAa,CAACd,KAAD,CAAb,GAAuB,CAAvB;AACH;;AACDc,MAAAA,aAAa,CAACd,KAAD,CAAb,IAAwBI,UAAU,CAACW,OAAO,CAACE,MAAT,CAAlC;AACH;;AAGD,SAAK,IAAIC,WAAT,IAAwBJ,aAAxB,EAAuC;AACnC,UAAIN,KAAK,GAAGU,WAAW,CAACT,KAAZ,CAAkB,GAAlB,CAAZ;AACAnB,MAAAA,mBAAmB,CAACoB,IAApB,CAAyB,CACrB,IAAIZ,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CADqB,EAErBJ,UAAU,CAACU,aAAa,CAACI,WAAD,CAAb,CAA2BP,OAA3B,CAAmC,CAAnC,CAAD,CAFW,CAAzB;AAIH;;AAEDjC,IAAAA,mBAAmB,GAAGY,mBAAtB;AACAX,IAAAA,sBAAsB,CAACW,mBAAD,CAAtB;AAGA,QAAI6B,cAAc,GAAG,EAArB;;AACA,SAAK,MAAMC,QAAX,IAAuBpD,KAAK,CAACqD,YAA7B,EAA2C;AACvC,UAAIxB,EAAE,GAAG,IAAIC,IAAJ,CAASsB,QAAQ,CAACrB,IAAlB,CAAT;AACA,UAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,KAAmB,GAAnB,GAAyBJ,EAAE,CAACK,QAAH,EAAzB,GAAyC,GAAzC,GAA+CL,EAAE,CAACM,OAAH,EAA3D;;AACA,UAAI,CAACgB,cAAc,CAACnB,KAAD,CAAnB,EAA4B;AACxBmB,QAAAA,cAAc,CAACnB,KAAD,CAAd,GAAwB,CAAxB;AACH;;AACDmB,MAAAA,cAAc,CAACnB,KAAD,CAAd,IAAyBI,UAAU,CAACgB,QAAQ,CAACf,SAAV,CAAnC;AACH;;AAGD,SAAK,IAAIiB,YAAT,IAAyBH,cAAzB,EAAyC;AACrC,UAAIX,KAAK,GAAGc,YAAY,CAACb,KAAb,CAAmB,GAAnB,CAAZ;AACAlB,MAAAA,oBAAoB,CAACmB,IAArB,CAA0B,CACtB,IAAIZ,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CADsB,EAEtBJ,UAAU,CAACe,cAAc,CAACG,YAAD,CAAd,CAA6BX,OAA7B,CAAqC,CAArC,CAAD,CAFY,CAA1B;AAIH;;AAED/B,IAAAA,oBAAoB,GAAGW,oBAAvB;AACAV,IAAAA,uBAAuB,CAACU,oBAAD,CAAvB,CA/HgB,CAkIhB;;AACA,QAAIgC,iBAAiB,GAAG,EAAxB;;AACA,SAAK,MAAMC,WAAX,IAA0BxD,KAAK,CAACyD,eAAhC,EAAiD;AAC7C,UAAI5B,EAAE,GAAG,IAAIC,IAAJ,CAAS0B,WAAW,CAACzB,IAArB,CAAT;AACA,UAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,KAAmB,GAAnB,GAAyBJ,EAAE,CAACK,QAAH,EAAzB,GAAyC,GAAzC,GAA+CL,EAAE,CAACM,OAAH,EAA3D;;AACA,UAAI,CAACoB,iBAAiB,CAACvB,KAAD,CAAtB,EAA+B;AAC3BuB,QAAAA,iBAAiB,CAACvB,KAAD,CAAjB,GAA2B,CAA3B;AACH;;AACDuB,MAAAA,iBAAiB,CAACvB,KAAD,CAAjB,IAA4BI,UAAU,CAACoB,WAAW,CAACnB,SAAb,CAAtC;AACH;;AAED,SAAK,IAAIqB,eAAT,IAA4BH,iBAA5B,EAA+C;AAC3C,UAAIf,KAAK,GAAGkB,eAAe,CAACjB,KAAhB,CAAsB,GAAtB,CAAZ;AACAjB,MAAAA,uBAAuB,CAACkB,IAAxB,CAA6B,CACzB,IAAIZ,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CADyB,EAEzBJ,UAAU,CAACmB,iBAAiB,CAACG,eAAD,CAAjB,CAAmCf,OAAnC,CAA2C,CAA3C,CAAD,CAFe,CAA7B;AAIH;;AAED7B,IAAAA,uBAAuB,GAAGU,uBAA1B;AACAT,IAAAA,0BAA0B,CAACS,uBAAD,CAA1B,CAtJgB,CAyJhB;;AACA,QAAImC,oBAAoB,GAAG,EAA3B;;AACA,SAAK,MAAMC,cAAX,IAA6B5D,KAAK,CAAC6D,kBAAnC,EAAuD;AACnD,UAAIhC,EAAE,GAAG,IAAIC,IAAJ,CAAS8B,cAAc,CAAC7B,IAAxB,CAAT;AACA,UAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,KAAmB,GAAnB,GAAyBJ,EAAE,CAACK,QAAH,EAAzB,GAAyC,GAAzC,GAA+CL,EAAE,CAACM,OAAH,EAA3D;;AACA,UAAI,CAACwB,oBAAoB,CAAC3B,KAAD,CAAzB,EAAkC;AAC9B2B,QAAAA,oBAAoB,CAAC3B,KAAD,CAApB,GAA8B,CAA9B;AACH;;AACD2B,MAAAA,oBAAoB,CAAC3B,KAAD,CAApB,IAA+BI,UAAU,CAACwB,cAAc,CAACvB,SAAhB,CAAzC;AACH;;AAGD,SAAK,IAAIyB,kBAAT,IAA+BH,oBAA/B,EAAqD;AACjD,UAAInB,KAAK,GAAGsB,kBAAkB,CAACrB,KAAnB,CAAyB,GAAzB,CAAZ;AACAhB,MAAAA,0BAA0B,CAACiB,IAA3B,CAAgC,CAC5B,IAAIZ,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,EAA6BA,KAAK,CAAC,CAAD,CAAlC,CAD4B,EAE5BJ,UAAU,CAACuB,oBAAoB,CAACG,kBAAD,CAApB,CAAyCnB,OAAzC,CAAiD,CAAjD,CAAD,CAFkB,CAAhC;AAIH;;AAED3B,IAAAA,0BAA0B,GAAGS,0BAA7B;AACAR,IAAAA,6BAA6B,CAACQ,0BAAD,CAA7B;AACH;;AAGD,QAAM,CAACsC,oBAAD,EAAuBC,uBAAvB,IAAkDxE,QAAQ,CAAC;AAC7DyE,IAAAA,KAAK,EAAE;AADsD,GAAD,CAAhE;AAIA,QAAM,CAACC,0BAAD,EAA6BC,6BAA7B,IAA8D3E,QAAQ,CAAC;AACzEyE,IAAAA,KAAK,EAAE;AADkE,GAAD,CAA5E;AAGA,QAAM,CAACG,sBAAD,EAAyBC,yBAAzB,IAAsD7E,QAAQ,CAAC;AACjEyE,IAAAA,KAAK,EAAE;AAD0D,GAAD,CAApE;AAGA,QAAM,CAACK,uBAAD,EAA0BC,0BAA1B,IAAwD/E,QAAQ,CAAC;AACnEyE,IAAAA,KAAK,EAAE;AAD4D,GAAD,CAAtE;AAIA,QAAM,CAACO,0BAAD,EAA6BC,6BAA7B,IAA8DjF,QAAQ,CAAC;AACzEyE,IAAAA,KAAK,EAAE;AADkE,GAAD,CAA5E;AAIA,QAAM,CAACS,6BAAD,EAAgCC,gCAAhC,IAAoEnF,QAAQ,CAAC;AAC/EyE,IAAAA,KAAK,EAAE;AADwE,GAAD,CAAlF;AAQAxE,EAAAA,SAAS,CAAC,MAAM;AACZmD,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EADY,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKvC,gBAAgB,IAAIA,gBAAgB,CAACF,MAAjB,GAA0B,CAA9C,gBAAkD,QAAC,KAAD;AAC/C,UAAA,SAAS,EAAC,UADqC;AAE/C,UAAA,KAAK,EAAC,MAFyC;AAG/C,UAAA,MAAM,EAAC,OAHwC;AAI/C,UAAA,IAAI,EAAEE,gBAJyC;AAK/C,UAAA,OAAO,EAAEyD;AALsC;AAAA;AAAA;AAAA;AAAA,gBAAlD,GAOI;AART;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKvD,sBAAsB,IAAIA,sBAAsB,CAACJ,MAAvB,GAAgC,CAA1D,gBAA8D,QAAC,KAAD;AAC3D,UAAA,SAAS,EAAC,UADiD;AAE3D,UAAA,KAAK,EAAC,MAFqD;AAG3D,UAAA,MAAM,EAAC,OAHoD;AAI3D,UAAA,IAAI,EAAEI,sBAJqD;AAK3D,UAAA,OAAO,EAAE0D;AALkD;AAAA;AAAA;AAAA;AAAA,gBAA9D,GAMI;AAPT;AAAA;AAAA;AAAA;AAAA,cAXJ,eAoBI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKxD,mBAAmB,IAAIA,mBAAmB,CAACN,MAApB,GAA6B,CAApD,gBAAwD,QAAC,KAAD;AACrD,UAAA,SAAS,EAAC,UAD2C;AAErD,UAAA,KAAK,EAAC,MAF+C;AAGrD,UAAA,MAAM,EAAC,OAH8C;AAIrD,UAAA,IAAI,EAAEM,mBAJ+C;AAKrD,UAAA,OAAO,EAAE0D;AAL4C;AAAA;AAAA;AAAA;AAAA,gBAAxD,GAMI;AAPT;AAAA;AAAA;AAAA;AAAA,cApBJ,eA8BI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE;AAAEQ,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,MAAM,EAAE;AAA/B,SAA5B;AAAA,kBACKjE,oBAAoB,IAAIA,oBAAoB,CAACR,MAArB,GAA8B,CAAtD,gBAA0D,QAAC,KAAD;AACvD,UAAA,SAAS,EAAC,UAD6C;AAEvD,UAAA,KAAK,EAAC,MAFiD;AAGvD,UAAA,MAAM,EAAC,OAHgD;AAIvD,UAAA,IAAI,EAAEQ,oBAJiD;AAKvD,UAAA,OAAO,EAAE0D;AAL8C;AAAA;AAAA;AAAA;AAAA,gBAA1D,GAMI;AAPT;AAAA;AAAA;AAAA;AAAA,cA9BJ,eAwCI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKxD,uBAAuB,IAAIA,uBAAuB,CAACV,MAAxB,GAAiC,CAA5D,gBAAgE,QAAC,KAAD;AAC7D,UAAA,SAAS,EAAC,UADmD;AAE7D,UAAA,KAAK,EAAC,MAFuD;AAG7D,UAAA,MAAM,EAAC,OAHsD;AAI7D,UAAA,IAAI,EAAEU,uBAJuD;AAK7D,UAAA,OAAO,EAAE0D;AALoD;AAAA;AAAA;AAAA;AAAA,gBAAhE,GAMI;AAPT;AAAA;AAAA;AAAA;AAAA,cAxCJ,eAkDI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKxD,0BAA0B,IAAIA,0BAA0B,CAACZ,MAA3B,GAAoC,CAAlE,gBAAsE,QAAC,KAAD;AACnE,UAAA,SAAS,EAAC,UADyD;AAEnE,UAAA,KAAK,EAAC,MAF6D;AAGnE,UAAA,MAAM,EAAC,OAH4D;AAInE,UAAA,IAAI,EAAEY,0BAJ6D;AAKnE,UAAA,OAAO,EAAE0D;AAL0D;AAAA;AAAA;AAAA;AAAA,gBAAtE,GAMI;AAPT;AAAA;AAAA;AAAA;AAAA,cAlDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgEH,CAvS0B;AAAA,UACvB9E,mBADuB;AAAA,GAA3B;MAAMG,Q;AAySN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef, useImperativeHandle } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Chart } from \"react-google-charts\";\n\n\n\nconst Calendar = forwardRef((props, ref) => {\n    useImperativeHandle(ref, () => ({\n        init() {\n            if (props.allOrders.length > 0) {\n                makeData();\n            }\n        }\n    }));\n\n\n\n    let [calendarAllSales, setCalendarAllSales] = useState([]);\n    let [calendarAllSalesProfit, setCalendarAllSalesProfit] = useState([]);\n    let [calendarAllExpenses, setCalendarAllExpenses] = useState([]);\n    let [calendarAllPurchases, setCalendarAllPurchases] = useState([]);\n    let [calendarAllSalesReturns, setCalendarAllSalesReturns] = useState([]);\n    let [calendarAllPurchaseReturns, setCalendarAllPurchaseReturns] = useState([]);\n\n\n\n    function makeData() {\n\n        let calendarSalesData = [\n            [\n                { type: \"date\", id: \"Date\" },\n                { type: \"number\", id: \"Sales\" },\n            ],\n        ];\n\n        let calendarSalesProfitData = [\n            [\n                { type: \"date\", id: \"Date\" },\n                { type: \"number\", id: \"Profit\" },\n            ],\n        ];\n\n        let calendarExpenseData = [\n            [\n                { type: \"date\", id: \"Date\" },\n                { type: \"number\", id: \"Expense\" },\n            ],\n        ];\n\n        let calendarPurchaseData = [\n            [\n                { type: \"date\", id: \"Date\" },\n                { type: \"number\", id: \"Purchase\" },\n            ],\n        ];\n\n        let calendarSalesReturnData = [\n            [\n                { type: \"date\", id: \"Date\" },\n                { type: \"number\", id: \"Sales Return\" },\n            ],\n        ];\n\n        let calendarPurchaseReturnData = [\n            [\n                { type: \"date\", id: \"Date\" },\n                { type: \"number\", id: \"Purchase Return\" },\n            ],\n        ];\n\n        let dailySales = [];\n        let dailySalesProfit = [];\n\n        for (const sale of props.allOrders) {\n            let dt = new Date(sale.date);\n            let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n            if (!dailySales[dtStr]) {\n                dailySales[dtStr] = 0;\n            }\n\n            if (!dailySalesProfit[dtStr]) {\n                dailySalesProfit[dtStr] = 0;\n            }\n\n            dailySales[dtStr] += parseFloat(sale.net_total);\n            dailySalesProfit[dtStr] += parseFloat(sale.net_profit);\n        }\n\n\n        for (let saleDate in dailySales) {\n            let parts = saleDate.split('-');\n            calendarSalesData.push([\n                new Date(parts[0], parts[1], parts[2]),\n                parseFloat(dailySales[saleDate].toFixed(2)),\n            ]);\n\n            calendarSalesProfitData.push([\n                new Date(parts[0], parts[1], parts[2]),\n                parseFloat(dailySalesProfit[saleDate].toFixed(2)),\n            ]);\n        }\n\n\n        calendarAllSales = calendarSalesData\n        setCalendarAllSales(calendarSalesData);\n\n        console.log(\"calendarSalesProfitData:\", calendarSalesProfitData);\n        calendarAllSalesProfit = calendarSalesProfitData;\n        setCalendarAllSalesProfit(calendarSalesProfitData);\n\n        let dailyExpenses = [];\n        for (const expense of props.allExpenses) {\n            let dt = new Date(expense.date);\n            let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n            if (!dailyExpenses[dtStr]) {\n                dailyExpenses[dtStr] = 0;\n            }\n            dailyExpenses[dtStr] += parseFloat(expense.amount);\n        }\n\n\n        for (let expenseDate in dailyExpenses) {\n            let parts = expenseDate.split('-');\n            calendarExpenseData.push([\n                new Date(parts[0], parts[1], parts[2]),\n                parseFloat(dailyExpenses[expenseDate].toFixed(2)),\n            ]);\n        }\n\n        calendarAllExpenses = calendarExpenseData\n        setCalendarAllExpenses(calendarExpenseData);\n\n\n        let dailyPurchases = [];\n        for (const purchase of props.allPurchases) {\n            let dt = new Date(purchase.date);\n            let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n            if (!dailyPurchases[dtStr]) {\n                dailyPurchases[dtStr] = 0;\n            }\n            dailyPurchases[dtStr] += parseFloat(purchase.net_total);\n        }\n\n\n        for (let purchaseDate in dailyPurchases) {\n            let parts = purchaseDate.split('-');\n            calendarPurchaseData.push([\n                new Date(parts[0], parts[1], parts[2]),\n                parseFloat(dailyPurchases[purchaseDate].toFixed(2)),\n            ]);\n        }\n\n        calendarAllPurchases = calendarPurchaseData\n        setCalendarAllPurchases(calendarPurchaseData);\n\n\n        //sales returns\n        let dailySalesReturns = [];\n        for (const salesReturn of props.allSalesReturns) {\n            let dt = new Date(salesReturn.date);\n            let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n            if (!dailySalesReturns[dtStr]) {\n                dailySalesReturns[dtStr] = 0;\n            }\n            dailySalesReturns[dtStr] += parseFloat(salesReturn.net_total);\n        }\n\n        for (let salesReturnDate in dailySalesReturns) {\n            let parts = salesReturnDate.split('-');\n            calendarSalesReturnData.push([\n                new Date(parts[0], parts[1], parts[2]),\n                parseFloat(dailySalesReturns[salesReturnDate].toFixed(2)),\n            ]);\n        }\n\n        calendarAllSalesReturns = calendarSalesReturnData\n        setCalendarAllSalesReturns(calendarSalesReturnData);\n\n\n        //purchase returns\n        let dailyPurchaseReturns = [];\n        for (const purchaseReturn of props.allPurchaseReturns) {\n            let dt = new Date(purchaseReturn.date);\n            let dtStr = dt.getFullYear() + \"-\" + dt.getMonth() + \"-\" + dt.getDate();\n            if (!dailyPurchaseReturns[dtStr]) {\n                dailyPurchaseReturns[dtStr] = 0;\n            }\n            dailyPurchaseReturns[dtStr] += parseFloat(purchaseReturn.net_total);\n        }\n\n\n        for (let purchaseReturnDate in dailyPurchaseReturns) {\n            let parts = purchaseReturnDate.split('-');\n            calendarPurchaseReturnData.push([\n                new Date(parts[0], parts[1], parts[2]),\n                parseFloat(dailyPurchaseReturns[purchaseReturnDate].toFixed(2)),\n            ]);\n        }\n\n        calendarAllPurchaseReturns = calendarPurchaseReturnData\n        setCalendarAllPurchaseReturns(calendarPurchaseReturnData);\n    }\n\n\n    const [calendarSalesOptions, setCalendarSalesOptions] = useState({\n        title: 'Daily Sales',\n    });\n\n    const [calendarSalesProfitOptions, setCalendarSalesProfitOptions] = useState({\n        title: 'Daily Profit',\n    });\n    const [calendarExpenseOptions, setCalendarExpenseOptions] = useState({\n        title: 'Daily Expenses',\n    });\n    const [calendarPurchaseOptions, setCalendarPurchaseOptions] = useState({\n        title: 'Daily Purchases',\n    });\n\n    const [calendarSalesReturnOptions, setCalendarSalesReturnOptions] = useState({\n        title: 'Daily Sales Returns',\n    });\n\n    const [calendarPurchaseReturnOptions, setCalendarPurchaseReturnOptions] = useState({\n        title: 'Daily Purchase Returns',\n    });\n\n\n\n\n\n    useEffect(() => {\n        console.log(\"Inside useEffect\");\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    return (\n        <>\n            <div className=\"container-fluid p-0\">\n                <div className=\"row\">\n                    {calendarAllSales && calendarAllSales.length > 0 ? <Chart\n                        chartType=\"Calendar\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={calendarAllSales}\n                        options={calendarSalesOptions}\n\n                    /> : \"\"}\n                </div>\n                <div className=\"row\">\n                    {calendarAllSalesProfit && calendarAllSalesProfit.length > 0 ? <Chart\n                        chartType=\"Calendar\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={calendarAllSalesProfit}\n                        options={calendarSalesProfitOptions}\n                    /> : \"\"}\n                </div>\n                <div className=\"row\">\n                    {calendarAllExpenses && calendarAllExpenses.length > 0 ? <Chart\n                        chartType=\"Calendar\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={calendarAllExpenses}\n                        options={calendarExpenseOptions}\n                    /> : \"\"}\n                </div>\n\n                <div className=\"row\" style={{ overflowY: \"scroll\", height: \"700px\" }} >\n                    {calendarAllPurchases && calendarAllPurchases.length > 0 ? <Chart\n                        chartType=\"Calendar\"\n                        width=\"100%\"\n                        height=\"700px\"\n                        data={calendarAllPurchases}\n                        options={calendarPurchaseOptions}\n                    /> : \"\"}\n                </div>\n\n                <div className=\"row\"  >\n                    {calendarAllSalesReturns && calendarAllSalesReturns.length > 0 ? <Chart\n                        chartType=\"Calendar\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={calendarAllSalesReturns}\n                        options={calendarSalesReturnOptions}\n                    /> : \"\"}\n                </div>\n\n                <div className=\"row\"  >\n                    {calendarAllPurchaseReturns && calendarAllPurchaseReturns.length > 0 ? <Chart\n                        chartType=\"Calendar\"\n                        width=\"100%\"\n                        height=\"400px\"\n                        data={calendarAllPurchaseReturns}\n                        options={calendarPurchaseReturnOptions}\n                    /> : \"\"}\n                </div>\n            </div>\n        </>\n    );\n});\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}