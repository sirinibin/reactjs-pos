'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var PropTypes = _interopDefault(require('prop-types'));
var reactBootstrap = require('react-bootstrap');
var reactConfirm = require('react-confirm');

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var Confirmation = function Confirmation(_ref) {
  var show = _ref.show,
      proceed = _ref.proceed,
      dismiss = _ref.dismiss,
      cancel = _ref.cancel,
      confirmation = _ref.confirmation,
      title = _ref.title,
      okText = _ref.okText,
      cancelText = _ref.cancelText,
      okButtonStyle = _ref.okButtonStyle,
      cancelButtonStyle = _ref.cancelButtonStyle,
      options = _objectWithoutProperties(_ref, ["show", "proceed", "dismiss", "cancel", "confirmation", "title", "okText", "cancelText", "okButtonStyle", "cancelButtonStyle"]);

  var header = title ? React.createElement(reactBootstrap.Modal.Header, null, React.createElement(reactBootstrap.Modal.Title, null, title)) : undefined;
  return React.createElement(reactBootstrap.Modal, {
    size: "small",
    show: show,
    onHide: function onHide() {
      return proceed(false);
    },
    backdrop: "static",
    centered: true
  }, header, React.createElement(reactBootstrap.Modal.Body, null, confirmation), React.createElement(reactBootstrap.Modal.Footer, null, React.createElement(reactBootstrap.Button, {
    variant: cancelButtonStyle,
    onClick: function onClick() {
      return proceed(false);
    }
  }, cancelText), React.createElement(reactBootstrap.Button, {
    variant: okButtonStyle,
    onClick: function onClick() {
      return proceed(true);
    }
  }, okText)));
};

Confirmation.propTypes = {
  /** header title */
  title: PropTypes.string,
  confirmation: PropTypes.string,
  // arguments of your confirm function
  okText: PropTypes.string,
  cancelText: PropTypes.string,
  okButtonStyle: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark', 'link']),
  cancelButtonStyle: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark', 'link']),
  show: PropTypes.bool,
  // from confirmable.
  proceed: PropTypes.func,
  // from confirmable.
  cancel: PropTypes.func,
  // from confirmable.
  dismiss: PropTypes.func // from confirmable.

};
Confirmation.defaultProps = {
  title: undefined,
  confirmation: undefined,
  okText: 'OK',
  cancelText: 'Cancel',
  okButtonStyle: 'primary',
  cancelButtonStyle: 'secondary',
  show: undefined,
  proceed: undefined,
  cancel: undefined,
  dismiss: undefined
};
var confirmLow = reactConfirm.createConfirmation(reactConfirm.confirmable(Confirmation));
var confirm = function confirm(message) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return confirmLow(Object.assign({
    confirmation: message
  }, options));
};

var Alert = function Alert(_ref2) {
  var show = _ref2.show,
      proceed = _ref2.proceed,
      dismiss = _ref2.dismiss,
      cancel = _ref2.cancel,
      confirmation = _ref2.confirmation,
      title = _ref2.title,
      okText = _ref2.okText,
      okButtonStyle = _ref2.okButtonStyle,
      options = _objectWithoutProperties(_ref2, ["show", "proceed", "dismiss", "cancel", "confirmation", "title", "okText", "okButtonStyle"]);

  var header = title ? React.createElement(reactBootstrap.Modal.Header, null, React.createElement(reactBootstrap.Modal.Title, null, title)) : undefined;
  return React.createElement(reactBootstrap.Modal, {
    size: "small",
    show: show,
    onHide: function onHide() {
      return proceed();
    },
    keyboard: true,
    backdrop: "static",
    centered: true
  }, header, React.createElement(reactBootstrap.Modal.Body, null, confirmation), React.createElement(reactBootstrap.Modal.Footer, null, React.createElement(reactBootstrap.Button, {
    variant: okButtonStyle,
    onClick: function onClick() {
      return proceed();
    }
  }, okText)));
};

Alert.propTypes = {
  /** header title */
  title: PropTypes.string,
  confirmation: PropTypes.string,
  // arguments of your confirm function
  okText: PropTypes.string,
  okButtonStyle: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark', 'link']),
  show: PropTypes.bool,
  // from confirmable.
  proceed: PropTypes.func,
  // from confirmable.
  cancel: PropTypes.func,
  // from confirmable.
  dismiss: PropTypes.func // from confirmable.

};
Alert.defaultProps = {
  title: undefined,
  confirmation: undefined,
  okText: 'OK',
  okButtonStyle: 'primary',
  show: undefined,
  proceed: undefined,
  cancel: undefined,
  dismiss: undefined
};
var alertLow = reactConfirm.createConfirmation(reactConfirm.confirmable(Alert));
var alert = function alert(message) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return alertLow(Object.assign({
    confirmation: message
  }, options));
};

exports.alert = alert;
exports.confirm = confirm;
