import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["className", "isInvalid", "isValid", "size"];

/* eslint-disable @typescript-eslint/no-explicit-any */
import cx from 'classnames';
import React from 'react';
import { getDisplayName, isSizeLarge, isSizeSmall } from '../utils';

function withClassNames(Component) {
  var WrappedComponent = function WrappedComponent(_ref) {
    var className = _ref.className,
        isInvalid = _ref.isInvalid,
        isValid = _ref.isValid,
        size = _ref.size,
        props = _objectWithoutProperties(_ref, _excluded);

    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {
      className: cx('form-control', 'rbt-input', {
        'form-control-lg': isSizeLarge(size),
        'form-control-sm': isSizeSmall(size),
        'is-invalid': isInvalid,
        'is-valid': isValid
      }, className)
    }));
  };

  WrappedComponent.displayName = "withClassNames(".concat(getDisplayName(Component), ")");
  return WrappedComponent;
}

export default withClassNames;