import PropTypes from 'prop-types';
import { HTMLProps, ReactNode, Ref } from 'react';
export interface MenuProps extends HTMLProps<HTMLDivElement> {
    emptyLabel?: ReactNode;
    innerRef: Ref<HTMLDivElement>;
    inputHeight: number;
    scheduleUpdate: (() => void) | null;
    maxHeight?: string;
    text: string;
}
declare const Menu: {
    ({ children, className, emptyLabel, innerRef, inputHeight, maxHeight, scheduleUpdate, style, text, ...props }: MenuProps): JSX.Element;
    propTypes: {
        'aria-label': PropTypes.Requireable<string>;
        emptyLabel: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        id: (props: import("../types").TypeaheadProps, propName: keyof import("../types").TypeaheadProps, componentName: string) => void;
        maxHeight: PropTypes.Requireable<string>;
    };
    defaultProps: {
        'aria-label': string;
    };
    Divider: () => JSX.Element;
    Header: (props: HTMLProps<HTMLDivElement>) => JSX.Element;
};
export default Menu;
