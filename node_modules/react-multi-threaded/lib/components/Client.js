"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var uuid_1 = require("uuid");
var Transport_1 = require("../Transport");
var RootComponent_1 = __importDefault(require("./RootComponent"));
var stringifyWithoutCircular = function (json) {
    // to avoid crash while using circular props
    var getCircularReplacer = function () {
        var seen = new WeakSet();
        return function (_key, value) {
            if (typeof value === "object" && value !== null) {
                if (seen.has(value)) {
                    return;
                }
                seen.add(value);
            }
            return value;
        };
    };
    return JSON.stringify(json, getCircularReplacer());
};
var Client = /** @class */ (function (_super) {
    __extends(Client, _super);
    function Client() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            runningViews: [],
        };
        _this.transport = _this.props.transport || Transport_1.createTransport();
        return _this;
    }
    Object.defineProperty(Client.prototype, "UIComponents", {
        get: function () {
            return __spreadArrays(this.props.UIComponents, [RootComponent_1.default]);
        },
        enumerable: false,
        configurable: true
    });
    Client.prototype.componentDidMount = function () {
        var _this = this;
        this.transport.on("update_views_tree", function (_a) {
            var views = _a.views;
            _this.setState({ runningViews: views });
        });
        this.transport.on("update_view", function (_a) {
            var view = _a.view;
            _this.setState(function (state) {
                var runningViewIndex = state.runningViews.findIndex(function (currentView) { return currentView.uid === view.uid; });
                if (runningViewIndex !== -1) {
                    state.runningViews[runningViewIndex] = view;
                }
                else {
                    state.runningViews.push(view);
                }
                return { runningViews: __spreadArrays(state.runningViews) };
            });
        });
        this.transport.on("delete_view", function (_a) {
            var viewUid = _a.viewUid;
            _this.setState(function (state) {
                var runningViewIndex = state.runningViews.findIndex(function (view) { return view.uid === viewUid; });
                if (runningViewIndex !== -1) {
                    state.runningViews.splice(runningViewIndex, 1);
                    return { runningViews: __spreadArrays(state.runningViews) };
                }
            });
        });
        this.transport.on("on_worker_start", function () {
            _this.transport.emit("request_views_tree");
        });
    };
    Client.prototype.renderView = function (view) {
        var _this = this;
        var componentToRender = this.UIComponents.find(function (component) { return component.name === view.name; });
        if (componentToRender) {
            var props_1 = { key: view.uid };
            view.props.forEach(function (prop) {
                if (prop.type === "data") {
                    props_1[prop.name] = prop.data;
                }
                else if (prop.type === "event")
                    [
                        (props_1[prop.name] = function () {
                            var args = [];
                            for (var _i = 0; _i < arguments.length; _i++) {
                                args[_i] = arguments[_i];
                            }
                            return new Promise(function (resolve) {
                                var requestUid = uuid_1.v4();
                                _this.transport.on("respond_to_event", function (_a) {
                                    var data = _a.data, uid = _a.uid, eventUid = _a.eventUid;
                                    if (uid === requestUid && eventUid === prop.uid) {
                                        resolve(data);
                                    }
                                });
                                _this.transport.emit("request_event", {
                                    eventArguments: JSON.parse(stringifyWithoutCircular(args)),
                                    eventUid: prop.uid,
                                    uid: requestUid,
                                });
                            });
                        }),
                    ];
            });
            var children = this.state.runningViews
                .filter(function (runningView) { return runningView.parentUid === view.uid; })
                .sort(function (a, b) { return a.childIndex - b.childIndex; })
                .map(function (runningView) { return _this.renderView(runningView); });
            return react_1.default.createElement(componentToRender, __assign(__assign({}, props_1), { children: children.length > 0 ? children : undefined }));
        }
        throw new Error("missing componnent " + view.name + " please pass it to the views array");
    };
    Client.prototype.render = function () {
        var root = this.state.runningViews.find(function (view) { return view.isRoot; });
        if (!root) {
            return react_1.default.createElement(react_1.default.Fragment, null);
        }
        return this.renderView(root);
    };
    return Client;
}(react_1.default.Component));
exports.default = Client;
//# sourceMappingURL=Client.js.map