"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsUIComponent = void 0;
var react_1 = __importDefault(require("react"));
var uuid_1 = require("uuid");
var Contexts_1 = require("../Contexts");
var createFunction_1 = require("../utils/createFunction");
var ViewParentContext = react_1.default.createContext(undefined);
var AsUIComponent = function (component) {
    return createFunction_1.createFunction(component.name, function (props) {
        return (react_1.default.createElement(UIComponentContainer, { component: component, props: props }));
    });
};
exports.AsUIComponent = AsUIComponent;
var UIComponentContainer = /** @class */ (function (_super) {
    __extends(UIComponentContainer, _super);
    function UIComponentContainer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.uid = uuid_1.v4();
        _this.mountState = "premounted";
        _this.componentDidMount = function () {
            if (_this.context === "worker") {
                _this.mountState = "mounted";
                _this.forceUpdate();
            }
        };
        _this.componentWillUnmount = function () {
            if (_this.context === "worker") {
                _this.mountState = "unmounted";
                if (_this.workerApp) {
                    _this.workerApp.deleteRunningView(_this.uid);
                }
            }
        };
        _this.workerRender = function () {
            return (react_1.default.createElement(Contexts_1.WorkerAppContext.Consumer, null, function (app) {
                if (!app || _this.mountState !== "mounted") {
                    return react_1.default.createElement(react_1.default.Fragment, null, " ");
                }
                _this.workerApp = app;
                return (react_1.default.createElement(ViewParentContext.Consumer, null, function (parent) {
                    app.updateRunningView({
                        parentUid: (parent === null || parent === void 0 ? void 0 : parent.uid) || "",
                        isRoot: parent === undefined,
                        childIndex: (parent === null || parent === void 0 ? void 0 : parent.childIndex) || 0,
                        name: _this.props.component.name,
                        props: _this.props.props,
                        uid: _this.uid,
                    });
                    if (Array.isArray(_this.props.children)) {
                        return _this.props.props.children.map(function (child, index) { return (react_1.default.createElement(ViewParentContext.Provider, { key: index, value: { uid: _this.uid, childIndex: index } }, child)); });
                    }
                    else {
                        return (react_1.default.createElement(ViewParentContext.Provider, { value: { uid: _this.uid, childIndex: 0 } }, _this.props.props.children));
                    }
                }));
            }));
        };
        return _this;
    }
    UIComponentContainer.prototype.render = function () {
        if (this.context === "worker") {
            return this.workerRender();
        }
        else {
            var Component = this.props.component;
            return react_1.default.createElement(Component, this.props.props);
        }
    };
    UIComponentContainer.contextType = Contexts_1.AppTypeContext;
    return UIComponentContainer;
}(react_1.default.Component));
//# sourceMappingURL=UIComponent.js.map